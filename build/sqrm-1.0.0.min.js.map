{"version":3,"file":"sqrm-1.0.0.min.js","sources":["../node_modules/bail/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../src/unified/parse-indented-lines.js","../node_modules/smile2emoji/lib/index.js","../node_modules/html-entities/lib/named-references.js","../node_modules/html-entities/lib/numeric-unicode-map.js","../node_modules/html-entities/lib/surrogate-pairs.js","../node_modules/html-entities/lib/index.js","../src/util/hastscript-tools.js","../node_modules/acorn/dist/acorn.mjs","../src/util/quoted-string.js","../src/util/str-to-esast.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/linkifyjs/dist/linkify.es.js","../node_modules/linkify-string/dist/linkify-string.es.js","../src/util/str-to-link.js","../src/util/parse-text.js","../src/util/parse-table-row.js","../src/unified/plugin-ilines-to-sast.js","../node_modules/estree-util-visit/lib/index.js","../node_modules/unist-util-position-from-estree/lib/index.js","../node_modules/esast-util-from-estree/lib/index.js","../src/unified/plugin-sast-to-esast.js","../src/unified/parse-ecma.js","../node_modules/astring/dist/astring.mjs","../src/unified/compile-ecma.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/zwitch/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/ccount/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/rehype-stringify/lib/index.js","../src/json-tree.js","../src/util/sast-text-to-hast.js","../src/util/sast-table-to-hast.js","../src/sqrm-context.js","../src/util/sast-footnotes-to-hast.js","../src/sqrm.js"],"sourcesContent":["/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","\n\nexport default function parseIndentedLines(options = { indentation: 2 }) {\n    const self = this\n    self.parser = parser\n    self.options = { ...options }\n    self.options.indentation = options.indentation || 2\n  \n    function parser(doc,vfile) {\n\n        const root = {\n            type: 'ilines',\n            children: [],\n            // position: {\n            //     start: { line: 1, column: 1, offset: 0 },\n            //     end: { line: -1, column: -1, offset: doc.length }\n            // }\n        };\n\n        const l = doc.length\n        let i = 0;\n        let j = 0;\n        let n = 1;\n    \n        let atLineStart = true\n        let indent = 0\n    \n        function addLine(split) {\n            const ilineIndent = Math.floor(indent/self.options.indentation)\n            root.children.push({\n                type: 'iline',\n                indent: ilineIndent,\n                value: doc.substring(i+ilineIndent*self.options.indentation,j),\n                // position: {\n                //     start: { line: n, column: indent+1, offset: i+indent },\n                //     end: { line: n, column: j-i+1, offset: j }    \n                // },\n                // children: [{\n                //     type: 'text',\n                //     position: {\n                //     }\n                // }]\n            })\n\n            ++n\n            atLineStart = true\n            indent = 0\n            i = j + split;\n            j = i\n        }\n    \n        while (j<l) {\n    \n            const s = doc[j]\n            if (atLineStart) {\n                if (s==' ') {\n                    ++indent\n                } else {\n                    atLineStart = false\n                }\n            }\n            if (s=='\\r') {\n                if (j+1<l && doc[j+1]=='\\n') {\n                    addLine(2)\n                } else {\n                    j++\n                }\n            } else if (s=='\\n') {\n                addLine(1)\n            } else {\n                ++j\n            }\n        }\n        addLine(0)\n\n        // root.position.end.line = n-1\n        // root.position.end.column = j-i+1\n\n        return root;\n    }\n}\n","/**\n * With this simple and little module you can convert the smiles in your text to emoji.\n *\n * @module\n */\n/**\n * A map of text to their emoji representation.\n */\nexport const emojiMap = {\n    'o/': '👋',\n    '</3': '💔',\n    '<3': '💗',\n    '8-D': '😁',\n    '8D': '😁',\n    ':-D': '😁',\n    ':-3': '😁',\n    ':3': '😁',\n    ':D': '😁',\n    'B^D': '😁',\n    'X-D': '😁',\n    XD: '😁',\n    'x-D': '😁',\n    xD: '😁',\n    \":')\": '😂',\n    \":'-)\": '😂',\n    ':-))': '😃',\n    '8)': '😄',\n    ':)': '😊',\n    ':-)': '😄',\n    ':]': '😄',\n    ':^)': '😄',\n    ':c)': '😄',\n    ':o)': '😄',\n    ':}': '😄',\n    ':っ)': '😄',\n    '0:)': '😇',\n    '0:-)': '😇',\n    '0:-3': '😇',\n    '0:3': '😇',\n    '0;^)': '😇',\n    'O:-)': '😇',\n    '3:)': '😈',\n    '3:-)': '😈',\n    '}:)': '😈',\n    '}:-)': '😈',\n    '*)': '😉',\n    '*-)': '😉',\n    ':-,': '😉',\n    ';)': '😉',\n    ';-)': '😉',\n    ';-]': '😉',\n    ';D': '😉',\n    ';]': '😉',\n    ';^)': '😉',\n    ':-|': '😐',\n    ':|': '😐',\n    ':(': '😞',\n    ':-(': '😒',\n    ':-<': '😒',\n    ':-[': '😒',\n    ':-c': '😒',\n    ':<': '😒',\n    ':[': '😒',\n    ':c': '😒',\n    ':{': '😒',\n    ':っC': '😒',\n    '%)': '😖',\n    '%-)': '😖',\n    ':-P': '😜',\n    ':-b': '😜',\n    ':-p': '😜',\n    ':-Þ': '😜',\n    ':-þ': '😜',\n    ':P': '😜',\n    ':b': '😜',\n    ':p': '😜',\n    ':Þ': '😜',\n    ':þ': '😜',\n    ';(': '😜',\n    'X-P': '😜',\n    XP: '😜',\n    'd:': '😜',\n    'x-p': '😜',\n    xp: '😜',\n    ':-||': '😠',\n    ':@': '😠',\n    ':-.': '😡',\n    ':-/': '😡',\n    ':/': '😐',\n    ':L': '😡',\n    ':S': '😡',\n    ':\\\\': '😡',\n    \":'(\": '😢',\n    \":'-(\": '😢',\n    '^5': '😤',\n    '^<_<': '😤',\n    'o/\\\\o': '😤',\n    '|-O': '😫',\n    '|;-)': '😫',\n    ':###..': '😰',\n    ':#': '😅',\n    ':-###..': '😰',\n    \"D-':\": '😱',\n    D8: '😱',\n    'D:': '😱',\n    'D:<': '😱',\n    'D;': '😱',\n    DX: '😱',\n    'v.v': '😱',\n    '8-0': '😲',\n    ':-O': '😲',\n    ':-o': '😲',\n    ':O': '😲',\n    ':o': '😲',\n    'O-O': '😲',\n    O_O: '😲',\n    O_o: '😲',\n    'o-o': '😲',\n    o_O: '😲',\n    o_o: '😲',\n    ':$': '😳',\n    '#-)': '😵',\n    ':&': '😶',\n    ':-#': '😶',\n    ':-&': '😶',\n    ':-X': '😶',\n    ':X': '😶',\n    ':-J': '😼',\n    ':*': '😘',\n    ':^*': '😽',\n    ಠ_ಠ: '🙅',\n    '*\\\\0/*': '🙆',\n    '\\\\o/': '🙆',\n    ':>': '😄',\n    '>.<': '😡',\n    '>:(': '😠',\n    '>:)': '😈',\n    '>:-)': '😈',\n    '>:/': '😡',\n    '>:O': '😲',\n    '>:P': '😜',\n    '>:[': '😒',\n    '>:\\\\': '😡',\n    '>;)': '😈',\n    '>_>^': '😤',\n    '^^': '😊',\n    ':sweat:': '😅',\n    ':smile:': '😄',\n    ':laughing:': '😆',\n    ':blush:': '😊',\n    ':smiley:': '😃',\n    ':relaxed:': '☺️',\n    ':smirk:': '😏',\n    ':heart_eyes:': '😍',\n    ':kissing_heart:': '😘',\n    ':kissing_closed_eyes:': '😚',\n    ':flushed:': '😳',\n    ':relieved:': '😌',\n    ':satisfied:': '😆',\n    ':grin:': '😁',\n    ':wink:': '😉',\n    ':stuck_out_tongue_winking_eye:': '😜',\n    ':stuck_out_tongue_closed_eyes:': '😝',\n    ':grinning:': '😀',\n    ':kissing:': '😗',\n    ':kissing_smiling_eyes:': '😙',\n    ':stuck_out_tongue:': '😛',\n    ':sleeping:': '😴',\n    ':worried:': '😟',\n    ':frowning:': '😦',\n    ':anguished:': '😧',\n    ':open_mouth:': '😮',\n    ':grimacing:': '😬',\n    ':confused:': '😕',\n    ':hushed:': '😯',\n    ':expressionless:': '😑',\n    ':unamused:': '😒',\n    ':sweat_smile:': '😅',\n    ':disappointed_relieved:': '😥',\n    ':weary:': '😩',\n    ':pensive:': '😔',\n    ':disappointed:': '😞',\n    ':confounded:': '😖',\n    ':fearful:': '😨',\n    ':cold_sweat:': '😰',\n    ':persevere:': '😣',\n    ':cry:': '😢',\n    ':sob:': '😭',\n    ':joy:': '😂',\n    ':astonished:': '😲',\n    ':scream:': '😱',\n    ':tired_face:': '😫',\n    ':angry:': '😠',\n    ':rage:': '😡',\n    ':triumph:': '😤',\n    ':sleepy:': '😪',\n    ':yum:': '😋',\n    ':mask:': '😷',\n    ':sunglasses:': '😎',\n    ':dizzy_face:': '😵',\n    ':imp:': '👿',\n    ':smiling_imp:': '😈',\n    ':neutral_face:': '😐',\n    ':no_mouth:': '😶',\n    ':innocent:': '😇',\n    ':alien:': '👽',\n    ':yellow_heart:': '💛',\n    ':blue_heart:': '💙',\n    ':purple_heart:': '💜',\n    ':heart:': '❤️',\n    ':green_heart:': '💚',\n    ':broken_heart:': '💔',\n    ':heartbeat:': '💓',\n    ':heartpulse:': '💗',\n    ':two_hearts:': '💕',\n    ':revolving_hearts:': '💞',\n    ':cupid:': '💘',\n    ':sparkling_heart:': '💖',\n    ':sparkles:': '✨',\n    ':star:': '⭐',\n    ':star2:': '🌟',\n    ':dizzy:': '💫',\n    ':boom:': '💥',\n    ':collision:': '💥',\n    ':anger:': '💢',\n    ':exclamation:': '❗',\n    ':question:': '❓',\n    ':grey_exclamation:': '❕',\n    ':grey_question:': '❔',\n    ':zzz:': '💤',\n    ':dash:': '💨',\n    ':sweat_drops:': '💦',\n    ':notes:': '🎶',\n    ':musical_note:': '🎵',\n    ':fire:': '🔥',\n    ':hankey:': '💩',\n    ':poop:': '💩',\n    ':shit:': '💩',\n    ':+1:': '👍',\n    ':thumbsup:': '👍',\n    ':-1:': '👎',\n    ':thumbsdown:': '👎',\n    ':ok_hand:': '👌',\n    ':punch:': '👊',\n    ':facepunch:': '👊',\n    ':fist:': '✊',\n    ':v:': '✌️',\n    ':wave:': '👋',\n    ':hand:': '✋',\n    ':raised_hand:': '✋',\n    ':open_hands:': '👐',\n    ':point_up:': '☝️',\n    ':point_down:': '👇',\n    ':point_left:': '👈',\n    ':point_right:': '👉',\n    ':raised_hands:': '🙌',\n    ':pray:': '🙏',\n    ':point_up_2:': '👆',\n    ':clap:': '👏',\n    ':muscle:': '💪',\n    ':metal:': '🤘',\n    ':fu:': '🖕',\n    ':walking:': '🚶',\n    ':runner:': '🏃',\n    ':running:': '🏃',\n    ':couple:': '👫',\n    ':family:': '👪',\n    ':two_men_holding_hands:': '👬',\n    ':two_women_holding_hands:': '👭',\n    ':dancer:': '💃',\n    ':dancers:': '👯',\n    ':no_good:': '🙅',\n    ':information_desk_person:': '💁',\n    ':raising_hand:': '🙋',\n    ':bride_with_veil:': '👰',\n    ':bow:': '🙇',\n    ':couplekiss:': '💏',\n    ':couple_with_heart:': '💑',\n    ':massage:': '💆',\n    ':haircut:': '💇',\n    ':nail_care:': '💅',\n    ':boy:': '👦',\n    ':girl:': '👧',\n    ':woman:': '👩',\n    ':man:': '👨',\n    ':baby:': '👶',\n    ':older_woman:': '👵',\n    ':older_man:': '👴',\n    ':man_with_gua_pi_mao:': '👲',\n    ':construction_worker:': '👷',\n    ':cop:': '👮',\n    ':angel:': '👼',\n    ':princess:': '👸',\n    ':smiley_cat:': '😺',\n    ':smile_cat:': '😸',\n    ':heart_eyes_cat:': '😻',\n    ':kissing_cat:': '😽',\n    ':smirk_cat:': '😼',\n    ':scream_cat:': '🙀',\n    ':crying_cat_face:': '😿',\n    ':joy_cat:': '😹',\n    ':pouting_cat:': '😾',\n    ':japanese_ogre:': '👹',\n    ':japanese_goblin:': '👺',\n    ':see_no_evil:': '🙈',\n    ':hear_no_evil:': '🙉',\n    ':speak_no_evil:': '🙊',\n    ':skull:': '💀',\n    ':feet:': '🐾',\n    ':lips:': '👄',\n    ':kiss:': '💋',\n    ':droplet:': '💧',\n    ':ear:': '👂',\n    ':eyes:': '👀',\n    ':nose:': '👃',\n    ':tongue:': '👅',\n    ':love_letter:': '💌',\n    ':bust_in_silhouette:': '👤',\n    ':busts_in_silhouette:': '👥',\n    ':speech_balloon:': '💬',\n    ':thought_balloon:': '💭',\n    ':sunny:': '☀️',\n    ':umbrella:': '☔',\n    ':cloud:': '☁️',\n    ':snowflake:': '❄️',\n    ':snowman:': '⛄',\n    ':zap:': '⚡',\n    ':cyclone:': '🌀',\n    ':foggy:': '🌁',\n    ':ocean:': '🌊',\n    ':cat:': '🐱',\n    ':dog:': '🐶',\n    ':mouse:': '🐭',\n    ':hamster:': '🐹',\n    ':rabbit:': '🐰',\n    ':wolf:': '🐺',\n    ':frog:': '🐸',\n    ':tiger:': '🐯',\n    ':koala:': '🐨',\n    ':bear:': '🐻',\n    ':pig:': '🐷',\n    ':pig_nose:': '🐽',\n    ':cow:': '🐮',\n    ':boar:': '🐗',\n    ':monkey_face:': '🐵',\n    ':monkey:': '🐒',\n    ':horse:': '🐴',\n    ':racehorse:': '🐎',\n    ':camel:': '🐫',\n    ':sheep:': '🐑',\n    ':elephant:': '🐘',\n    ':panda_face:': '🐼',\n    ':snake:': '🐍',\n    ':bird:': '🐦',\n    ':baby_chick:': '🐤',\n    ':hatched_chick:': '🐥',\n    ':hatching_chick:': '🐣',\n    ':chicken:': '🐔',\n    ':penguin:': '🐧',\n    ':turtle:': '🐢',\n    ':bug:': '🐛',\n    ':honeybee:': '🐝',\n    ':ant:': '🐜',\n    ':beetle:': '🐞',\n    ':snail:': '🐌',\n    ':octopus:': '🐙',\n    ':tropical_fish:': '🐠',\n    ':fish:': '🐟',\n    ':whale:': '🐳',\n    ':whale2:': '🐋',\n    ':dolphin:': '🐬',\n    ':cow2:': '🐄',\n    ':ram:': '🐏',\n    ':rat:': '🐀',\n    ':water_buffalo:': '🐃',\n    ':tiger2:': '🐅',\n    ':rabbit2:': '🐇',\n    ':dragon:': '🐉',\n    ':goat:': '🐐',\n    ':rooster:': '🐓',\n    ':dog2:': '🐕',\n    ':pig2:': '🐖',\n    ':mouse2:': '🐁',\n    ':ox:': '🐂',\n    ':dragon_face:': '🐲',\n    ':blowfish:': '🐡',\n    ':crocodile:': '🐊',\n    ':dromedary_camel:': '🐪',\n    ':leopard:': '🐆',\n    ':cat2:': '🐈',\n    ':poodle:': '🐩',\n    ':paw_prints:': '🐾',\n    ':bouquet:': '💐',\n    ':cherry_blossom:': '🌸',\n    ':tulip:': '🌷',\n    ':four_leaf_clover:': '🍀',\n    ':rose:': '🌹',\n    ':sunflower:': '🌻',\n    ':hibiscus:': '🌺',\n    ':maple_leaf:': '🍁',\n    ':leaves:': '🍃',\n    ':fallen_leaf:': '🍂',\n    ':herb:': '🌿',\n    ':mushroom:': '🍄',\n    ':cactus:': '🌵',\n    ':palm_tree:': '🌴',\n    ':evergreen_tree:': '🌲',\n    ':deciduous_tree:': '🌳',\n    ':chestnut:': '🌰',\n    ':seedling:': '🌱',\n    ':blossom:': '🌼',\n    ':ear_of_rice:': '🌾',\n    ':shell:': '🐚',\n    ':globe_with_meridians:': '🌐',\n    ':sun_with_face:': '🌞',\n    ':full_moon_with_face:': '🌝',\n    ':new_moon_with_face:': '🌚',\n    ':new_moon:': '🌑',\n    ':waxing_crescent_moon:': '🌒',\n    ':first_quarter_moon:': '🌓',\n    ':waxing_gibbous_moon:': '🌔',\n    ':full_moon:': '🌕',\n    ':waning_gibbous_moon:': '🌖',\n    ':last_quarter_moon:': '🌗',\n    ':waning_crescent_moon:': '🌘',\n    ':last_quarter_moon_with_face:': '🌜',\n    ':first_quarter_moon_with_face:': '🌛',\n    ':moon:': '🌔',\n    ':earth_africa:': '🌍',\n    ':earth_americas:': '🌎',\n    ':earth_asia:': '🌏',\n    ':volcano:': '🌋',\n    ':milky_way:': '🌌',\n    ':partly_sunny:': '⛅',\n    ':bamboo:': '🎍',\n    ':gift_heart:': '💝',\n    ':dolls:': '🎎',\n    ':school_satchel:': '🎒',\n    ':mortar_board:': '🎓',\n    ':flags:': '🎏',\n    ':fireworks:': '🎆',\n    ':sparkler:': '🎇',\n    ':wind_chime:': '🎐',\n    ':rice_scene:': '🎑',\n    ':jack_o_lantern:': '🎃',\n    ':ghost:': '👻',\n    ':santa:': '🎅',\n    ':christmas_tree:': '🎄',\n    ':gift:': '🎁',\n    ':bell:': '🔔',\n    ':no_bell:': '🔕',\n    ':tanabata_tree:': '🎋',\n    ':tada:': '🎉',\n    ':confetti_ball:': '🎊',\n    ':balloon:': '🎈',\n    ':crystal_ball:': '🔮',\n    ':cd:': '💿',\n    ':dvd:': '📀',\n    ':floppy_disk:': '💾',\n    ':camera:': '📷',\n    ':video_camera:': '📹',\n    ':movie_camera:': '🎥',\n    ':computer:': '💻',\n    ':tv:': '📺',\n    ':iphone:': '📱',\n    ':phone:': '☎️',\n    ':telephone:': '☎️',\n    ':telephone_receiver:': '📞',\n    ':pager:': '📟',\n    ':fax:': '📠',\n    ':minidisc:': '💽',\n    ':vhs:': '📼',\n    ':sound:': '🔉',\n    ':speaker:': '🔈',\n    ':mute:': '🔇',\n    ':loudspeaker:': '📢',\n    ':mega:': '📣',\n    ':hourglass:': '⌛',\n    ':hourglass_flowing_sand:': '⏳',\n    ':alarm_clock:': '⏰',\n    ':watch:': '⌚',\n    ':radio:': '📻',\n    ':satellite:': '📡',\n    ':loop:': '➿',\n    ':mag:': '🔍',\n    ':mag_right:': '🔎',\n    ':unlock:': '🔓',\n    ':lock:': '🔒',\n    ':lock_with_ink_pen:': '🔏',\n    ':closed_lock_with_key:': '🔐',\n    ':key:': '🔑',\n    ':bulb:': '💡',\n    ':flashlight:': '🔦',\n    ':high_brightness:': '🔆',\n    ':low_brightness:': '🔅',\n    ':electric_plug:': '🔌',\n    ':battery:': '🔋',\n    ':calling:': '📲',\n    ':email:': '✉️',\n    ':mailbox:': '📫',\n    ':postbox:': '📮',\n    ':bath:': '🛀',\n    ':bathtub:': '🛁',\n    ':shower:': '🚿',\n    ':toilet:': '🚽',\n    ':wrench:': '🔧',\n    ':nut_and_bolt:': '🔩',\n    ':hammer:': '🔨',\n    ':seat:': '💺',\n    ':moneybag:': '💰',\n    ':yen:': '💴',\n    ':dollar:': '💵',\n    ':pound:': '💷',\n    ':euro:': '💶',\n    ':credit_card:': '💳',\n    ':money_with_wings:': '💸',\n    ':e-mail:': '📧',\n    ':inbox_tray:': '📥',\n    ':outbox_tray:': '📤',\n    ':envelope:': '✉️',\n    ':incoming_envelope:': '📨',\n    ':postal_horn:': '📯',\n    ':mailbox_closed:': '📪',\n    ':mailbox_with_mail:': '📬',\n    ':mailbox_with_no_mail:': '📭',\n    ':package:': '📦',\n    ':door:': '🚪',\n    ':smoking:': '🚬',\n    ':bomb:': '💣',\n    ':gun:': '🔫',\n    ':hocho:': '🔪',\n    ':pill:': '💊',\n    ':syringe:': '💉',\n    ':page_facing_up:': '📄',\n    ':page_with_curl:': '📃',\n    ':bookmark_tabs:': '📑',\n    ':bar_chart:': '📊',\n    ':chart_with_upwards_trend:': '📈',\n    ':chart_with_downwards_trend:': '📉',\n    ':scroll:': '📜',\n    ':clipboard:': '📋',\n    ':calendar:': '📆',\n    ':date:': '📅',\n    ':card_index:': '📇',\n    ':file_folder:': '📁',\n    ':open_file_folder:': '📂',\n    ':scissors:': '✂️',\n    ':pushpin:': '📌',\n    ':paperclip:': '📎',\n    ':black_nib:': '✒️',\n    ':pencil2:': '✏️',\n    ':straight_ruler:': '📏',\n    ':triangular_ruler:': '📐',\n    ':closed_book:': '📕',\n    ':green_book:': '📗',\n    ':blue_book:': '📘',\n    ':orange_book:': '📙',\n    ':notebook:': '📓',\n    ':notebook_with_decorative_cover:': '📔',\n    ':ledger:': '📒',\n    ':books:': '📚',\n    ':bookmark:': '🔖',\n    ':name_badge:': '📛',\n    ':microscope:': '🔬',\n    ':telescope:': '🔭',\n    ':newspaper:': '📰',\n    ':football:': '🏈',\n    ':basketball:': '🏀',\n    ':soccer:': '⚽',\n    ':baseball:': '⚾',\n    ':tennis:': '🎾',\n    ':8ball:': '🎱',\n    ':rugby_football:': '🏉',\n    ':bowling:': '🎳',\n    ':golf:': '⛳',\n    ':mountain_bicyclist:': '🚵',\n    ':bicyclist:': '🚴',\n    ':horse_racing:': '🏇',\n    ':snowboarder:': '🏂',\n    ':swimmer:': '🏊',\n    ':surfer:': '🏄',\n    ':ski:': '🎿',\n    ':spades:': '♠️',\n    ':hearts:': '♥️',\n    ':clubs:': '♣️',\n    ':diamonds:': '♦️',\n    ':gem:': '💎',\n    ':ring:': '💍',\n    ':trophy:': '🏆',\n    ':musical_score:': '🎼',\n    ':musical_keyboard:': '🎹',\n    ':violin:': '🎻',\n    ':space_invader:': '👾',\n    ':video_game:': '🎮',\n    ':black_joker:': '🃏',\n    ':flower_playing_cards:': '🎴',\n    ':game_die:': '🎲',\n    ':dart:': '🎯',\n    ':mahjong:': '🀄',\n    ':clapper:': '🎬',\n    ':memo:': '📝',\n    ':pencil:': '📝',\n    ':book:': '📖',\n    ':art:': '🎨',\n    ':microphone:': '🎤',\n    ':headphones:': '🎧',\n    ':trumpet:': '🎺',\n    ':saxophone:': '🎷',\n    ':guitar:': '🎸',\n    ':shoe:': '👞',\n    ':sandal:': '👡',\n    ':high_heel:': '👠',\n    ':lipstick:': '💄',\n    ':boot:': '👢',\n    ':shirt:': '👕',\n    ':tshirt:': '👕',\n    ':necktie:': '👔',\n    ':womans_clothes:': '👚',\n    ':dress:': '👗',\n    ':running_shirt_with_sash:': '🎽',\n    ':jeans:': '👖',\n    ':kimono:': '👘',\n    ':bikini:': '👙',\n    ':ribbon:': '🎀',\n    ':tophat:': '🎩',\n    ':crown:': '👑',\n    ':womans_hat:': '👒',\n    ':mans_shoe:': '👞',\n    ':closed_umbrella:': '🌂',\n    ':briefcase:': '💼',\n    ':handbag:': '👜',\n    ':pouch:': '👝',\n    ':purse:': '👛',\n    ':eyeglasses:': '👓',\n    ':fishing_pole_and_fish:': '🎣',\n    ':coffee:': '☕',\n    ':tea:': '🍵',\n    ':sake:': '🍶',\n    ':baby_bottle:': '🍼',\n    ':beer:': '🍺',\n    ':beers:': '🍻',\n    ':cocktail:': '🍸',\n    ':tropical_drink:': '🍹',\n    ':wine_glass:': '🍷',\n    ':fork_and_knife:': '🍴',\n    ':pizza:': '🍕',\n    ':hamburger:': '🍔',\n    ':fries:': '🍟',\n    ':poultry_leg:': '🍗',\n    ':meat_on_bone:': '🍖',\n    ':spaghetti:': '🍝',\n    ':curry:': '🍛',\n    ':fried_shrimp:': '🍤',\n    ':bento:': '🍱',\n    ':sushi:': '🍣',\n    ':fish_cake:': '🍥',\n    ':rice_ball:': '🍙',\n    ':rice_cracker:': '🍘',\n    ':rice:': '🍚',\n    ':ramen:': '🍜',\n    ':stew:': '🍲',\n    ':oden:': '🍢',\n    ':dango:': '🍡',\n    ':egg:': '🥚',\n    ':bread:': '🍞',\n    ':doughnut:': '🍩',\n    ':custard:': '🍮',\n    ':icecream:': '🍦',\n    ':ice_cream:': '🍨',\n    ':shaved_ice:': '🍧',\n    ':birthday:': '🎂',\n    ':cake:': '🍰',\n    ':cookie:': '🍪',\n    ':chocolate_bar:': '🍫',\n    ':candy:': '🍬',\n    ':lollipop:': '🍭',\n    ':honey_pot:': '🍯',\n    ':apple:': '🍎',\n    ':green_apple:': '🍏',\n    ':tangerine:': '🍊',\n    ':lemon:': '🍋',\n    ':cherries:': '🍒',\n    ':grapes:': '🍇',\n    ':watermelon:': '🍉',\n    ':strawberry:': '🍓',\n    ':peach:': '🍑',\n    ':melon:': '🍈',\n    ':banana:': '🍌',\n    ':pear:': '🍐',\n    ':pineapple:': '🍍',\n    ':sweet_potato:': '🍠',\n    ':eggplant:': '🍆',\n    ':tomato:': '🍅',\n    ':corn:': '🌽',\n    ':house:': '🏠',\n    ':house_with_garden:': '🏡',\n    ':school:': '🏫',\n    ':office:': '🏢',\n    ':post_office:': '🏣',\n    ':hospital:': '🏥',\n    ':bank:': '🏦',\n    ':convenience_store:': '🏪',\n    ':love_hotel:': '🏩',\n    ':hotel:': '🏨',\n    ':wedding:': '💒',\n    ':church:': '⛪',\n    ':department_store:': '🏬',\n    ':european_post_office:': '🏤',\n    ':city_sunrise:': '🌇',\n    ':city_sunset:': '🌆',\n    ':japanese_castle:': '🏯',\n    ':european_castle:': '🏰',\n    ':tent:': '⛺',\n    ':factory:': '🏭',\n    ':tokyo_tower:': '🗼',\n    ':japan:': '🗾',\n    ':mount_fuji:': '🗻',\n    ':sunrise_over_mountains:': '🌄',\n    ':sunrise:': '🌅',\n    ':stars:': '🌠',\n    ':statue_of_liberty:': '🗽',\n    ':bridge_at_night:': '🌉',\n    ':carousel_horse:': '🎠',\n    ':rainbow:': '🌈',\n    ':ferris_wheel:': '🎡',\n    ':fountain:': '⛲',\n    ':roller_coaster:': '🎢',\n    ':ship:': '🚢',\n    ':speedboat:': '🚤',\n    ':boat:': '⛵',\n    ':sailboat:': '⛵',\n    ':rowboat:': '🚣',\n    ':anchor:': '⚓',\n    ':rocket:': '🚀',\n    ':airplane:': '✈️',\n    ':helicopter:': '🚁',\n    ':steam_locomotive:': '🚂',\n    ':tram:': '🚊',\n    ':mountain_railway:': '🚞',\n    ':bike:': '🚲',\n    ':aerial_tramway:': '🚡',\n    ':suspension_railway:': '🚟',\n    ':mountain_cableway:': '🚠',\n    ':tractor:': '🚜',\n    ':blue_car:': '🚙',\n    ':oncoming_automobile:': '🚘',\n    ':car:': '🚗',\n    ':red_car:': '🚗',\n    ':taxi:': '🚕',\n    ':oncoming_taxi:': '🚖',\n    ':articulated_lorry:': '🚛',\n    ':bus:': '🚌',\n    ':oncoming_bus:': '🚍',\n    ':rotating_light:': '🚨',\n    ':police_car:': '🚓',\n    ':oncoming_police_car:': '🚔',\n    ':fire_engine:': '🚒',\n    ':ambulance:': '🚑',\n    ':minibus:': '🚐',\n    ':truck:': '🚚',\n    ':train:': '🚋',\n    ':station:': '🚉',\n    ':train2:': '🚆',\n    ':bullettrain_front:': '🚅',\n    ':bullettrain_side:': '🚄',\n    ':light_rail:': '🚈',\n    ':monorail:': '🚝',\n    ':railway_car:': '🚃',\n    ':trolleybus:': '🚎',\n    ':ticket:': '🎫',\n    ':fuelpump:': '⛽',\n    ':vertical_traffic_light:': '🚦',\n    ':traffic_light:': '🚥',\n    ':warning:': '⚠️',\n    ':construction:': '🚧',\n    ':beginner:': '🔰',\n    ':atm:': '🏧',\n    ':slot_machine:': '🎰',\n    ':busstop:': '🚏',\n    ':barber:': '💈',\n    ':hotsprings:': '♨️',\n    ':checkered_flag:': '🏁',\n    ':crossed_flags:': '🎌',\n    ':izakaya_lantern:': '🏮',\n    ':moyai:': '🗿',\n    ':circus_tent:': '🎪',\n    ':performing_arts:': '🎭',\n    ':round_pushpin:': '📍',\n    ':triangular_flag_on_post:': '🚩',\n    ':jp:': '🇯🇵',\n    ':kr:': '🇰🇷',\n    ':cn:': '🇨🇳',\n    ':us:': '🇺🇸',\n    ':fr:': '🇫🇷',\n    ':es:': '🇪🇸',\n    ':it:': '🇮🇹',\n    ':ru:': '🇷🇺',\n    ':gb:': '🇬🇧',\n    ':uk:': '🇬🇧',\n    ':de:': '🇩🇪',\n    ':one:': '1️⃣',\n    ':two:': '2️⃣',\n    ':three:': '3️⃣',\n    ':four:': '4️⃣',\n    ':five:': '5️⃣',\n    ':six:': '6️⃣',\n    ':seven:': '7️⃣',\n    ':eight:': '8️⃣',\n    ':nine:': '9️⃣',\n    ':keycap_ten:': '🔟',\n    ':1234:': '🔢',\n    ':zero:': '0️⃣',\n    ':hash:': '#️⃣',\n    ':symbols:': '🔣',\n    ':arrow_backward:': '◀️',\n    ':arrow_down:': '⬇️',\n    ':arrow_forward:': '▶️',\n    ':arrow_left:': '⬅️',\n    ':capital_abcd:': '🔠',\n    ':abcd:': '🔡',\n    ':abc:': '🔤',\n    ':arrow_lower_left:': '↙️',\n    ':arrow_lower_right:': '↘️',\n    ':arrow_right:': '➡️',\n    ':arrow_up:': '⬆️',\n    ':arrow_upper_left:': '↖️',\n    ':arrow_upper_right:': '↗️',\n    ':arrow_double_down:': '⏬',\n    ':arrow_double_up:': '⏫',\n    ':arrow_down_small:': '🔽',\n    ':arrow_heading_down:': '⤵️',\n    ':arrow_heading_up:': '⤴️',\n    ':leftwards_arrow_with_hook:': '↩️',\n    ':arrow_right_hook:': '↪️',\n    ':left_right_arrow:': '↔️',\n    ':arrow_up_down:': '↕️',\n    ':arrow_up_small:': '🔼',\n    ':arrows_clockwise:': '🔃',\n    ':arrows_counterclockwise:': '🔄',\n    ':rewind:': '⏪',\n    ':fast_forward:': '⏩',\n    ':information_source:': 'ℹ️',\n    ':ok:': '🆗',\n    ':twisted_rightwards_arrows:': '🔀',\n    ':repeat:': '🔁',\n    ':repeat_one:': '🔂',\n    ':new:': '🆕',\n    ':top:': '🔝',\n    ':up:': '🆙',\n    ':cool:': '🆒',\n    ':free:': '🆓',\n    ':ng:': '🆖',\n    ':cinema:': '🎦',\n    ':koko:': '🈁',\n    ':signal_strength:': '📶',\n    ':u5272:': '🈹',\n    ':u5408:': '🈴',\n    ':u55b6:': '🈺',\n    ':u6307:': '🈯',\n    ':u6708:': '🈷️',\n    ':u6709:': '🈶',\n    ':u6e80:': '🈵',\n    ':u7121:': '🈚',\n    ':u7533:': '🈸',\n    ':u7a7a:': '🈳',\n    ':u7981:': '🈲',\n    ':sa:': '🈂️',\n    ':restroom:': '🚻',\n    ':mens:': '🚹',\n    ':womens:': '🚺',\n    ':baby_symbol:': '🚼',\n    ':no_smoking:': '🚭',\n    ':parking:': '🅿️',\n    ':wheelchair:': '♿',\n    ':metro:': '🚇',\n    ':baggage_claim:': '🛄',\n    ':accept:': '🉑',\n    ':wc:': '🚾',\n    ':potable_water:': '🚰',\n    ':put_litter_in_its_place:': '🚮',\n    ':secret:': '㊙️',\n    ':congratulations:': '㊗️',\n    ':m:': 'Ⓜ️',\n    ':passport_control:': '🛂',\n    ':left_luggage:': '🛅',\n    ':customs:': '🛃',\n    ':ideograph_advantage:': '🉐',\n    ':cl:': '🆑',\n    ':sos:': '🆘',\n    ':id:': '🆔',\n    ':no_entry_sign:': '🚫',\n    ':underage:': '🔞',\n    ':no_mobile_phones:': '📵',\n    ':do_not_litter:': '🚯',\n    ':non-potable_water:': '🚱',\n    ':no_bicycles:': '🚳',\n    ':no_pedestrians:': '🚷',\n    ':children_crossing:': '🚸',\n    ':no_entry:': '⛔',\n    ':eight_spoked_asterisk:': '✳️',\n    ':sparkle:': '❇️',\n    ':eight_pointed_black_star:': '✴️',\n    ':heart_decoration:': '💟',\n    ':vs:': '🆚',\n    ':vibration_mode:': '📳',\n    ':mobile_phone_off:': '📴',\n    ':chart:': '💹',\n    ':currency_exchange:': '💱',\n    ':aries:': '♈',\n    ':taurus:': '♉',\n    ':gemini:': '♊',\n    ':cancer:': '♋',\n    ':leo:': '♌',\n    ':virgo:': '♍',\n    ':libra:': '♎',\n    ':scorpius:': '♏',\n    ':sagittarius:': '♐',\n    ':capricorn:': '♑',\n    ':aquarius:': '♒',\n    ':pisces:': '♓',\n    ':ophiuchus:': '⛎',\n    ':six_pointed_star:': '🔯',\n    ':negative_squared_cross_mark:': '❎',\n    ':a:': '🅰️',\n    ':b:': '🅱️',\n    ':ab:': '🆎',\n    ':o2:': '🅾️',\n    ':diamond_shape_with_a_dot_inside:': '💠',\n    ':recycle:': '♻️',\n    ':end:': '🔚',\n    ':back:': '🔙',\n    ':on:': '🔛',\n    ':soon:': '🔜',\n    ':clock1:': '🕐',\n    ':clock130:': '🕜',\n    ':clock10:': '🕙',\n    ':clock1030:': '🕥',\n    ':clock11:': '🕚',\n    ':clock1130:': '🕦',\n    ':clock12:': '🕛',\n    ':clock1230:': '🕧',\n    ':clock2:': '🕑',\n    ':clock230:': '🕝',\n    ':clock3:': '🕒',\n    ':clock330:': '🕞',\n    ':clock4:': '🕓',\n    ':clock430:': '🕟',\n    ':clock5:': '🕔',\n    ':clock530:': '🕠',\n    ':clock6:': '🕕',\n    ':clock630:': '🕡',\n    ':clock7:': '🕖',\n    ':clock730:': '🕢',\n    ':clock8:': '🕗',\n    ':clock830:': '🕣',\n    ':clock9:': '🕘',\n    ':clock930:': '🕤',\n    ':heavy_dollar_sign:': '💲',\n    ':copyright:': '©️',\n    ':registered:': '®️',\n    ':tm:': '™️',\n    ':x:': '❌',\n    ':heavy_exclamation_mark:': '❗',\n    ':bangbang:': '‼️',\n    ':interrobang:': '⁉️',\n    ':o:': '⭕',\n    ':heavy_multiplication_x:': '✖️',\n    ':heavy_plus_sign:': '➕',\n    ':heavy_minus_sign:': '➖',\n    ':heavy_division_sign:': '➗',\n    ':white_flower:': '💮',\n    ':100:': '💯',\n    ':heavy_check_mark:': '✔️',\n    ':ballot_box_with_check:': '☑️',\n    ':radio_button:': '🔘',\n    ':link:': '🔗',\n    ':curly_loop:': '➰',\n    ':wavy_dash:': '〰️',\n    ':part_alternation_mark:': '〽️',\n};\n/**\n * A map of unicode characters to their string representation.\n */\nexport const mapStringToUnicode = {\n    ':100:': '1f4af',\n    ':1234:': '1f522',\n    ':interrobang:': '2049',\n    ':tm:': '2122',\n    ':information_source:': '2139',\n    ':left_right_arrow:': '2194',\n    ':arrow_up_down:': '2195',\n    ':arrow_upper_left:': '2196',\n    ':arrow_upper_right:': '2197',\n    ':arrow_lower_right:': '2198',\n    ':arrow_lower_left:': '2199',\n    ':keyboard:': '2328',\n    ':sunny:': '2600',\n    ':cloud:': '2601',\n    ':umbrella:': '2602',\n    ':snowman:': '2603',\n    ':comet:': '2604',\n    ':ballot_box_with_check:': '2611',\n    ':umbrella_with_rain_drops:': '2614',\n    ':coffee:': '2615',\n    ':shamrock:': '2618',\n    ':skull_and_crossbones:': '2620',\n    ':radioactive_sign:': '2622',\n    ':biohazard_sign:': '2623',\n    ':orthodox_cross:': '2626',\n    ':wheel_of_dharma:': '2638',\n    ':white_frowning_face:': '2639',\n    ':aries:': '2648',\n    ':taurus:': '2649',\n    ':sagittarius:': '2650',\n    ':capricorn:': '2651',\n    ':aquarius:': '2652',\n    ':pisces:': '2653',\n    ':spades:': '2660',\n    ':clubs:': '2663',\n    ':hearts:': '2665',\n    ':diamonds:': '2666',\n    ':hotsprings:': '2668',\n    ':hammer_and_pick:': '2692',\n    ':anchor:': '2693',\n    ':crossed_swords:': '2694',\n    ':scales:': '2696',\n    ':alembic:': '2697',\n    ':gear:': '2699',\n    ':scissors:': '2702',\n    ':white_check_mark:': '2705',\n    ':airplane:': '2708',\n    ':email:': '2709',\n    ':envelope:': '2709',\n    ':black_nib:': '2712',\n    ':heavy_check_mark:': '2714',\n    ':heavy_multiplication_x:': '2716',\n    ':star_of_david:': '2721',\n    ':sparkles:': '2728',\n    ':eight_spoked_asterisk:': '2733',\n    ':eight_pointed_black_star:': '2734',\n    ':snowflake:': '2744',\n    ':sparkle:': '2747',\n    ':question:': '2753',\n    ':grey_question:': '2754',\n    ':grey_exclamation:': '2755',\n    ':exclamation:': '2757',\n    ':heavy_exclamation_mark:': '2757',\n    ':heavy_heart_exclamation_mark_ornament:': '2763',\n    ':heart:': '2764',\n    ':heavy_plus_sign:': '2795',\n    ':heavy_minus_sign:': '2796',\n    ':heavy_division_sign:': '2797',\n    ':arrow_heading_up:': '2934',\n    ':arrow_heading_down:': '2935',\n    ':wavy_dash:': '3030',\n    ':congratulations:': '3297',\n    ':secret:': '3299',\n    ':copyright:': '00a9',\n    ':registered:': '00ae',\n    ':bangbang:': '203c',\n    ':leftwards_arrow_with_hook:': '21a9',\n    ':arrow_right_hook:': '21aa',\n    ':watch:': '231a',\n    ':hourglass:': '231b',\n    ':eject:': '23cf',\n    ':fast_forward:': '23e9',\n    ':rewind:': '23ea',\n    ':arrow_double_up:': '23eb',\n    ':arrow_double_down:': '23ec',\n    ':black_right_pointing_double_triangle_with_vertical_bar:': '23ed',\n    ':black_left_pointing_double_triangle_with_vertical_bar:': '23ee',\n    ':black_right_pointing_triangle_with_double_vertical_bar:': '23ef',\n    ':alarm_clock:': '23f0',\n    ':stopwatch:': '23f1',\n    ':timer_clock:': '23f2',\n    ':hourglass_flowing_sand:': '23f3',\n    ':double_vertical_bar:': '23f8',\n    ':black_square_for_stop:': '23f9',\n    ':black_circle_for_record:': '23fa',\n    ':m:': '24c2',\n    ':black_small_square:': '25aa',\n    ':white_small_square:': '25ab',\n    ':arrow_forward:': '25b6',\n    ':arrow_backward:': '25c0',\n    ':white_medium_square:': '25fb',\n    ':black_medium_square:': '25fc',\n    ':white_medium_small_square:': '25fd',\n    ':black_medium_small_square:': '25fe',\n    ':phone:': '260e',\n    ':telephone:': '260e',\n    ':point_up:': '261d',\n    ':star_and_crescent:': '262a',\n    ':peace_symbol:': '262e',\n    ':yin_yang:': '262f',\n    ':relaxed:': '263a',\n    ':gemini:': '264a',\n    ':cancer:': '264b',\n    ':leo:': '264c',\n    ':virgo:': '264d',\n    ':libra:': '264e',\n    ':scorpius:': '264f',\n    ':recycle:': '267b',\n    ':wheelchair:': '267f',\n    ':atom_symbol:': '269b',\n    ':fleur_de_lis:': '269c',\n    ':warning:': '26a0',\n    ':zap:': '26a1',\n    ':white_circle:': '26aa',\n    ':black_circle:': '26ab',\n    ':coffin:': '26b0',\n    ':funeral_urn:': '26b1',\n    ':soccer:': '26bd',\n    ':baseball:': '26be',\n    ':snowman_without_snow:': '26c4',\n    ':partly_sunny:': '26c5',\n    ':thunder_cloud_and_rain:': '26c8',\n    ':ophiuchus:': '26ce',\n    ':pick:': '26cf',\n    ':helmet_with_white_cross:': '26d1',\n    ':chains:': '26d3',\n    ':no_entry:': '26d4',\n    ':shinto_shrine:': '26e9',\n    ':church:': '26ea',\n    ':mountain:': '26f0',\n    ':umbrella_on_ground:': '26f1',\n    ':fountain:': '26f2',\n    ':golf:': '26f3',\n    ':ferry:': '26f4',\n    ':boat:': '26f5',\n    ':sailboat:': '26f5',\n    ':skier:': '26f7',\n    ':ice_skate:': '26f8',\n    ':person_with_ball:': '26f9',\n    ':tent:': '26fa',\n    ':fuelpump:': '26fd',\n    ':fist:': '270a',\n    ':hand:': '270b',\n    ':raised_hand:': '270b',\n    ':v:': '270c',\n    ':writing_hand:': '270d',\n    ':pencil2:': '270f',\n    ':latin_cross:': '271d',\n    ':x:': '274c',\n    ':negative_squared_cross_mark:': '274e',\n    ':arrow_right:': '27a1',\n    ':curly_loop:': '27b0',\n    ':loop:': '27bf',\n    ':arrow_left:': '2b05',\n    ':arrow_up:': '2b06',\n    ':arrow_down:': '2b07',\n    ':black_large_square:': '2b1b',\n    ':white_large_square:': '2b1c',\n    ':star:': '2b50',\n    ':o:': '2b55',\n    ':part_alternation_mark:': '303d',\n    ':mahjong:': '1f004',\n    ':black_joker:': '1f0cf',\n    ':a:': '1f170',\n    ':b:': '1f171',\n    ':o2:': '1f17e',\n    ':parking:': '1f17f',\n    ':ab:': '1f18e',\n    ':cl:': '1f191',\n    ':cool:': '1f192',\n    ':free:': '1f193',\n    ':id:': '1f194',\n    ':new:': '1f195',\n    ':ng:': '1f196',\n    ':ok:': '1f197',\n    ':sos:': '1f198',\n    ':up:': '1f199',\n    ':vs:': '1f19a',\n    ':koko:': '1f201',\n    ':sa:': '1f202',\n    ':u7121:': '1f21a',\n    ':u6307:': '1f22f',\n    ':u7981:': '1f232',\n    ':u7a7a:': '1f233',\n    ':u5408:': '1f234',\n    ':u6e80:': '1f235',\n    ':u6709:': '1f236',\n    ':u6708:': '1f237',\n    ':u7533:': '1f238',\n    ':u5272:': '1f239',\n    ':u55b6:': '1f23a',\n    ':ideograph_advantage:': '1f250',\n    ':accept:': '1f251',\n    ':cyclone:': '1f300',\n    ':foggy:': '1f301',\n    ':closed_umbrella:': '1f302',\n    ':night_with_stars:': '1f303',\n    ':sunrise_over_mountains:': '1f304',\n    ':sunrise:': '1f305',\n    ':city_sunset:': '1f306',\n    ':city_sunrise:': '1f307',\n    ':rainbow:': '1f308',\n    ':bridge_at_night:': '1f309',\n    ':ocean:': '1f30a',\n    ':volcano:': '1f30b',\n    ':milky_way:': '1f30c',\n    ':earth_africa:': '1f30d',\n    ':earth_americas:': '1f30e',\n    ':earth_asia:': '1f30f',\n    ':globe_with_meridians:': '1f310',\n    ':new_moon:': '1f311',\n    ':waxing_crescent_moon:': '1f312',\n    ':first_quarter_moon:': '1f313',\n    ':moon:': '1f314',\n    ':waxing_gibbous_moon:': '1f314',\n    ':full_moon:': '1f315',\n    ':waning_gibbous_moon:': '1f316',\n    ':last_quarter_moon:': '1f317',\n    ':waning_crescent_moon:': '1f318',\n    ':crescent_moon:': '1f319',\n    ':new_moon_with_face:': '1f31a',\n    ':first_quarter_moon_with_face:': '1f31b',\n    ':last_quarter_moon_with_face:': '1f31c',\n    ':full_moon_with_face:': '1f31d',\n    ':sun_with_face:': '1f31e',\n    ':star2:': '1f31f',\n    ':stars:': '1f320',\n    ':thermometer:': '1f321',\n    ':mostly_sunny:': '1f324',\n    ':sun_small_cloud:': '1f324',\n    ':barely_sunny:': '1f325',\n    ':sun_behind_cloud:': '1f325',\n    ':partly_sunny_rain:': '1f326',\n    ':sun_behind_rain_cloud:': '1f326',\n    ':rain_cloud:': '1f327',\n    ':snow_cloud:': '1f328',\n    ':lightning:': '1f329',\n    ':lightning_cloud:': '1f329',\n    ':tornado:': '1f32a',\n    ':tornado_cloud:': '1f32a',\n    ':fog:': '1f32b',\n    ':wind_blowing_face:': '1f32c',\n    ':hotdog:': '1f32d',\n    ':taco:': '1f32e',\n    ':burrito:': '1f32f',\n    ':chestnut:': '1f330',\n    ':seedling:': '1f331',\n    ':evergreen_tree:': '1f332',\n    ':deciduous_tree:': '1f333',\n    ':palm_tree:': '1f334',\n    ':cactus:': '1f335',\n    ':hot_pepper:': '1f336',\n    ':tulip:': '1f337',\n    ':cherry_blossom:': '1f338',\n    ':rose:': '1f339',\n    ':hibiscus:': '1f33a',\n    ':sunflower:': '1f33b',\n    ':blossom:': '1f33c',\n    ':corn:': '1f33d',\n    ':ear_of_rice:': '1f33e',\n    ':herb:': '1f33f',\n    ':four_leaf_clover:': '1f340',\n    ':maple_leaf:': '1f341',\n    ':fallen_leaf:': '1f342',\n    ':leaves:': '1f343',\n    ':mushroom:': '1f344',\n    ':tomato:': '1f345',\n    ':eggplant:': '1f346',\n    ':grapes:': '1f347',\n    ':melon:': '1f348',\n    ':watermelon:': '1f349',\n    ':tangerine:': '1f34a',\n    ':lemon:': '1f34b',\n    ':banana:': '1f34c',\n    ':pineapple:': '1f34d',\n    ':apple:': '1f34e',\n    ':green_apple:': '1f34f',\n    ':pear:': '1f350',\n    ':peach:': '1f351',\n    ':cherries:': '1f352',\n    ':strawberry:': '1f353',\n    ':hamburger:': '1f354',\n    ':pizza:': '1f355',\n    ':meat_on_bone:': '1f356',\n    ':poultry_leg:': '1f357',\n    ':rice_cracker:': '1f358',\n    ':rice_ball:': '1f359',\n    ':rice:': '1f35a',\n    ':curry:': '1f35b',\n    ':ramen:': '1f35c',\n    ':spaghetti:': '1f35d',\n    ':bread:': '1f35e',\n    ':fries:': '1f35f',\n    ':sweet_potato:': '1f360',\n    ':dango:': '1f361',\n    ':oden:': '1f362',\n    ':sushi:': '1f363',\n    ':fried_shrimp:': '1f364',\n    ':fish_cake:': '1f365',\n    ':icecream:': '1f366',\n    ':shaved_ice:': '1f367',\n    ':ice_cream:': '1f368',\n    ':doughnut:': '1f369',\n    ':cookie:': '1f36a',\n    ':chocolate_bar:': '1f36b',\n    ':candy:': '1f36c',\n    ':lollipop:': '1f36d',\n    ':custard:': '1f36e',\n    ':honey_pot:': '1f36f',\n    ':cake:': '1f370',\n    ':bento:': '1f371',\n    ':stew:': '1f372',\n    ':egg:': '1f373',\n    ':fork_and_knife:': '1f374',\n    ':tea:': '1f375',\n    ':sake:': '1f376',\n    ':wine_glass:': '1f377',\n    ':cocktail:': '1f378',\n    ':tropical_drink:': '1f379',\n    ':beer:': '1f37a',\n    ':beers:': '1f37b',\n    ':baby_bottle:': '1f37c',\n    ':knife_fork_plate:': '1f37d',\n    ':champagne:': '1f37e',\n    ':popcorn:': '1f37f',\n    ':ribbon:': '1f380',\n    ':gift:': '1f381',\n    ':birthday:': '1f382',\n    ':jack_o_lantern:': '1f383',\n    ':christmas_tree:': '1f384',\n    ':santa:': '1f385',\n    ':fireworks:': '1f386',\n    ':sparkler:': '1f387',\n    ':balloon:': '1f388',\n    ':tada:': '1f389',\n    ':confetti_ball:': '1f38a',\n    ':tanabata_tree:': '1f38b',\n    ':crossed_flags:': '1f38c',\n    ':bamboo:': '1f38d',\n    ':dolls:': '1f38e',\n    ':flags:': '1f38f',\n    ':wind_chime:': '1f390',\n    ':rice_scene:': '1f391',\n    ':school_satchel:': '1f392',\n    ':mortar_board:': '1f393',\n    ':medal:': '1f396',\n    ':reminder_ribbon:': '1f397',\n    ':studio_microphone:': '1f399',\n    ':level_slider:': '1f39a',\n    ':control_knobs:': '1f39b',\n    ':film_frames:': '1f39e',\n    ':admission_tickets:': '1f39f',\n    ':carousel_horse:': '1f3a0',\n    ':ferris_wheel:': '1f3a1',\n    ':roller_coaster:': '1f3a2',\n    ':fishing_pole_and_fish:': '1f3a3',\n    ':microphone:': '1f3a4',\n    ':movie_camera:': '1f3a5',\n    ':cinema:': '1f3a6',\n    ':headphones:': '1f3a7',\n    ':art:': '1f3a8',\n    ':tophat:': '1f3a9',\n    ':circus_tent:': '1f3aa',\n    ':ticket:': '1f3ab',\n    ':clapper:': '1f3ac',\n    ':performing_arts:': '1f3ad',\n    ':video_game:': '1f3ae',\n    ':dart:': '1f3af',\n    ':slot_machine:': '1f3b0',\n    ':8ball:': '1f3b1',\n    ':game_die:': '1f3b2',\n    ':bowling:': '1f3b3',\n    ':flower_playing_cards:': '1f3b4',\n    ':musical_note:': '1f3b5',\n    ':notes:': '1f3b6',\n    ':saxophone:': '1f3b7',\n    ':guitar:': '1f3b8',\n    ':musical_keyboard:': '1f3b9',\n    ':trumpet:': '1f3ba',\n    ':violin:': '1f3bb',\n    ':musical_score:': '1f3bc',\n    ':running_shirt_with_sash:': '1f3bd',\n    ':tennis:': '1f3be',\n    ':ski:': '1f3bf',\n    ':basketball:': '1f3c0',\n    ':checkered_flag:': '1f3c1',\n    ':snowboarder:': '1f3c2',\n    ':runner:': '1f3c3',\n    ':running:': '1f3c3',\n    ':surfer:': '1f3c4',\n    ':sports_medal:': '1f3c5',\n    ':trophy:': '1f3c6',\n    ':horse_racing:': '1f3c7',\n    ':football:': '1f3c8',\n    ':rugby_football:': '1f3c9',\n    ':swimmer:': '1f3ca',\n    ':weight_lifter:': '1f3cb',\n    ':golfer:': '1f3cc',\n    ':racing_motorcycle:': '1f3cd',\n    ':racing_car:': '1f3ce',\n    ':cricket_bat_and_ball:': '1f3cf',\n    ':volleyball:': '1f3d0',\n    ':field_hockey_stick_and_ball:': '1f3d1',\n    ':ice_hockey_stick_and_puck:': '1f3d2',\n    ':table_tennis_paddle_and_ball:': '1f3d3',\n    ':snow_capped_mountain:': '1f3d4',\n    ':camping:': '1f3d5',\n    ':beach_with_umbrella:': '1f3d6',\n    ':building_construction:': '1f3d7',\n    ':house_buildings:': '1f3d8',\n    ':cityscape:': '1f3d9',\n    ':derelict_house_building:': '1f3da',\n    ':classical_building:': '1f3db',\n    ':desert:': '1f3dc',\n    ':desert_island:': '1f3dd',\n    ':national_park:': '1f3de',\n    ':stadium:': '1f3df',\n    ':house:': '1f3e0',\n    ':house_with_garden:': '1f3e1',\n    ':office:': '1f3e2',\n    ':post_office:': '1f3e3',\n    ':european_post_office:': '1f3e4',\n    ':hospital:': '1f3e5',\n    ':bank:': '1f3e6',\n    ':atm:': '1f3e7',\n    ':hotel:': '1f3e8',\n    ':love_hotel:': '1f3e9',\n    ':convenience_store:': '1f3ea',\n    ':school:': '1f3eb',\n    ':department_store:': '1f3ec',\n    ':factory:': '1f3ed',\n    ':izakaya_lantern:': '1f3ee',\n    ':lantern:': '1f3ee',\n    ':japanese_castle:': '1f3ef',\n    ':european_castle:': '1f3f0',\n    ':waving_white_flag:': '1f3f3',\n    ':waving_black_flag:': '1f3f4',\n    ':rosette:': '1f3f5',\n    ':label:': '1f3f7',\n    ':badminton_racquet_and_shuttlecock:': '1f3f8',\n    ':bow_and_arrow:': '1f3f9',\n    ':amphora:': '1f3fa',\n    ':skin-tone-2:': '1f3fb',\n    ':skin-tone-3:': '1f3fc',\n    ':skin-tone-4:': '1f3fd',\n    ':skin-tone-5:': '1f3fe',\n    ':skin-tone-6:': '1f3ff',\n    ':rat:': '1f400',\n    ':mouse2:': '1f401',\n    ':ox:': '1f402',\n    ':water_buffalo:': '1f403',\n    ':cow2:': '1f404',\n    ':tiger2:': '1f405',\n    ':leopard:': '1f406',\n    ':rabbit2:': '1f407',\n    ':cat2:': '1f408',\n    ':dragon:': '1f409',\n    ':crocodile:': '1f40a',\n    ':whale2:': '1f40b',\n    ':snail:': '1f40c',\n    ':snake:': '1f40d',\n    ':racehorse:': '1f40e',\n    ':ram:': '1f40f',\n    ':goat:': '1f410',\n    ':sheep:': '1f411',\n    ':monkey:': '1f412',\n    ':rooster:': '1f413',\n    ':chicken:': '1f414',\n    ':dog2:': '1f415',\n    ':pig2:': '1f416',\n    ':boar:': '1f417',\n    ':elephant:': '1f418',\n    ':octopus:': '1f419',\n    ':shell:': '1f41a',\n    ':bug:': '1f41b',\n    ':ant:': '1f41c',\n    ':bee:': '1f41d',\n    ':honeybee:': '1f41d',\n    ':beetle:': '1f41e',\n    ':fish:': '1f41f',\n    ':tropical_fish:': '1f420',\n    ':blowfish:': '1f421',\n    ':turtle:': '1f422',\n    ':hatching_chick:': '1f423',\n    ':baby_chick:': '1f424',\n    ':hatched_chick:': '1f425',\n    ':bird:': '1f426',\n    ':penguin:': '1f427',\n    ':koala:': '1f428',\n    ':poodle:': '1f429',\n    ':dromedary_camel:': '1f42a',\n    ':camel:': '1f42b',\n    ':dolphin:': '1f42c',\n    ':flipper:': '1f42c',\n    ':mouse:': '1f42d',\n    ':cow:': '1f42e',\n    ':tiger:': '1f42f',\n    ':rabbit:': '1f430',\n    ':cat:': '1f431',\n    ':dragon_face:': '1f432',\n    ':whale:': '1f433',\n    ':horse:': '1f434',\n    ':monkey_face:': '1f435',\n    ':dog:': '1f436',\n    ':pig:': '1f437',\n    ':frog:': '1f438',\n    ':hamster:': '1f439',\n    ':wolf:': '1f43a',\n    ':bear:': '1f43b',\n    ':panda_face:': '1f43c',\n    ':pig_nose:': '1f43d',\n    ':feet:': '1f43e',\n    ':paw_prints:': '1f43e',\n    ':chipmunk:': '1f43f',\n    ':eyes:': '1f440',\n    ':eye:': '1f441',\n    ':ear:': '1f442',\n    ':nose:': '1f443',\n    ':lips:': '1f444',\n    ':tongue:': '1f445',\n    ':point_up_2:': '1f446',\n    ':point_down:': '1f447',\n    ':point_left:': '1f448',\n    ':point_right:': '1f449',\n    ':facepunch:': '1f44a',\n    ':punch:': '1f44a',\n    ':wave:': '1f44b',\n    ':ok_hand:': '1f44c',\n    ':+1:': '1f44d',\n    ':thumbsup:': '1f44d',\n    ':-1:': '1f44e',\n    ':thumbsdown:': '1f44e',\n    ':clap:': '1f44f',\n    ':open_hands:': '1f450',\n    ':crown:': '1f451',\n    ':womans_hat:': '1f452',\n    ':eyeglasses:': '1f453',\n    ':necktie:': '1f454',\n    ':shirt:': '1f455',\n    ':tshirt:': '1f455',\n    ':jeans:': '1f456',\n    ':dress:': '1f457',\n    ':kimono:': '1f458',\n    ':bikini:': '1f459',\n    ':womans_clothes:': '1f45a',\n    ':purse:': '1f45b',\n    ':handbag:': '1f45c',\n    ':pouch:': '1f45d',\n    ':mans_shoe:': '1f45e',\n    ':shoe:': '1f45e',\n    ':athletic_shoe:': '1f45f',\n    ':high_heel:': '1f460',\n    ':sandal:': '1f461',\n    ':boot:': '1f462',\n    ':footprints:': '1f463',\n    ':bust_in_silhouette:': '1f464',\n    ':busts_in_silhouette:': '1f465',\n    ':boy:': '1f466',\n    ':girl:': '1f467',\n    ':man:': '1f468',\n    ':woman:': '1f469',\n    ':family:': '1f46a',\n    ':man-woman-boy:': '1f46a',\n    ':couple:': '1f46b',\n    ':man_and_woman_holding_hands:': '1f46b',\n    ':two_men_holding_hands:': '1f46c',\n    ':two_women_holding_hands:': '1f46d',\n    ':cop:': '1f46e',\n    ':dancers:': '1f46f',\n    ':bride_with_veil:': '1f470',\n    ':person_with_blond_hair:': '1f471',\n    ':man_with_gua_pi_mao:': '1f472',\n    ':man_with_turban:': '1f473',\n    ':older_man:': '1f474',\n    ':older_woman:': '1f475',\n    ':baby:': '1f476',\n    ':construction_worker:': '1f477',\n    ':princess:': '1f478',\n    ':japanese_ogre:': '1f479',\n    ':japanese_goblin:': '1f47a',\n    ':ghost:': '1f47b',\n    ':angel:': '1f47c',\n    ':alien:': '1f47d',\n    ':space_invader:': '1f47e',\n    ':imp:': '1f47f',\n    ':skull:': '1f480',\n    ':information_desk_person:': '1f481',\n    ':guardsman:': '1f482',\n    ':dancer:': '1f483',\n    ':lipstick:': '1f484',\n    ':nail_care:': '1f485',\n    ':massage:': '1f486',\n    ':haircut:': '1f487',\n    ':barber:': '1f488',\n    ':syringe:': '1f489',\n    ':pill:': '1f48a',\n    ':kiss:': '1f48b',\n    ':love_letter:': '1f48c',\n    ':ring:': '1f48d',\n    ':gem:': '1f48e',\n    ':couplekiss:': '1f48f',\n    ':bouquet:': '1f490',\n    ':couple_with_heart:': '1f491',\n    ':wedding:': '1f492',\n    ':heartbeat:': '1f493',\n    ':broken_heart:': '1f494',\n    ':two_hearts:': '1f495',\n    ':sparkling_heart:': '1f496',\n    ':heartpulse:': '1f497',\n    ':cupid:': '1f498',\n    ':blue_heart:': '1f499',\n    ':green_heart:': '1f49a',\n    ':yellow_heart:': '1f49b',\n    ':purple_heart:': '1f49c',\n    ':gift_heart:': '1f49d',\n    ':revolving_hearts:': '1f49e',\n    ':heart_decoration:': '1f49f',\n    ':diamond_shape_with_a_dot_inside:': '1f4a0',\n    ':bulb:': '1f4a1',\n    ':anger:': '1f4a2',\n    ':bomb:': '1f4a3',\n    ':zzz:': '1f4a4',\n    ':boom:': '1f4a5',\n    ':collision:': '1f4a5',\n    ':sweat_drops:': '1f4a6',\n    ':droplet:': '1f4a7',\n    ':dash:': '1f4a8',\n    ':hankey:': '1f4a9',\n    ':poop:': '1f4a9',\n    ':shit:': '1f4a9',\n    ':muscle:': '1f4aa',\n    ':dizzy:': '1f4ab',\n    ':speech_balloon:': '1f4ac',\n    ':thought_balloon:': '1f4ad',\n    ':white_flower:': '1f4ae',\n    ':moneybag:': '1f4b0',\n    ':currency_exchange:': '1f4b1',\n    ':heavy_dollar_sign:': '1f4b2',\n    ':credit_card:': '1f4b3',\n    ':yen:': '1f4b4',\n    ':dollar:': '1f4b5',\n    ':euro:': '1f4b6',\n    ':pound:': '1f4b7',\n    ':money_with_wings:': '1f4b8',\n    ':chart:': '1f4b9',\n    ':seat:': '1f4ba',\n    ':computer:': '1f4bb',\n    ':briefcase:': '1f4bc',\n    ':minidisc:': '1f4bd',\n    ':floppy_disk:': '1f4be',\n    ':cd:': '1f4bf',\n    ':dvd:': '1f4c0',\n    ':file_folder:': '1f4c1',\n    ':open_file_folder:': '1f4c2',\n    ':page_with_curl:': '1f4c3',\n    ':page_facing_up:': '1f4c4',\n    ':date:': '1f4c5',\n    ':calendar:': '1f4c6',\n    ':card_index:': '1f4c7',\n    ':chart_with_upwards_trend:': '1f4c8',\n    ':chart_with_downwards_trend:': '1f4c9',\n    ':bar_chart:': '1f4ca',\n    ':clipboard:': '1f4cb',\n    ':pushpin:': '1f4cc',\n    ':round_pushpin:': '1f4cd',\n    ':paperclip:': '1f4ce',\n    ':straight_ruler:': '1f4cf',\n    ':triangular_ruler:': '1f4d0',\n    ':bookmark_tabs:': '1f4d1',\n    ':ledger:': '1f4d2',\n    ':notebook:': '1f4d3',\n    ':notebook_with_decorative_cover:': '1f4d4',\n    ':closed_book:': '1f4d5',\n    ':book:': '1f4d6',\n    ':open_book:': '1f4d6',\n    ':green_book:': '1f4d7',\n    ':blue_book:': '1f4d8',\n    ':orange_book:': '1f4d9',\n    ':books:': '1f4da',\n    ':name_badge:': '1f4db',\n    ':scroll:': '1f4dc',\n    ':memo:': '1f4dd',\n    ':pencil:': '1f4dd',\n    ':telephone_receiver:': '1f4de',\n    ':pager:': '1f4df',\n    ':fax:': '1f4e0',\n    ':satellite_antenna:': '1f4e1',\n    ':loudspeaker:': '1f4e2',\n    ':mega:': '1f4e3',\n    ':outbox_tray:': '1f4e4',\n    ':inbox_tray:': '1f4e5',\n    ':package:': '1f4e6',\n    ':e-mail:': '1f4e7',\n    ':incoming_envelope:': '1f4e8',\n    ':envelope_with_arrow:': '1f4e9',\n    ':mailbox_closed:': '1f4ea',\n    ':mailbox:': '1f4eb',\n    ':mailbox_with_mail:': '1f4ec',\n    ':mailbox_with_no_mail:': '1f4ed',\n    ':postbox:': '1f4ee',\n    ':postal_horn:': '1f4ef',\n    ':newspaper:': '1f4f0',\n    ':iphone:': '1f4f1',\n    ':calling:': '1f4f2',\n    ':vibration_mode:': '1f4f3',\n    ':mobile_phone_off:': '1f4f4',\n    ':no_mobile_phones:': '1f4f5',\n    ':signal_strength:': '1f4f6',\n    ':camera:': '1f4f7',\n    ':camera_with_flash:': '1f4f8',\n    ':video_camera:': '1f4f9',\n    ':tv:': '1f4fa',\n    ':radio:': '1f4fb',\n    ':vhs:': '1f4fc',\n    ':film_projector:': '1f4fd',\n    ':prayer_beads:': '1f4ff',\n    ':twisted_rightwards_arrows:': '1f500',\n    ':repeat:': '1f501',\n    ':repeat_one:': '1f502',\n    ':arrows_clockwise:': '1f503',\n    ':arrows_counterclockwise:': '1f504',\n    ':low_brightness:': '1f505',\n    ':high_brightness:': '1f506',\n    ':mute:': '1f507',\n    ':speaker:': '1f508',\n    ':sound:': '1f509',\n    ':loud_sound:': '1f50a',\n    ':battery:': '1f50b',\n    ':electric_plug:': '1f50c',\n    ':mag:': '1f50d',\n    ':mag_right:': '1f50e',\n    ':lock_with_ink_pen:': '1f50f',\n    ':closed_lock_with_key:': '1f510',\n    ':key:': '1f511',\n    ':lock:': '1f512',\n    ':unlock:': '1f513',\n    ':bell:': '1f514',\n    ':no_bell:': '1f515',\n    ':bookmark:': '1f516',\n    ':link:': '1f517',\n    ':radio_button:': '1f518',\n    ':back:': '1f519',\n    ':end:': '1f51a',\n    ':on:': '1f51b',\n    ':soon:': '1f51c',\n    ':top:': '1f51d',\n    ':underage:': '1f51e',\n    ':keycap_ten:': '1f51f',\n    ':capital_abcd:': '1f520',\n    ':abcd:': '1f521',\n    ':symbols:': '1f523',\n    ':abc:': '1f524',\n    ':fire:': '1f525',\n    ':flashlight:': '1f526',\n    ':wrench:': '1f527',\n    ':hammer:': '1f528',\n    ':nut_and_bolt:': '1f529',\n    ':hocho:': '1f52a',\n    ':knife:': '1f52a',\n    ':gun:': '1f52b',\n    ':microscope:': '1f52c',\n    ':telescope:': '1f52d',\n    ':crystal_ball:': '1f52e',\n    ':six_pointed_star:': '1f52f',\n    ':beginner:': '1f530',\n    ':trident:': '1f531',\n    ':black_square_button:': '1f532',\n    ':white_square_button:': '1f533',\n    ':red_circle:': '1f534',\n    ':large_blue_circle:': '1f535',\n    ':large_orange_diamond:': '1f536',\n    ':large_blue_diamond:': '1f537',\n    ':small_orange_diamond:': '1f538',\n    ':small_blue_diamond:': '1f539',\n    ':small_red_triangle:': '1f53a',\n    ':small_red_triangle_down:': '1f53b',\n    ':arrow_up_small:': '1f53c',\n    ':arrow_down_small:': '1f53d',\n    ':om_symbol:': '1f549',\n    ':dove_of_peace:': '1f54a',\n    ':kaaba:': '1f54b',\n    ':mosque:': '1f54c',\n    ':synagogue:': '1f54d',\n    ':menorah_with_nine_branches:': '1f54e',\n    ':clock1:': '1f550',\n    ':clock2:': '1f551',\n    ':clock3:': '1f552',\n    ':clock4:': '1f553',\n    ':clock5:': '1f554',\n    ':clock6:': '1f555',\n    ':clock7:': '1f556',\n    ':clock8:': '1f557',\n    ':clock9:': '1f558',\n    ':clock10:': '1f559',\n    ':clock11:': '1f55a',\n    ':clock12:': '1f55b',\n    ':clock130:': '1f55c',\n    ':clock230:': '1f55d',\n    ':clock330:': '1f55e',\n    ':clock430:': '1f55f',\n    ':clock530:': '1f560',\n    ':clock630:': '1f561',\n    ':clock730:': '1f562',\n    ':clock830:': '1f563',\n    ':clock930:': '1f564',\n    ':clock1030:': '1f565',\n    ':clock1130:': '1f566',\n    ':clock1230:': '1f567',\n    ':candle:': '1f56f',\n    ':mantelpiece_clock:': '1f570',\n    ':hole:': '1f573',\n    ':man_in_business_suit_levitating:': '1f574',\n    ':sleuth_or_spy:': '1f575',\n    ':dark_sunglasses:': '1f576',\n    ':spider:': '1f577',\n    ':spider_web:': '1f578',\n    ':joystick:': '1f579',\n    ':linked_paperclips:': '1f587',\n    ':lower_left_ballpoint_pen:': '1f58a',\n    ':lower_left_fountain_pen:': '1f58b',\n    ':lower_left_paintbrush:': '1f58c',\n    ':lower_left_crayon:': '1f58d',\n    ':raised_hand_with_fingers_splayed:': '1f590',\n    ':middle_finger:': '1f595',\n    ':reversed_hand_with_middle_finger_extended:': '1f595',\n    ':spock-hand:': '1f596',\n    ':desktop_computer:': '1f5a5',\n    ':printer:': '1f5a8',\n    ':three_button_mouse:': '1f5b1',\n    ':trackball:': '1f5b2',\n    ':frame_with_picture:': '1f5bc',\n    ':card_index_dividers:': '1f5c2',\n    ':card_file_box:': '1f5c3',\n    ':file_cabinet:': '1f5c4',\n    ':wastebasket:': '1f5d1',\n    ':spiral_note_pad:': '1f5d2',\n    ':spiral_calendar_pad:': '1f5d3',\n    ':compression:': '1f5dc',\n    ':old_key:': '1f5dd',\n    ':rolled_up_newspaper:': '1f5de',\n    ':dagger_knife:': '1f5e1',\n    ':speaking_head_in_silhouette:': '1f5e3',\n    ':left_speech_bubble:': '1f5e8',\n    ':right_anger_bubble:': '1f5ef',\n    ':ballot_box_with_ballot:': '1f5f3',\n    ':world_map:': '1f5fa',\n    ':mount_fuji:': '1f5fb',\n    ':tokyo_tower:': '1f5fc',\n    ':statue_of_liberty:': '1f5fd',\n    ':japan:': '1f5fe',\n    ':moyai:': '1f5ff',\n    ':grinning:': '1f600',\n    ':grin:': '1f601',\n    ':joy:': '1f602',\n    ':smiley:': '1f603',\n    ':smile:': '1f604',\n    ':sweat_smile:': '1f605',\n    ':laughing:': '1f606',\n    ':satisfied:': '1f606',\n    ':innocent:': '1f607',\n    ':smiling_imp:': '1f608',\n    ':wink:': '1f609',\n    ':blush:': '1f60a',\n    ':yum:': '1f60b',\n    ':relieved:': '1f60c',\n    ':heart_eyes:': '1f60d',\n    ':sunglasses:': '1f60e',\n    ':smirk:': '1f60f',\n    ':neutral_face:': '1f610',\n    ':expressionless:': '1f611',\n    ':unamused:': '1f612',\n    ':sweat:': '1f613',\n    ':pensive:': '1f614',\n    ':confused:': '1f615',\n    ':confounded:': '1f616',\n    ':kissing:': '1f617',\n    ':kissing_heart:': '1f618',\n    ':kissing_smiling_eyes:': '1f619',\n    ':kissing_closed_eyes:': '1f61a',\n    ':stuck_out_tongue:': '1f61b',\n    ':stuck_out_tongue_winking_eye:': '1f61c',\n    ':stuck_out_tongue_closed_eyes:': '1f61d',\n    ':disappointed:': '1f61e',\n    ':worried:': '1f61f',\n    ':angry:': '1f620',\n    ':rage:': '1f621',\n    ':cry:': '1f622',\n    ':persevere:': '1f623',\n    ':triumph:': '1f624',\n    ':disappointed_relieved:': '1f625',\n    ':frowning:': '1f626',\n    ':anguished:': '1f627',\n    ':fearful:': '1f628',\n    ':weary:': '1f629',\n    ':sleepy:': '1f62a',\n    ':tired_face:': '1f62b',\n    ':grimacing:': '1f62c',\n    ':sob:': '1f62d',\n    ':open_mouth:': '1f62e',\n    ':hushed:': '1f62f',\n    ':cold_sweat:': '1f630',\n    ':scream:': '1f631',\n    ':astonished:': '1f632',\n    ':flushed:': '1f633',\n    ':sleeping:': '1f634',\n    ':dizzy_face:': '1f635',\n    ':no_mouth:': '1f636',\n    ':mask:': '1f637',\n    ':smile_cat:': '1f638',\n    ':joy_cat:': '1f639',\n    ':smiley_cat:': '1f63a',\n    ':heart_eyes_cat:': '1f63b',\n    ':smirk_cat:': '1f63c',\n    ':kissing_cat:': '1f63d',\n    ':pouting_cat:': '1f63e',\n    ':crying_cat_face:': '1f63f',\n    ':scream_cat:': '1f640',\n    ':slightly_frowning_face:': '1f641',\n    ':slightly_smiling_face:': '1f642',\n    ':upside_down_face:': '1f643',\n    ':face_with_rolling_eyes:': '1f644',\n    ':no_good:': '1f645',\n    ':ok_woman:': '1f646',\n    ':bow:': '1f647',\n    ':see_no_evil:': '1f648',\n    ':hear_no_evil:': '1f649',\n    ':speak_no_evil:': '1f64a',\n    ':raising_hand:': '1f64b',\n    ':raised_hands:': '1f64c',\n    ':person_frowning:': '1f64d',\n    ':person_with_pouting_face:': '1f64e',\n    ':pray:': '1f64f',\n    ':rocket:': '1f680',\n    ':helicopter:': '1f681',\n    ':steam_locomotive:': '1f682',\n    ':railway_car:': '1f683',\n    ':bullettrain_side:': '1f684',\n    ':bullettrain_front:': '1f685',\n    ':train2:': '1f686',\n    ':metro:': '1f687',\n    ':light_rail:': '1f688',\n    ':station:': '1f689',\n    ':tram:': '1f68a',\n    ':train:': '1f68b',\n    ':bus:': '1f68c',\n    ':oncoming_bus:': '1f68d',\n    ':trolleybus:': '1f68e',\n    ':busstop:': '1f68f',\n    ':minibus:': '1f690',\n    ':ambulance:': '1f691',\n    ':fire_engine:': '1f692',\n    ':police_car:': '1f693',\n    ':oncoming_police_car:': '1f694',\n    ':taxi:': '1f695',\n    ':oncoming_taxi:': '1f696',\n    ':car:': '1f697',\n    ':red_car:': '1f697',\n    ':oncoming_automobile:': '1f698',\n    ':blue_car:': '1f699',\n    ':truck:': '1f69a',\n    ':articulated_lorry:': '1f69b',\n    ':tractor:': '1f69c',\n    ':monorail:': '1f69d',\n    ':mountain_railway:': '1f69e',\n    ':suspension_railway:': '1f69f',\n    ':mountain_cableway:': '1f6a0',\n    ':aerial_tramway:': '1f6a1',\n    ':ship:': '1f6a2',\n    ':rowboat:': '1f6a3',\n    ':speedboat:': '1f6a4',\n    ':traffic_light:': '1f6a5',\n    ':vertical_traffic_light:': '1f6a6',\n    ':construction:': '1f6a7',\n    ':rotating_light:': '1f6a8',\n    ':triangular_flag_on_post:': '1f6a9',\n    ':door:': '1f6aa',\n    ':no_entry_sign:': '1f6ab',\n    ':smoking:': '1f6ac',\n    ':no_smoking:': '1f6ad',\n    ':put_litter_in_its_place:': '1f6ae',\n    ':do_not_litter:': '1f6af',\n    ':potable_water:': '1f6b0',\n    ':non-potable_water:': '1f6b1',\n    ':bike:': '1f6b2',\n    ':no_bicycles:': '1f6b3',\n    ':bicyclist:': '1f6b4',\n    ':mountain_bicyclist:': '1f6b5',\n    ':walking:': '1f6b6',\n    ':no_pedestrians:': '1f6b7',\n    ':children_crossing:': '1f6b8',\n    ':mens:': '1f6b9',\n    ':womens:': '1f6ba',\n    ':restroom:': '1f6bb',\n    ':baby_symbol:': '1f6bc',\n    ':toilet:': '1f6bd',\n    ':wc:': '1f6be',\n    ':shower:': '1f6bf',\n    ':bath:': '1f6c0',\n    ':bathtub:': '1f6c1',\n    ':passport_control:': '1f6c2',\n    ':customs:': '1f6c3',\n    ':baggage_claim:': '1f6c4',\n    ':left_luggage:': '1f6c5',\n    ':couch_and_lamp:': '1f6cb',\n    ':sleeping_accommodation:': '1f6cc',\n    ':shopping_bags:': '1f6cd',\n    ':bellhop_bell:': '1f6ce',\n    ':bed:': '1f6cf',\n    ':place_of_worship:': '1f6d0',\n    ':hammer_and_wrench:': '1f6e0',\n    ':shield:': '1f6e1',\n    ':oil_drum:': '1f6e2',\n    ':motorway:': '1f6e3',\n    ':railway_track:': '1f6e4',\n    ':motor_boat:': '1f6e5',\n    ':small_airplane:': '1f6e9',\n    ':airplane_departure:': '1f6eb',\n    ':airplane_arriving:': '1f6ec',\n    ':satellite:': '1f6f0',\n    ':passenger_ship:': '1f6f3',\n    ':zipper_mouth_face:': '1f910',\n    ':money_mouth_face:': '1f911',\n    ':face_with_thermometer:': '1f912',\n    ':nerd_face:': '1f913',\n    ':thinking_face:': '1f914',\n    ':face_with_head_bandage:': '1f915',\n    ':robot_face:': '1f916',\n    ':hugging_face:': '1f917',\n    ':the_horns:': '1f918',\n    ':sign_of_the_horns:': '1f918',\n    ':crab:': '1f980',\n    ':lion_face:': '1f981',\n    ':scorpion:': '1f982',\n    ':turkey:': '1f983',\n    ':unicorn_face:': '1f984',\n    ':cheese_wedge:': '1f9c0',\n    ':hash:': '0023-20e3',\n    ':keycap_star:': '002a-20e3',\n    ':zero:': '0030-20e3',\n    ':one:': '0031-20e3',\n    ':two:': '0032-20e3',\n    ':three:': '0033-20e3',\n    ':four:': '0034-20e3',\n    ':five:': '0035-20e3',\n    ':six:': '0036-20e3',\n    ':seven:': '0037-20e3',\n    ':eight:': '0038-20e3',\n    ':nine:': '0039-20e3',\n    ':man-man-boy:': '1f468-200d-1f468-200d-1f466',\n    ':man-man-boy-boy:': '1f468-200d-1f468-200d-1f466-200d-1f466',\n    ':man-man-girl:': '1f468-200d-1f468-200d-1f467',\n    ':man-man-girl-boy:': '1f468-200d-1f468-200d-1f467-200d-1f466',\n    ':man-man-girl-girl:': '1f468-200d-1f468-200d-1f467-200d-1f467',\n    ':man-woman-boy-boy:': '1f468-200d-1f469-200d-1f466-200d-1f466',\n    ':man-woman-girl:': '1f468-200d-1f469-200d-1f467',\n    ':man-woman-girl-boy:': '1f468-200d-1f469-200d-1f467-200d-1f466',\n    ':man-woman-girl-girl:': '1f468-200d-1f469-200d-1f467-200d-1f467',\n    ':man-heart-man:': '1f468-200d-2764-fe0f-200d-1f468',\n    ':man-kiss-man:': '1f468-200d-2764-fe0f-200d-1f48b-200d-1f468',\n    ':woman-woman-boy:': '1f469-200d-1f469-200d-1f466',\n    ':woman-woman-boy-boy:': '1f469-200d-1f469-200d-1f466-200d-1f466',\n    ':woman-woman-girl:': '1f469-200d-1f469-200d-1f467',\n    ':woman-woman-girl-boy:': '1f469-200d-1f469-200d-1f467-200d-1f466',\n    ':woman-woman-girl-girl:': '1f469-200d-1f469-200d-1f467-200d-1f467',\n    ':woman-heart-woman:': '1f469-200d-2764-fe0f-200d-1f469',\n    ':woman-kiss-woman:': '1f469-200d-2764-fe0f-200d-1f48b-200d-1f469',\n};\n/**\n * Set of the functions that are in the prototype of the object and not to convert\n */\nconst objectPrototypesFunctions = new Set([\n    '__defineGetter__',\n    '__defineSetter__',\n    '__lookupGetter__',\n    '__lookupSetter__',\n    '__proto__',\n    'constructor',\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toLocaleString',\n    'toString',\n    'valueOf',\n]);\n/**\n *\n * Function to check if in the string parameter there is some emoji and in case convert it.\n *\n * @param text\n * @returns the text with the emojis converted\n */\nexport const checkText = (text) => {\n    const words = text && text.trimStart().split(' ');\n    const newText = [];\n    if (words) {\n        words.forEach((word) => {\n            let w = word;\n            if (word in objectPrototypesFunctions) {\n                w = word;\n            }\n            else if (word in emojiMap) {\n                w = emojiMap[word];\n            }\n            newText.push(w);\n        });\n    }\n    return newText.join(' ');\n};\n/**\n *\n * function to get the keys of an object that starts with a specific string\n *\n * @param obj\n * @param start\n * @returns string array\n */\nexport const keysStartingWith = (obj, start) => Object.keys(obj).filter((key) => key.startsWith(start));\n/**\n *\n * Function to check if in the string parameter there is some emoji but\n * with autosuggestion, so if there is only one emoji key in the map starting with the string, it use it.\n *\n * @param text\n * @returns the text with the emojis converted\n */\nexport const checkTextWithAutoSuggestions = (text) => {\n    const words = text && text.trimStart().split(' ');\n    const newText = [];\n    if (words) {\n        words.forEach((word) => {\n            let w = word;\n            if (word in objectPrototypesFunctions) {\n                w = word;\n            }\n            else if (word in emojiMap) {\n                w = emojiMap[word];\n            }\n            else {\n                const emojiArray = keysStartingWith(emojiMap, word);\n                if (emojiArray.length === 1) {\n                    w = emojiMap[emojiArray[0]];\n                }\n            }\n            newText.push(w);\n        });\n    }\n    return newText.join(' ');\n};\n/**\n *\n * Function to convert a unicode string to an emoji\n *\n * @param text\n * @returns string emoji\n */\nexport const fromUnicodeToEmoji = (text) => String.fromCodePoint(parseInt(text, 16));\n/**\n *\n * Function to check if in the string parameter there is some emoji but\n * it use the map with unicode char instead of emoji,\n * so if there is only one emoji key in the map starting with the string, it use it.\n *\n * @param text\n * @returns the text with the emojis converted\n */\nexport const checkTextWithAutoSuggestionsAndUnicode = (text) => {\n    const words = text && text.trimStart().split(' ');\n    const newText = [];\n    if (words) {\n        words.forEach((word) => {\n            let w = word;\n            if (word in objectPrototypesFunctions) {\n                w = word;\n            }\n            else if (word in mapStringToUnicode) {\n                w = fromUnicodeToEmoji(mapStringToUnicode[word]);\n            }\n            else {\n                const emojiArray = keysStartingWith(mapStringToUnicode, word);\n                if (emojiArray.length === 1) {\n                    w = fromUnicodeToEmoji(mapStringToUnicode[emojiArray[0]]);\n                }\n            }\n            newText.push(w);\n        });\n    }\n    return newText.join(' ');\n};\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};\n//# sourceMappingURL=./named-references.js.map","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};\n//# sourceMappingURL=./numeric-unicode-map.js.map","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;\n//# sourceMappingURL=./surrogate-pairs.js.map","\"use strict\";var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};Object.defineProperty(exports,\"__esModule\",{value:true});var named_references_1=require(\"./named-references\");var numeric_unicode_map_1=require(\"./numeric-unicode-map\");var surrogate_pairs_1=require(\"./surrogate-pairs\");var allNamedReferences=__assign(__assign({},named_references_1.namedReferences),{all:named_references_1.namedReferences.html5});function replaceUsingRegExp(macroText,macroRegExp,macroReplacer){macroRegExp.lastIndex=0;var replaceMatch=macroRegExp.exec(macroText);var replaceResult;if(replaceMatch){replaceResult=\"\";var replaceLastIndex=0;do{if(replaceLastIndex!==replaceMatch.index){replaceResult+=macroText.substring(replaceLastIndex,replaceMatch.index)}var replaceInput=replaceMatch[0];replaceResult+=macroReplacer(replaceInput);replaceLastIndex=replaceMatch.index+replaceInput.length}while(replaceMatch=macroRegExp.exec(macroText));if(replaceLastIndex!==macroText.length){replaceResult+=macroText.substring(replaceLastIndex)}}else{replaceResult=macroText}return replaceResult}var encodeRegExps={specialChars:/[<>'\"&]/g,nonAscii:/[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,nonAsciiPrintable:/[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,nonAsciiPrintableOnly:/[\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,extensive:/[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g};var defaultEncodeOptions={mode:\"specialChars\",level:\"all\",numeric:\"decimal\"};function encode(text,_a){var _b=_a===void 0?defaultEncodeOptions:_a,_c=_b.mode,mode=_c===void 0?\"specialChars\":_c,_d=_b.numeric,numeric=_d===void 0?\"decimal\":_d,_e=_b.level,level=_e===void 0?\"all\":_e;if(!text){return\"\"}var encodeRegExp=encodeRegExps[mode];var references=allNamedReferences[level].characters;var isHex=numeric===\"hexadecimal\";return replaceUsingRegExp(text,encodeRegExp,(function(input){var result=references[input];if(!result){var code=input.length>1?surrogate_pairs_1.getCodePoint(input,0):input.charCodeAt(0);result=(isHex?\"&#x\"+code.toString(16):\"&#\"+code)+\";\"}return result}))}exports.encode=encode;var defaultDecodeOptions={scope:\"body\",level:\"all\"};var strict=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;var attribute=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;var baseDecodeRegExps={xml:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.xml},html4:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.html4},html5:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.html5}};var decodeRegExps=__assign(__assign({},baseDecodeRegExps),{all:baseDecodeRegExps.html5});var fromCharCode=String.fromCharCode;var outOfBoundsChar=fromCharCode(65533);var defaultDecodeEntityOptions={level:\"all\"};function getDecodedEntity(entity,references,isAttribute,isStrict){var decodeResult=entity;var decodeEntityLastChar=entity[entity.length-1];if(isAttribute&&decodeEntityLastChar===\"=\"){decodeResult=entity}else if(isStrict&&decodeEntityLastChar!==\";\"){decodeResult=entity}else{var decodeResultByReference=references[entity];if(decodeResultByReference){decodeResult=decodeResultByReference}else if(entity[0]===\"&\"&&entity[1]===\"#\"){var decodeSecondChar=entity[2];var decodeCode=decodeSecondChar==\"x\"||decodeSecondChar==\"X\"?parseInt(entity.substr(3),16):parseInt(entity.substr(2));decodeResult=decodeCode>=1114111?outOfBoundsChar:decodeCode>65535?surrogate_pairs_1.fromCodePoint(decodeCode):fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode]||decodeCode)}}return decodeResult}function decodeEntity(entity,_a){var _b=(_a===void 0?defaultDecodeEntityOptions:_a).level,level=_b===void 0?\"all\":_b;if(!entity){return\"\"}return getDecodedEntity(entity,allNamedReferences[level].entities,false,false)}exports.decodeEntity=decodeEntity;function decode(text,_a){var _b=_a===void 0?defaultDecodeOptions:_a,_c=_b.level,level=_c===void 0?\"all\":_c,_d=_b.scope,scope=_d===void 0?level===\"xml\"?\"strict\":\"body\":_d;if(!text){return\"\"}var decodeRegExp=decodeRegExps[level][scope];var references=allNamedReferences[level].entities;var isAttribute=scope===\"attribute\";var isStrict=scope===\"strict\";return replaceUsingRegExp(text,decodeRegExp,(function(entity){return getDecodedEntity(entity,references,isAttribute,isStrict)}))}exports.decode=decode;\n//# sourceMappingURL=./index.js.map","\nimport * as smile2emoji from 'smile2emoji'\nconst { checkText,emojiMap } = smile2emoji\nimport {decode} from 'html-entities';\n// import util from 'node:util'\n\nexport function t(str) {\n    // TODO: raise as a bug?\n   const leading = str.match(/^[\\s]*/);\n//   console.log('\"'+str+'\"')\n\n    return {type: 'text', value: leading + decode(checkText(str),{level: 'html5'})};\n}\n","// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range.\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n  return false\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nvar regexpCache = Object.create(null);\n\nfunction wordsRegexp(words) {\n  return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called when\n  // a semicolon is automatically inserted. It will be passed the\n  // position of the inserted semicolon as an offset, and if\n  // `locations` is enabled, it is given the location as a `{line,\n  // column}` object as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // By default, the parser will verify that private properties are\n  // only used in places where they are valid and have been declared.\n  // Set this to false to turn such checks off.\n  checkPrivateFields: true,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  // When this option has an array as value, objects representing the\n  // comments are pushed to it.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (!opts || opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92) { return true } // '[', '\\'\n  if (context) { return false }\n\n  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var containsEsc = this.containsEsc;\n  var refDestructuringErrors = new DestructuringErrors;\n  var initPos = this.start;\n  var init = awaitAt > -1\n    ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n    : this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)\n      if (this.type === types$1._in) { this.unexpected(awaitAt); }\n      node.await = true;\n    } else if (isForOf && this.options.ecmaVersion >= 8) {\n      if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n      else if (this.options.ecmaVersion >= 9) { node.await = false; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseCatchClauseParam = function() {\n  var param = this.parseBindingAtom();\n  var simple = param.type === \"Identifier\";\n  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n  this.expect(types$1.parenR);\n\n  return param\n};\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseCatchClauseParam();\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n  this.next();\n  this.parseVar(node, false, kind, allowMissingInitializer);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  if (!this.options.checkPrivateFields) { return }\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExportAllDeclaration = function(node, exports) {\n  if (this.options.ecmaVersion >= 11) {\n    if (this.eatContextual(\"as\")) {\n      node.exported = this.parseModuleExportName();\n      this.checkExport(exports, node.exported, this.lastTokStart);\n    } else {\n      node.exported = null;\n    }\n  }\n  this.expectContextual(\"from\");\n  if (this.type !== types$1.string) { this.unexpected(); }\n  node.source = this.parseExprAtom();\n  if (this.options.ecmaVersion >= 16)\n    { node.attributes = this.parseWithClause(); }\n  this.semicolon();\n  return this.finishNode(node, \"ExportAllDeclaration\")\n};\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    return this.parseExportAllDeclaration(node, exports)\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    node.declaration = this.parseExportDefaultDeclaration();\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseExportDeclaration(node);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      if (this.options.ecmaVersion >= 16)\n        { node.attributes = this.parseWithClause(); }\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.parseExportDeclaration = function(node) {\n  return this.parseStatement(null)\n};\n\npp$8.parseExportDefaultDeclaration = function() {\n  var isAsync;\n  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n    var fNode = this.startNode();\n    this.next();\n    if (isAsync) { this.next(); }\n    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n  } else if (this.type === types$1._class) {\n    var cNode = this.startNode();\n    return this.parseClass(cNode, \"nullableID\")\n  } else {\n    var declaration = this.parseMaybeAssign();\n    this.semicolon();\n    return declaration\n  }\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifier = function(exports) {\n  var node = this.startNode();\n  node.local = this.parseModuleExportName();\n\n  node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n  this.checkExport(\n    exports,\n    node.exported,\n    node.exported.start\n  );\n\n  return this.finishNode(node, \"ExportSpecifier\")\n};\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseExportSpecifier(exports));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  if (this.options.ecmaVersion >= 16)\n    { node.attributes = this.parseWithClause(); }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifier = function() {\n  var node = this.startNode();\n  node.imported = this.parseModuleExportName();\n\n  if (this.eatContextual(\"as\")) {\n    node.local = this.parseIdent();\n  } else {\n    this.checkUnreserved(node.imported);\n    node.local = node.imported;\n  }\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n\n  return this.finishNode(node, \"ImportSpecifier\")\n};\n\npp$8.parseImportDefaultSpecifier = function() {\n  // import defaultObj, { x, y as z } from '...'\n  var node = this.startNode();\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportDefaultSpecifier\")\n};\n\npp$8.parseImportNamespaceSpecifier = function() {\n  var node = this.startNode();\n  this.next();\n  this.expectContextual(\"as\");\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportNamespaceSpecifier\")\n};\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    nodes.push(this.parseImportDefaultSpecifier());\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    nodes.push(this.parseImportNamespaceSpecifier());\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseImportSpecifier());\n  }\n  return nodes\n};\n\npp$8.parseWithClause = function() {\n  var nodes = [];\n  if (!this.eat(types$1._with)) {\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  var attributeKeys = {};\n  var first = true;\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var attr = this.parseImportAttribute();\n    var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n    if (hasOwn(attributeKeys, keyName))\n      { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n    attributeKeys[keyName] = true;\n    nodes.push(attr);\n  }\n  return nodes\n};\n\npp$8.parseImportAttribute = function() {\n  var node = this.startNode();\n  node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n  this.expect(types$1.colon);\n  if (this.type !== types$1.string) {\n    this.unexpected();\n  }\n  node.value = this.parseExprAtom();\n  return this.finishNode(node, \"ImportAttribute\")\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      elts.push(this.parseAssignableListItem(allowModifiers));\n    }\n  }\n  return elts\n};\n\npp$7.parseAssignableListItem = function(allowModifiers) {\n  var elem = this.parseMaybeDefault(this.start, this.startLoc);\n  this.parseBindingListItem(elem);\n  return elem\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.colon.updateContext = function() {\n  if (this.curContext().token === \"function\") { this.context.pop(); }\n  this.exprAllowed = true;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isLocalVariableAccess(node) {\n  return (\n    node.type === \"Identifier\" ||\n    node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n  )\n}\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n    node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.shouldParseAsyncArrow = function() {\n  return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n};\n\npp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport(forNew)\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    return this.parseExprAtomDefault()\n  }\n};\n\npp$5.parseExprAtomDefault = function() {\n  this.unexpected();\n};\n\npp$5.parseExprImport = function(forNew) {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  this.next();\n\n  if (this.type === types$1.parenL && !forNew) {\n    return this.parseDynamicImport(node)\n  } else if (this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"import\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    return this.parseImportMeta(node)\n  } else {\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  if (this.options.ecmaVersion >= 16) {\n    if (!this.eat(types$1.parenR)) {\n      this.expect(types$1.comma);\n      if (!this.afterTrailingComma(types$1.parenR)) {\n        node.options = this.parseMaybeAssign();\n        if (!this.eat(types$1.parenR)) {\n          this.expect(types$1.comma);\n          if (!this.afterTrailingComma(types$1.parenR)) {\n            this.unexpected();\n          }\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      node.options = null;\n    }\n  } else {\n    // Verify ending.\n    if (!this.eat(types$1.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.shouldParseArrow = function(exprList) {\n  return !this.canInsertSemicolon()\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(\n            this.start,\n            \"Comma is not permitted after the rest element\"\n          );\n        }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  this.next();\n  if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"new\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    this.next();\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parseGetterSetter = function(prop) {\n  prop.kind = prop.key.name;\n  this.parsePropertyName(prop);\n  prop.value = this.parseMethod(false);\n  var paramCount = prop.kind === \"get\" ? 0 : 1;\n  if (prop.value.params.length !== paramCount) {\n    var start = prop.value.start;\n    if (prop.kind === \"get\")\n      { this.raiseRecoverable(start, \"getter should have no params\"); }\n    else\n      { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n  } else {\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n  }\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.parseGetterSetter(prop);\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal) {\n  var node = this.parseIdentNode();\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parseIdentNode = function() {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n    this.type = types$1.name;\n  } else {\n    this.unexpected();\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.options.checkPrivateFields) {\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file was generated by \"bin/generate-unicode-script-values.js\". Do not modify manually!\nvar scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar ecma14BinaryProperties = ecma13BinaryProperties;\n\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties,\n  14: ecma14BinaryProperties\n};\n\n// #table-binary-unicode-properties-of-strings\nvar ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\nvar unicodeBinaryPropertiesOfStrings = {\n  9: \"\",\n  10: \"\",\n  11: \"\",\n  12: \"\",\n  13: \"\",\n  14: ecma14BinaryPropertiesOfStrings\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues,\n  14: ecma14ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\n// Track disjunction structure to determine whether a duplicate\n// capture group name is allowed because it is in a separate branch.\nvar BranchID = function BranchID(parent, base) {\n  // Parent disjunction branch\n  this.parent = parent;\n  // Identifies this set of sibling branches\n  this.base = base || this;\n};\n\nBranchID.prototype.separatedFrom = function separatedFrom (alt) {\n  // A branch is separate from another branch if they or any of\n  // their parents are siblings in a given disjunction\n  for (var self = this; self; self = self.parent) {\n    for (var other = alt; other; other = other.parent) {\n      if (self.base === other.base && self !== other) { return true }\n    }\n  }\n  return false\n};\n\nBranchID.prototype.sibling = function sibling () {\n  return new BranchID(this.parent, this.base)\n};\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchV = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = Object.create(null);\n  this.backReferenceNames = [];\n  this.branchID = null;\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicodeSets = flags.indexOf(\"v\") !== -1;\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n    this.switchU = true;\n    this.switchV = true;\n    this.switchN = true;\n  } else {\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchV = false;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  }\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nRegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var pos = this.pos;\n  for (var i = 0, list = chs; i < list.length; i += 1) {\n    var ch = list[i];\n\n      var current = this.at(pos, forceU);\n    if (current === -1 || current !== ch) {\n      return false\n    }\n    pos = this.nextIndex(pos, forceU);\n  }\n  this.pos = pos;\n  return true\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  var u = false;\n  var v = false;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n    if (flag === \"u\") { u = true; }\n    if (flag === \"v\") { v = true; }\n  }\n  if (this.options.ecmaVersion >= 15 && u && v) {\n    this.raise(state.start, \"Invalid regular expression flag\");\n  }\n};\n\nfunction hasProp(obj) {\n  for (var _ in obj) { return true }\n  return false\n}\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames = Object.create(null);\n  state.backReferenceNames.length = 0;\n  state.branchID = null;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (!state.groupNames[name]) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  var trackDisjunction = this.options.ecmaVersion >= 16;\n  if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n    this.regexp_alternative(state);\n  }\n  if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.options.ecmaVersion >= 16) {\n        var addModifiers = this.regexp_eatModifiers(state);\n        var hasHyphen = state.eat(0x2D /* - */);\n        if (addModifiers || hasHyphen) {\n          for (var i = 0; i < addModifiers.length; i++) {\n            var modifier = addModifiers.charAt(i);\n            if (addModifiers.indexOf(modifier, i + 1) > -1) {\n              state.raise(\"Duplicate regular expression modifiers\");\n            }\n          }\n          if (hasHyphen) {\n            var removeModifiers = this.regexp_eatModifiers(state);\n            if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {\n              state.raise(\"Invalid regular expression modifiers\");\n            }\n            for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n              var modifier$1 = removeModifiers.charAt(i$1);\n              if (\n                removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                addModifiers.indexOf(modifier$1) > -1\n              ) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n          }\n        }\n      }\n      if (state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n// RegularExpressionModifiers ::\n//   [empty]\n//   RegularExpressionModifiers RegularExpressionModifier\npp$1.regexp_eatModifiers = function(state) {\n  var modifiers = \"\";\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n    modifiers += codePointToString(ch);\n    state.advance();\n  }\n  return modifiers\n};\n// RegularExpressionModifier :: one of\n//   `i` `m` `s`\nfunction isRegularExpressionModifier(ch) {\n  return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    var known = state.groupNames[state.lastStringValue];\n    if (known) {\n      if (trackDisjunction) {\n        for (var i = 0, list = known; i < list.length; i += 1) {\n          var altID = list[i];\n\n          if (!altID.separatedFrom(state.branchID))\n            { state.raise(\"Duplicate capture group name\"); }\n        }\n      } else {\n        state.raise(\"Duplicate capture group name\");\n      }\n    }\n    if (trackDisjunction) {\n      (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n    } else {\n      state.groupNames[state.lastStringValue] = true;\n    }\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// Return values used by character set parsing methods, needed to\n// forbid negation of sets that can match strings.\nvar CharSetNone = 0; // Nothing parsed\nvar CharSetOk = 1; // Construct parsed, cannot contain strings\nvar CharSetString = 2; // Construct parsed, can contain strings\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return CharSetOk\n  }\n\n  var negate = false;\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    var result;\n    if (\n      state.eat(0x7B /* { */) &&\n      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n      state.eat(0x7D /* } */)\n    ) {\n      if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n      return result\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return CharSetNone\n};\n\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return CharSetOk\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n  }\n  return CharSetNone\n};\n\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\n\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n  state.raise(\"Invalid property name\");\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (!state.eat(0x5D /* ] */))\n      { state.raise(\"Unterminated character class\"); }\n    if (negate && result === CharSetString)\n      { state.raise(\"Negated character class may contain strings\"); }\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassContents\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\npp$1.regexp_classContents = function(state) {\n  if (state.current() === 0x5D /* ] */) { return CharSetOk }\n  if (state.switchV) { return this.regexp_classSetExpression(state) }\n  this.regexp_nonEmptyClassRanges(state);\n  return CharSetOk\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_nonEmptyClassRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetExpression\n// https://tc39.es/ecma262/#prod-ClassUnion\n// https://tc39.es/ecma262/#prod-ClassIntersection\n// https://tc39.es/ecma262/#prod-ClassSubtraction\npp$1.regexp_classSetExpression = function(state) {\n  var result = CharSetOk, subResult;\n  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n    if (subResult === CharSetString) { result = CharSetString; }\n    // https://tc39.es/ecma262/#prod-ClassIntersection\n    var start = state.pos;\n    while (state.eatChars([0x26, 0x26] /* && */)) {\n      if (\n        state.current() !== 0x26 /* & */ &&\n        (subResult = this.regexp_eatClassSetOperand(state))\n      ) {\n        if (subResult !== CharSetString) { result = CharSetOk; }\n        continue\n      }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n    // https://tc39.es/ecma262/#prod-ClassSubtraction\n    while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n      if (this.regexp_eatClassSetOperand(state)) { continue }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n  } else {\n    state.raise(\"Invalid character in character class\");\n  }\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  for (;;) {\n    if (this.regexp_eatClassSetRange(state)) { continue }\n    subResult = this.regexp_eatClassSetOperand(state);\n    if (!subResult) { return result }\n    if (subResult === CharSetString) { result = CharSetString; }\n  }\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetRange\npp$1.regexp_eatClassSetRange = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatClassSetCharacter(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n      var right = state.lastIntValue;\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetOperand\npp$1.regexp_eatClassSetOperand = function(state) {\n  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n};\n\n// https://tc39.es/ecma262/#prod-NestedClass\npp$1.regexp_eatNestedClass = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (state.eat(0x5D /* ] */)) {\n      if (negate && result === CharSetString) {\n        state.raise(\"Negated character class may contain strings\");\n      }\n      return result\n    }\n    state.pos = start;\n  }\n  if (state.eat(0x5C /* \\ */)) {\n    var result$1 = this.regexp_eatCharacterClassEscape(state);\n    if (result$1) {\n      return result$1\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunction\npp$1.regexp_eatClassStringDisjunction = function(state) {\n  var start = state.pos;\n  if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n    if (state.eat(0x7B /* { */)) {\n      var result = this.regexp_classStringDisjunctionContents(state);\n      if (state.eat(0x7D /* } */)) {\n        return result\n      }\n    } else {\n      // Make the same message as V8.\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\npp$1.regexp_classStringDisjunctionContents = function(state) {\n  var result = this.regexp_classString(state);\n  while (state.eat(0x7C /* | */)) {\n    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n  }\n  return result\n};\n\n// https://tc39.es/ecma262/#prod-ClassString\n// https://tc39.es/ecma262/#prod-NonEmptyClassString\npp$1.regexp_classString = function(state) {\n  var count = 0;\n  while (this.regexp_eatClassSetCharacter(state)) { count++; }\n  return count === 1 ? CharSetOk : CharSetString\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetCharacter\npp$1.regexp_eatClassSetCharacter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (\n      this.regexp_eatCharacterEscape(state) ||\n      this.regexp_eatClassSetReservedPunctuator(state)\n    ) {\n      return true\n    }\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n    state.pos = start;\n    return false\n  }\n  var ch = state.current();\n  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n  if (isClassSetSyntaxCharacter(ch)) { return false }\n  state.advance();\n  state.lastIntValue = ch;\n  return true\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\nfunction isClassSetReservedDoublePunctuatorCharacter(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n    ch === 0x2E /* . */ ||\n    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n    ch === 0x5E /* ^ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\nfunction isClassSetSyntaxCharacter(ch) {\n  return (\n    ch === 0x28 /* ( */ ||\n    ch === 0x29 /* ) */ ||\n    ch === 0x2D /* - */ ||\n    ch === 0x2F /* / */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\npp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n  var ch = state.current();\n  if (isClassSetReservedPunctuator(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\nfunction isClassSetReservedPunctuator(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch === 0x23 /* # */ ||\n    ch === 0x25 /* % */ ||\n    ch === 0x26 /* & */ ||\n    ch === 0x2C /* , */ ||\n    ch === 0x2D /* - */ ||\n    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n    ch === 0x40 /* @ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") { break }\n      // fall through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    case \"\\r\":\n      if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n      // fall through\n    case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n      ++this.curLine;\n      this.lineStart = this.pos + 1;\n      break\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\n\nvar version = \"8.14.0\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and returns\n// an abstract syntax tree as specified by the [ESTree spec][estree].\n//\n// [estree]: https://github.com/estree/estree\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n","\n\n// Could be in ticks so that we can have \\n's but we dont want template\n// replacements so using double quotes (escape double quotes and new lines)\n// https://gist.github.com/getify/3667624\nexport default function qouted(str) {\n\tif (str===undefined) return `\"\"`\n\tstr = str.replaceAll('\\r','')\n\tstr = str.replace(/\\\\([\\s\\S])|(\")/g,\"\\\\$1$2\");\n\tstr = str.replace(/\\\\([\\s\\S])|(\\n)/g,\"\\\\$1$2\");\n    return `\"${str}\"`\n}\n\n","\n\nimport * as acorn from 'acorn'\nimport quoted from './quoted-string.js'\nimport util from 'node:util'\n\nexport function templateOrString(str) {\n\n    try {\n        let ast = acorn.parse(\"`\" + str + \"`\", {ecmaVersion: 2020})\n        return ast.body[0].expression\n    } catch (e) {\n        return {\n            type: \"Literal\",\n            start: -1,\n            end: -1,\n            value: quoted(str),\n            raw: quoted(str)\n        }\n    }\n}\n\n\nexport function yamlToEsast(str,throwOnInvalid = false) {\n\n    console.log('yamlToEsast',str)\n\n    const src = '(() => { try { return ' + str + '; } catch (e) { return `' + str + '`; } })()'\n\n    try {\n        const rawNode = acorn.parse(str, {ecmaVersion: 2020})\n        if (rawNode.body[0].type == \"ExpressionStatement\") {\n            if (rawNode.body[0].expression.type == \"TemplateLiteral\"\n                    || rawNode.body[0].expression.type == \"Literal\") {\n                return rawNode.body[0].expression\n            } else {\n                // console.log(util.inspect(rawNode,false,null,true))\n                const srcNode = acorn.parse(src, {ecmaVersion: 2020})\n                // console.log(util.inspect(srcNode,false,null,true))\n                return srcNode.body[0].expression\n            }\n        } else {\n            // console.log(util.inspect(rawNode,false,null,true))\n        }\n    } catch (e) {\n        // console.log(e)\n    }\n\n    return {\n        type: \"Literal\",\n        start: -1,\n        end: -1,\n        value: quoted(str),\n        raw: quoted(str)\n    }\n}\n\nexport function yamlToEsastArray(str) {\n\n//    console.log('yamlToEsastArray',str)\n\n    const src = '(() => { try { return [' + str + ']; } catch (e) { return [`' + str + '`]; } })()'\n\n    try {\n        const node = acorn.parse(src, {ecmaVersion: 2020})\n        return node.body[0].expression\n    } catch (e) {\n        return {\n            type: \"Literal\",\n            start: -1,\n            end: -1,\n            value: quoted(str),\n            raw: quoted(str)\n        }\n    }\n\n\n}\n\n//   Node {\n//     type: 'Program',\n//     start: 0,\n//     end: 9,\n//     body: [\n//       Node {\n//         type: 'ExpressionStatement',\n//         start: 0,\n//         end: 9,\n//         expression: Node {\n//           type: 'SequenceExpression',\n//           start: 0,\n//           end: 9,\n//           expressions: [\n//             Node {\n//               type: 'Literal',\n//               start: 0,\n//               end: 1,\n//               value: 1,\n//               raw: '1'\n//             },\n//             Node {\n//               type: 'MemberExpression',\n//               start: 2,\n//               end: 9,\n//               object: Node { type: 'Identifier', start: 2, end: 6, name: 'Math' },\n//               property: Node { type: 'Identifier', start: 7, end: 9, name: 'PI' },\n//               computed: false,\n//               optional: false\n//             }\n//           ]\n//         }\n//       }\n//     ],\n//     sourceType: 'script'\n//   }\n\n\n//   Node {\n//     type: 'Program',\n//     start: 0,\n//     end: 1,\n//     body: [\n//       Node {\n//         type: 'ExpressionStatement',\n//         start: 0,\n//         end: 1,\n//         expression: Node { type: 'Literal', start: 0, end: 1, value: 1, raw: '1' }\n//       }\n//     ],\n//     sourceType: 'script'\n//   }\n\nexport function functionParamsToEsast(str,throwOnInvalid = false) {\n\n    console.log(str)\n    try {\n        const node = acorn.parse(str, {ecmaVersion: 2020})\n        console.log(util.inspect(node,false,null,true))\n\n        if (node.body[0].type == \"ExpressionStatement\") {\n            if (node.body[0].expression.type == 'SequenceExpression') {\n                return {\n                    type: 'ArrayExpression',\n                    elements: node.body[0].expression.expressions\n                }\n            } else {\n                return {\n                    type: 'ArrayExpression',\n                    elements: [ node.body[0].expression ]\n                }\n            }          \n        } else {\n            console.log(util.inspect(node,false,null,true))\n        }\n    } catch (e) {\n        console.log(e)\n    }\n\n    return {\n        type: \"Literal\",\n        start: -1,\n        end: -1,\n        value: quoted(str),\n        raw: quoted(str)\n    }\n}","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {Array<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n","import { Options, tokenize } from 'linkifyjs';\n\n/**\n\tConvert strings of text into linkable HTML text\n*/\nfunction escapeText(text) {\n  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(href) {\n  return href.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    let val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\n\n/**\n * Convert a plan text string to an HTML string with links. Expects that the\n * given strings does not contain any HTML entities. Use the linkify-html\n * interface if you need to parse HTML entities.\n *\n * @param {string} str string to linkify\n * @param {import('linkifyjs').Opts} [opts] overridable options\n * @returns {string}\n */\nfunction linkifyStr(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  opts = new Options(opts, defaultRender);\n  const tokens = tokenize(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      result.push('<br>\\n');\n    } else if (!token.isLink || !opts.check(token)) {\n      result.push(escapeText(token.toString()));\n    } else {\n      result.push(opts.render(token));\n    }\n  }\n  return result.join('');\n}\nif (!String.prototype.linkify) {\n  Object.defineProperty(String.prototype, 'linkify', {\n    writable: false,\n    value: function linkify(options) {\n      return linkifyStr(this, options);\n    }\n  });\n}\n\nexport { linkifyStr as default };\n","\nimport {h} from 'hastscript'\nimport {t} from './hastscript-tools.js'\n\nimport linkifyStr from 'linkify-string';\n\nconst linkifyOptions = { defaultProtocol: 'https' };\n\nfunction url(s) {\n//    s = s.replace(/\\\\\\\\/g,'\\\\')\n    const l = linkifyStr(s, linkifyOptions);\n    const m = l.match(/\"([^\"]+)\"/)\n\n    if (m==null) {\n        return null\n    } else {\n        return m[1]\n    }\n}\n\nfunction internalLink(l) {\n    switch(l[0]) {\n        case '/':\n            return '/' + encodeURIComponent(l.substring(1).replace(/ +/g,\"_\").toLowerCase());\n        case '#':\n            return '#' + encodeURIComponent(l.substring(1).replace(/ +/g,\"_\").toLowerCase());\n        default:\n            return null\n    }\n}\n\nexport default function strToLink(s) {\n\n    var parts = s.split(\"|\", 2);\n    // console.log(parts)\n    if (parts.length == 2 && parts[0].charAt(parts[0].length-1) == '\\\\') {\n        parts[0] = parts[0].substring(0,parts[0].length - 1) + '|' + parts[1]\n        parts.pop();\n    }\n    if (parts.length == 1) {\n        if (parts[0].trim() == '') {\n            return null // not actually a link\n        }\n\n        let u = parts[0].trim().replace(/\\\\\\]/g,']');\n\n        if (u[0] == '^') {\n            u = u.substring(1).trim();\n            return { type: 'link', ref: `#footnote-${u}`, text: u }\n        } else {\n            const addr = parts[0].trim().replace(/\\]/g,']');\n            const u = url(addr)\n\n            if (u==null) {\n                const il = internalLink(addr)\n\n                if (il == null) {\n                    return { type: 'link', ref: addr.toLowerCase(), text: addr }\n                // } else if (il[0] == '#') {\n                //     return { type: 'link', ref: il, text: il }\n                } else {\n                    return { type: 'link', ref: il, text: il }\n                }\n            } else {\n                return { type: 'link', ref: u, text: u }\n            }\n        }\n    } else {\n        const txt = parts[0].trim().replace(/\\|/g,'|');\n        const addr = parts[1].trim().replace(/\\]/g,']');\n        const u = url(addr)\n\n        if (u==null) {\n            const il = internalLink(addr)\n            if (il == null) {\n                return { type: 'link', ref: addr.toLowerCase(), text: txt }\n            // } else if (il[0] == '#') {\n            //     return { type: 'link', ref: il, text: txt }\n            } else {\n                return { type: 'link', ref: il, text: txt }\n            }\n        } else {\n            return { type: 'link', ref: u, text: txt }\n        }\n    }\n}\n","\n//import {h} from 'hastscript'\nimport {t} from './hastscript-tools.js'\nimport {functionParamsToEsast} from './str-to-esast.js'\nimport link from './str-to-link.js'\nimport {yamlToEsast,yamlToEsastArray} from '../util/str-to-esast.js'\n\nfunction styleFor(c) {\n    switch (c) {\n        case '!':\n        case '*':\n            return \"bold\";\n        case '~':\n        case '/':\n            return \"italic\";\n        case '_':\n            return \"underline\";\n        case '-':\n            return \"strike-through\";\n        case '^':\n            return \"superscript\";\n        case '`':\n            return \"code\";\n        case '$':\n            return \"kbd\";\n        case ',':\n            return \"subscript\";\n        default:\n            return c + \"\";\n    }\n}\n\n\nexport default function parseText(s) {\ns = s.trim()\n\n    let elements = []\n    let index = 0\n\n    // if (typeof str == 'string') {\n    //     process(root,str,0,'')\n    // } else {\n    //     root.children.push(str);\n    // }\n\n    // function escapeChar(c) {\n    //     return c\n        \n    //     if (c=='`') {\n    //         return '\\\\`' // '&#96;'\n    //     // } else if (c==':') {\n    //     //     return '&#58;'\n    //     } else if (c=='\\\\') {\n    //         return '\\\\\\\\'\n    //     } else {\n    //         return c;\n    //     }\n    // }\n\n\n\n    // function path(s) {\n    //     return '/' + encodeURIComponent(s.replace(/ +/g,\"_\").toLowerCase());\n    // }\n\n \n//    function process(parent,s,index,inChar) {\n\n        var a, b;\n        let str = '';\n\n        while (index < s.length) {\n            a = s.charAt(index++);\n            b = s.charAt(index);\n\n\n            if (a == '\\\\') {\n//                console.log(a,b)\n                if (b == '$') {\n                    str += '\\\\$';\n                    index++;\n                    continue;\n                }\n                let punc = /^[-!\\\"#%&'()*+,-./:;<=>?@[\\]^_`{|}~]$/\n                if (b.match(punc)) {\n\n//                    console.log(punc)\n                    str += b//escapeChar(b);\n                    index++;\n                    continue;    \n                } else {\n//                    console.log('\\\\\\\\')\n                    str += '\\\\\\\\'\n                    continue\n                }\n            } else if (a == '[') {\n                let prev = a;\n                let curr\n                let foundLink = false\n                let k = index\n                let linkText = ''\n                for ( ; k < s.length; k++) {\n                    curr = s.charAt(k)\n                    if (curr == ']') {\n                        if (prev == '\\\\') {\n                            linkText = linkText.substring(0,linkText.length-1) + curr\n                        } else {\n                            foundLink = true\n                            break\n                        }\n                    } else {\n                        linkText += curr\n                    }\n                    \n                    prev = curr\n                }\n\n                if (!foundLink) {\n                    str += a\n  //                  index++;\n                    continue\n                }\n\n                const ln = link(linkText)\nconsole.log(ln)\n                if (ln == null) {\n                    str += a\n//                    index++;\n                    continue\n                }\n\n                if (str!='') {\n                    elements.push(t(str))\n                    str = ''\n                }\n                elements.push(ln)\n                index = k+1\n\n            } else if (a == '@') {\n                const ch0 = /^[a-zA-Z]$/\n                const chx = /^[a-zA-Z\\d_]$/\n\n                if (s.charAt(index).match(ch0)) {\n\n                    if (str != '') {\n                        elements.push(t(str))\n                        str = ''\n                    }\n\n                    let k = index+1\n                    while (k < s.length && s.charAt(k).match(chx)) {\n                        k++\n                    }\n\n                    elements.push({ type: 'mention', value: s.substring(index,k)})\n                    index = k\n                } else {\n                    str += a\n                }\n\n            } else if (a == '#') {\n                const tagAt = index-1\n\n                const tagRegex = /#(?<bang>!)?(?<part1>[a-zA-Z][a-zA-Z\\d_]{2,})(\\.(?<part2>[a-zA-Z][a-zA-Z\\d_]{2,}))?/y // must start at specified start index\n                tagRegex.lastIndex = tagAt\n                let res = tagRegex.exec(s)\n\n                // only include can have a namespace/collection\n                if (!res || (!res.groups.bang && res.groups.part2)) {\n                    str += a\n                } else {\n                    // console.log(res)\n                    // console.log(res[0])\n                    index = tagAt+res[0].length\n                    // console.log(s.substring(index))\n\n//                    index = jj;\n                    a = s.charAt(index);\n                    let tagStr = null\n                    let tagValueStr = null\n\n                    if (a=='(') {\n                        for (var k = index; k < s.length; k++) {\n                            let ch = s.charAt(k)\n                            if (ch==')') {\n                                tagStr = s.substring(tagAt,k+1)\n                                tagValueStr = s.substring(index+1,k)\n                                // console.log(tagStr,tagValueStr)\n                                tagValueStr = tagValueStr.trim()\n                                if (tagValueStr=='') tagValueStr = 'true'\n//                                tagValueStr = '['+tagValueStr+']'\n                                // console.log(`\"${tagValueStr}\"`)\n                                index = k + 1\n                                break\n                                // try {\n                                //     tagValue = functionParamsToEsast(tagValueStr,true)\n                                //     tagStr = s.substring(tagAt,k+1)\n                                //     index = k + 1\n                                //     a = s.charAt(index++);\n                                //     break;\n                                // } catch (e) {\n                                //     // find next end bracket and try again\n                                // }\n                            }\n                        }\n                        \n                        // if ')' was never found tagValueStr == null\n                        if (tagStr == null) {\n                            tagStr = s.substring(tagAt,index)\n                            tagValueStr = 'true'//'true'//functionParamsToEsast('true',false)\n                        }\n                    } else {\n                        tagStr = s.substring(tagAt,index)\n                        tagValueStr = 'true'//'true'//functionParamsToEsast('true',false)\n                    }\n\n                    if (str != '') {\n                        elements.push(t(str))\n                        str = ''\n                    }\n\n                    if (res.groups.bang) {\n                        const includeOpts = {\n                            type: 'include',\n                            name: res.groups.part1,\n                            text: tagStr \n                        }\n                        if (tagValueStr) {\n                            includeOpts.args = tagValueStr\n                            includeOpts.$js = yamlToEsastArray(tagValueStr)\n                        }\n                        if (res.groups.part2) {\n                            includeOpts.collection = res.groups.part1\n                            includeOpts.name = res.groups.part2\n                        }\n                        elements.push(includeOpts)\n                    } else {\n                        elements.push({\n                            type:'tag',\n                            name: res.groups.part1,\n                            args: tagValueStr || 'true',\n                            $js: yamlToEsastArray(tagValueStr || 'true'),\n                            text: tagStr \n                        })\n                    }\n\n                }\n            // } else if (index + 1 > s.length) {\n            //     str += a//escapeChar(a);\n            //     console.log('got to end, returning')\n            //     elements.push(t(str))\n            //     continue//return index;//{index: index, str: strs};\n            } else if (a == b\n                    && (a == '!' || a == '*' || a == '~' || a == '/' || a == '_' || a == '-'\n                            || a == '^' || a == '`' || a == '$' || a == ',')) {\n                index++;\n                while (s.charAt(index)==a) {\n                    b = a;\n                    index++; // permissive with extra formatting tag chars\n                }\n\n//                console.log('a=\"'+a+'\",b=\"'+b+'\",inChar=\"'+inChar+'\",str=\"'+str+'\"')\n                // if (a == inChar) {\n                //     elements.push(t(str))\n                //     continue//return index; //{index: index, str: strs};\n                // } else {\n                    elements.push(t(str))\n                    str = '';\n                    const el = { type: 'format', style: styleFor(a) }\n                    elements.push(el)\n                    continue//index = process(el,s,index,a)\n                // }\n            } else {\n                str += a//escapeChar(a);\n            }\n        }\n\n        // check if there is any text left over\n        if (str != '' ) {\n            // console.log('got to end')\n            elements.push(t(str));//strs.push(str)\n        }\n//        continue// index;//{index: index,str: strs};\n//    }\n\n    return elements//root.children\n}","\n\nimport lineToSxast from './parse-text.js'\nimport {yamlToEsast} from './str-to-esast.js'\nimport link from './str-to-link.js'\nimport util from 'node:util'\n\nconst RE_ScriptEnd = /%>\\s*$/\n\n\nexport default function parseTableRow(text) {\n\n    function splitText(text) {\n        let cells = text.split('|')\n\n        for (let c = cells.length-1 ; c>0 ; c--) {\n            if (cells[c-1].charAt(cells[c-1].length-1) == '\\\\') {\n                cells[c-1] = cells[c-1].slice(0,-1) + '|' + cells[c];\n                cells.splice(c,1);\n            }\n        }\n    \n        return cells;\n    }\n\n    function pragmasToAttributes(pragmas) {\n        let attr = {}\n        \n        for (let i=0 ; i<pragmas.length ; i++) {\n            switch (pragmas[i]) {\n                case '!' :\n                    attr.header = true;\n                    break;\n                case 'r':\n                    attr.align='right';\n                    break;\n                case 'l':\n                    attr.align='left';\n                    break;\n                case 'c':\n                    attr.align='center';\n                    break;\n                case 'v':\n                    if (i+1<pragmas.length) {\n                        let c = pragmas[i+1]\n                        if (c >= '3' && c <= '9') {\n                            attr.rowspan=c*1\n                            i++\n                        } else {\n                            attr.rowspan=2\n                        }\n                    } else {\n                        attr.rowspan=2\n                    }\n                    break;\n                case '>':\n                    if (i+1<pragmas.length) {\n                        let c = pragmas[i+1]\n                        if (c >= '3' && c <= '9') {\n                            attr.colspan=c*1\n                            i++\n                        } else {\n                            attr.colspan=2\n                        }\n                    } else {\n                        attr.colspan=2\n                    }\n\n                    break;\n            }\n        }\n        return attr\n    }\n\n    function tableCellFormatting(s) {\n        for (let i=0; i<s.length ; i++) {\n            if (s[i]==' ') {\n                if (i==0 || i==s.length-1) return ['',s.trim()];\n                return [s.substring(0,i),s.substring(i).trim()]\n            }\n        }\n        return [\"\",s.trim()];\n    }\n        \n    let cells = splitText(text)\n    for (let i=0 ; i<cells.length ; i++) {\n        let [f,t] = tableCellFormatting(cells[i])\n        cells[i] = { type: 'table-cell', children: lineToSxast(t), formatting: pragmasToAttributes(f) }\n    }\n    return cells;\n}\n","\nimport lineToSxast from '../util/parse-text.js'\nimport {yamlToEsast} from '../util/str-to-esast.js'\nimport link from '../util/str-to-link.js'\nimport parseTableRow from '../util/parse-table-row.js'\n\nconst RE_DocumentSeparator = /^---$/d\n\nconst RE_BlankLine = /^\\s*$/d\nconst RE_Tag = /^\\s*(([a-zA-Z_$][-a-zA-Z\\d_$]*)\\s*:(\\s+(.*?))?)\\s*$/d\nconst RE_ListItemTag = /^\\s*-\\s+([a-zA-Z_$][-a-zA-Z\\d_$]*)(\\s*:(\\s+(.*?))?)?\\s*$/d\nconst RE_Script = /^(\\s*)<%(.*?)\\s*(%>\\s*)?$/d\nconst RE_Footnote = /^\\s*\\[ *\\^ *(\\S+) *\\] *: *(.+?) *$/d\nconst RE_LinkDefinition = /^\\s*\\[ *([^\\]]+) *\\] *: *(.+?) *$/d\nconst RE_CodeBlock = /^\\s*``` *(([a-zA-Z]+)?)\\s*$/d\nconst RE_Element = /^\\s*(<\\s*((\\!doctype)|([a-z]+([a-z0-9]+)?))((?:\\s+[a-z]+(=\"[^\"]*\")?)*)\\s*>?\\s*)$/id\nconst RE_Heading = /^\\s*((=+)\\s*(\\S.*?)\\s*[-=]*)\\s*$/d\nconst RE_HR = /^\\s*[-=_\\*]+\\s*$/d\nconst RE_ListItem = /^\\s*(?:(?:([-*+])|(\\d+[\\.)]))\\s+(\\S.*?))\\s*$/d\nconst RE_ListItemTask = /^\\s*\\[ *([xX]?) *\\]\\s+(.*?)\\s*$/d\nconst RE_Table = /^\\s*(\\|(.+?)\\|?)\\s*$/d\nconst RE_TableHeader = /^[-| ]+$/d\n\nconst RE_ScriptEnd = /^(.*?)\\s*%>\\s*$/d\n\nfunction lineToSqrm(ln) {\n\n    if (ln.value.length==0) {\n        return {\n            type:'blank-line',\n            // position: ln.position\n        }\n    }\n\n    let m;\n\n    m = ln.value.match(RE_DocumentSeparator);\n    if (ln.indent==0 && m) {\n        return {\n            type:'document-separator-line',\n            // position: ln.position\n        }\n    }\n\n    m = ln.value.match(RE_HR);\n    if (m) {\n        return {\n            type:'hr-line',\n            indent: ln.indent,\n            // position: ln.position,\n        }\n    }\n\n    m = ln.value.match(RE_Heading)\n    if (m) {\n        // let textPos = {\n        //     start: Object.assign({},ln.position.start),\n        //     end: Object.assign({},ln.position.end)\n        // }\n        // textPos.start.column = m.indices[3][0]\n        // textPos.start.offset += m.indices[3][0]\n        // textPos.end.column = m.indices[3][1]\n\n        return {\n            type:'heading-line',\n            indent: ln.indent,\n            level: m[2].length,\n            children: lineToSxast(m[3]),\n            // position: textPos,\n        }\n    }\n\n    m = ln.value.match(RE_ListItem)\n    if (m) {\n\n        if (m[1]!==undefined) {\n            let t = m[3].match(RE_ListItemTask)\n            if (t) {\n                let task = { line: ln.line, done: t[1]!='', text: t[2] }\n                // children = text and is converted to hast in post-process\n                return {\n                    type: 'unordered-list-item-line',\n                    indent: ln.indent, \n                    marker: m[1],\n                    children: lineToSxast(t[2]),\n                    line: ln.line,\n                    task: task\n                }\n            } else {\n                // children = text and is converted to hast in post-process\n                let uli = {\n                    type: 'unordered-list-item-line',\n                    indent: ln.indent,\n                    marker: m[1],\n                    children: lineToSxast(m[3]),\n                    line: ln.line\n                }\n\n                // let yaml = ln.value.match(RE_ListItemTag)\n                // if (yaml) {\n                //     uli.yaml = { indent: ln.indent, isArrayElement: true }\n                //     if (yaml[4]) {\n                //         uli.yaml.name = yaml[1]\n                //         uli.yaml.$js = yamlToEsast(yaml[4],false)\n                //         uli.yaml.colon = true\n                //     } else if (yaml[2]) {\n                //         uli.yaml.name = yaml[1]\n                //         uli.yaml.colon = true\n                //     } else {\n                //         uli.yaml.$js = yamlToEsast(yaml[1],false)\n                //         uli.yaml.colon = false\n                //     }\n                // }\n\n                return uli\n            }\n        } else if (m[2]!==undefined) {\n            let t = m[3].match(RE_ListItemTask)\n            if (t) {\n                let task = {\n                    line: ln.line, \n                    done: t[1]!='', \n                    text: t[2]\n                }\n                // children = text and is converted to hast in post-process\n                return {\n                    type: 'ordered-list-item-line',\n                    indent: ln.indent,\n                    number: m[2],\n                    children: lineToSxast(t[2]),\n                    line: ln.line,\n                    task: task\n                }\n            } else {\n                // children = text and is converted to hast in post-process\n                return {\n                    type: 'ordered-list-item-line',\n                    indent: ln.indent,\n                    number: m[2],\n                    children: lineToSxast(m[3]),\n                    line: ln.line\n                }\n            }\n        }\n    }\n\n    m = ln.value.match(RE_Script)\n    if (m) {\n//        console.log(m)\n        return {\n            type: 'script-line',\n            indent: ln.indent,\n            code: m[1] + '  ' + m[2],\n            line: ln.line,\n            endScript: m[3] != undefined\n        }\n    }\n\n    m = ln.value.match(RE_Element)\n    if (m) {\n        let properties = {}\n        if (m[6]) {\n            let props =  [... m[6].matchAll(/([^\\s=]+)(=[\"]([^\"]*)[\"])?/g) ]\n            for (let prop of props) {\n                if (prop[3]) {\n                    properties[prop[1]] = prop[3]\n                } else {\n                    properties[prop[1]] = true\n                }\n            }\n        }\n        return {\n            type: 'element-line',\n            indent: ln.indent,\n            tag: (m[2]?m[2].toLowerCase():'div'),\n            properties: properties,\n            line:ln.line,\n            text: ln.value\n        }\n    }\n\n    m = ln.value.match(RE_Table)\n    if (m) {\n        if (ln.value.match(RE_TableHeader) !== null) {\n            return {\n                type: 'table-divider-line',\n                indent: ln.indent,\n                text: ln.value\n            }\n        } else {\n            return {\n                type: 'table-row-line',\n                indent: ln.indent,\n                children: parseTableRow(m[2]),\n                text: ln.value\n             }\n        }\n    }\n\n    m = ln.value.match(RE_BlankLine) \n    if (m) {\n        return {\n            type:'blank-line',\n            // position: ln.position\n        }\n    }\n\n    m = ln.value.match(RE_Tag);\n    if (m) {\n        let tag = {\n            type: 'yaml-line',\n            indent: ln.indent, \n            name: m[2], \n            colon: true, \n            isArrayElement: false, \n            line: ln.line,\n            text: ln.value\n        }\n        if (m[4]) {\n            tag.$js  = yamlToEsast(m[4],false)\n            // console.log(m[4],' = ',tag.value)\n        }\n\n        // console.log(tag.name + \" = \" + util.inspect(tag.$js,false,null,true))\n        return tag\n    }\n\n    m = ln.value.match(RE_Footnote);\n    if (m) {\n        return {\n            type: 'footnote-line',\n            indent: ln.indent,\n            id: m[1],\n            children: lineToSxast(m[2])\n        }\n    }\n\n    m = ln.value.match(RE_LinkDefinition);\n    if (m) {\n        return {\n            type: 'link-definition-line',\n            indent: ln.indent, \n            id: m[1].trim().toLowerCase(), \n            link: link(m[2]) \n        }\n    }\n\n    m = ln.value.match(RE_CodeBlock);\n    if (m) {\n        return {\n            type:'code-block-line',\n            indent: ln.indent, \n            language: m[1],\n            line:ln.line\n        }\n    }\n\n    // children = text and is converted to hast in post-process\n    return {\n        type: 'text-line',\n        indent: ln.indent,\n        // position: ln.position,\n        children: lineToSxast(ln.value),\n        text: ln.value\n    }\n\n}\n\nexport default function indentedLinesToSxast(options = {}) {\n    return (tree,file) => {\n\n        const root = {\n            type: 'sast-root',\n            children: [],\n        };\n\n        for (let i=0 ; i<tree.children.length ; i++) {\n            let iline = tree.children[i]\n            let sast = lineToSqrm(iline)\n            root.children.push(sast)\n            if (sast.type == 'script-line' && !sast.endScript) {\n                for (i++ ; i<tree.children.length ; i++) {\n                    iline = tree.children[i]\n                    sast = {\n                        type: 'script-line',\n                        indent: iline.indent,\n                        line: iline.line\n                    }\n                    root.children.push(sast)\n                    let m = iline.value.match(RE_ScriptEnd)\n                    if (m) {\n                        sast.code = m[1]\n                        break;\n                    } else {\n                        sast.code = iline.value\n                    }\n                }\n            }\n        }\n\n        return root\n    }\n}\n\n","/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | EXIT | SKIP} Action\n *   Union of the action types.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | undefined} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | undefined} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | ActionTuple | Index | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder) (optional).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder) (optional).\n */\n\nimport {color} from 'estree-util-visit/do-not-use-color'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, undefined, undefined, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | undefined} key\n   * @param {number | undefined} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, undefined, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | ActionTuple | Index | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n","/**\n * @typedef {import('unist').Point} UnistPoint\n * @typedef {import('unist').Position} UnistPosition\n */\n\n/**\n * @typedef {[start: number | null | undefined, end: number | null | undefined]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {UnistPosition | undefined}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [undefined, undefined]\n  const start = pointOrUndefined(loc.start, range[0] || nodeLike.start)\n  const end = pointOrUndefined(loc.end, range[1] || nodeLike.end)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n\n/**\n * @param {unknown} estreePoint\n *   estree point.\n * @param {unknown} estreeOffset\n *  estree offset.\n * @returns {UnistPoint | undefined}\n *   unist point.\n */\nfunction pointOrUndefined(estreePoint, estreeOffset) {\n  if (estreePoint && typeof estreePoint === 'object') {\n    const line =\n      'line' in estreePoint ? numberOrUndefined(estreePoint.line) : undefined\n    const column =\n      'column' in estreePoint\n        ? numberOrUndefined(estreePoint.column)\n        : undefined\n\n    if (line && column !== undefined) {\n      return {\n        line,\n        column: column + 1,\n        offset: numberOrUndefined(estreeOffset)\n      }\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n","/**\n * @typedef {import('estree-jsx').Node} Nodes\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [dirty=false]\n *   Leave discouraged fields in the tree (default: `false`).\n */\n\n/**\n * @template T\n * @template U\n * @typedef {{[K in keyof T]: T[K] extends U ? K : never}[keyof T]} KeysOfType\n */\n\n/**\n * @template T\n * @typedef {Exclude<KeysOfType<T, Exclude<T[keyof T], undefined>>, undefined>} RequiredKeys\n */\n\n/**\n * @template T\n * @typedef {Exclude<keyof T, RequiredKeys<T>>} OptionalKeys\n */\n\nimport {visit} from 'estree-util-visit'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Turn an estree into an esast.\n *\n * @template {Nodes} Kind\n *   Node kind.\n * @param {Kind} estree\n *   estree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Kind}\n *   Clean clone of `estree`.\n */\nexport function fromEstree(estree, options) {\n  const settings = options || emptyOptions\n  /** @type {Kind} */\n  // Drop the `Node` and such constructors on Acorn nodes.\n  const esast = JSON.parse(JSON.stringify(estree, ignoreBigint))\n\n  visit(esast, {\n    leave(node) {\n      const position = positionFromEstree(node)\n\n      if (!settings.dirty) {\n        // Acorn specific.\n        // @ts-expect-error: acorn adds this.\n        if ('end' in node) remove(node, 'end')\n        // @ts-expect-error: acorn adds this.\n        if ('start' in node) remove(node, 'start')\n        if (node.type === 'JSXOpeningFragment') {\n          // @ts-expect-error: acorn adds this, but it should not exist.\n          if ('attributes' in node) remove(node, 'attributes')\n          // @ts-expect-error: acorn adds this, but it should not exist.\n          if ('selfClosing' in node) remove(node, 'selfClosing')\n        }\n\n        // Estree.\n        if ('loc' in node) remove(node, 'loc')\n        // @ts-expect-error: `JSXText` types are wrong: `raw` is optional.\n        if ('raw' in node) remove(node, 'raw')\n\n        if (node.type === 'Literal') {\n          // These `value`s on bigint/regex literals represent a raw value,\n          // which is an antipattern.\n          if ('bigint' in node) remove(node, 'value')\n          if ('regex' in node) remove(node, 'value')\n        }\n      }\n\n      if (node.type === 'Literal' && 'bigint' in node) {\n        const bigint = node.bigint\n        const match = /0[box]/.exec(bigint.slice(0, 2).toLowerCase())\n\n        if (match) {\n          const code = match[0].charCodeAt(1)\n          const base =\n            code === 98 /* `x` */ ? 2 : code === 111 /* `o` */ ? 8 : 16\n          node.bigint = Number.parseInt(bigint.slice(2), base).toString()\n        }\n      }\n\n      // @ts-expect-error: `position` is not in `Node`, but we add it anyway\n      // because it’s useful.\n      node.position = position\n    }\n  })\n\n  return esast\n}\n\n/**\n * @template {Nodes} Kind\n * @param {Kind} value\n * @param {OptionalKeys<Kind>} key\n * @returns {undefined}\n */\nfunction remove(value, key) {\n  delete value[key]\n}\n\n/**\n *\n * @param {string} _\n * @param {unknown} value\n * @returns {unknown}\n */\nfunction ignoreBigint(_, value) {\n  return typeof value === 'bigint' ? undefined : value\n}\n","\nimport parseEcma from './parse-ecma.js'\nimport quoted from '../util/quoted-string.js';\nimport util from 'util'\nimport {templateOrString} from '../util/str-to-esast.js'\n\nlet p = new parseEcma()\n\nfunction program() {\n    return {\n        type: \"Program\",\n        sourceType: 'module',\n        start: 0,\n        end: 0,\n        body: []\n    };\n}\n\nfunction literal(s) {\n    return {\n        type: \"Literal\",\n        start: -1,\n        end: -1,\n        value: s,\n        raw: s\n      }\n}\n\nfunction id(s) {\n    return {\n        type: \"Identifier\",\n        start: -1,\n        end: -1,\n        name: s\n      }\n}\n\nfunction me(expr) {\n    return {\n        type: \"MemberExpression\",\n        start: 0,\n        end: 0,\n        object: Array.isArray(expr[0]) ? me(expr[0]) : expr[0],\n        property: expr[1],\n        \"computed\": expr[1].type == \"Literal\",\n        \"optional\": false\n      }\n}\n\nfunction c(id,_init) {\n    return {\n        type: \"VariableDeclaration\",\n        start: 0,\n        end: 0,\n        declarations: [{\n            type: \"VariableDeclarator\",\n            start: 0,\n            end: 0,\n            id: {\n                type: \"Identifier\",\n                start: 0,\n                end: 0,\n                name: id\n            },\n            init: me(_init)\n        }],\n        \"kind\": \"const\"\n    }\n}\n\nfunction inlineTag(tag) {\n    return {\n        \"type\": \"CallExpression\",\n        \"callee\": {\n            \"type\": \"ArrowFunctionExpression\",\n            \"id\": null,\n            \"expression\": false,\n            \"generator\": false,\n            \"async\": false,\n            \"params\": [],\n            \"body\": {\n                \"type\": \"BlockStatement\",\n                \"body\": [{\n                    \"type\": \"ReturnStatement\",\n                    \"argument\": {\n                        \"type\": \"ExpressionStatement\",\n                        \"expression\": {\n                          \"type\": \"CallExpression\",\n                          \"callee\": {\n                            \"type\": \"MemberExpression\",\n                            \"object\": {\n                              \"type\": \"ThisExpression\",\n                            },\n                            \"property\": {\n                              \"type\": \"Identifier\",\n                              \"name\": \"inlineTag\"\n                            },\n                            \"computed\": false,\n                            \"optional\": false\n                          },\n                          \"arguments\": [{\n                              \"type\": \"ObjectExpression\",\n                              \"properties\": props(tag)//[\n    //                            prop(id('type'),literal('\"tag\"')),\n                            //     prop(id('name'),literal(quoted(tag.name))),\n                            //     prop(id('value'),p.parser(`${tag.value}`).body[0].expression) ////////////////////////////////////////\n                            //   ]//props(tag)\n                          }],\n                          \"optional\": false\n                        }\n                    },\n                }]\n            }},\n            \"arguments\": [],\n            \"optional\": false\n    }\n}\n\nfunction inlineInclude(o) {\n    return {\n        \"type\": \"CallExpression\",\n        \"callee\": {\n            \"type\": \"ArrowFunctionExpression\",\n            \"id\": null,\n            \"expression\": false,\n            \"generator\": false,\n            \"async\": false,\n            \"params\": [],\n            \"body\": {\n                \"type\": \"BlockStatement\",\n                \"body\": [{\n                    \"type\": \"ReturnStatement\",\n                    \"argument\": {\n                        \"type\": \"ExpressionStatement\",\n                        \"expression\": {\n                          \"type\": \"CallExpression\",\n                          \"callee\": {\n                            \"type\": \"MemberExpression\",\n                            \"object\": {\n                              \"type\": \"ThisExpression\",\n                            },\n                            \"property\": {\n                              \"type\": \"Identifier\",\n                              \"name\": \"inlineInclude\"\n                            },\n                            \"computed\": false,\n                            \"optional\": false\n                          },\n                          \"arguments\": [{\n                              \"type\": \"ObjectExpression\",\n                              \"properties\": props(o)//[\n                            //     prop(id('type'),literal('\"tag\"')),\n                            //     prop(id('name'),literal(quoted(o.name))),\n                            //     prop(id('value'),p.parser(`${o.value}`).body[0].expression) ////////////////////////////////////////\n                            //   ]//props(tag)\n                          }],\n                          \"optional\": false\n                        }\n                    },\n                }]\n            }},\n            \"arguments\": [],\n            \"optional\": false\n    }\n}\n\nfunction inlineMention(o) {\n    return {\n        \"type\": \"CallExpression\",\n        \"callee\": {\n            \"type\": \"ArrowFunctionExpression\",\n            \"id\": null,\n            \"expression\": false,\n            \"generator\": false,\n            \"async\": false,\n            \"params\": [],\n            \"body\": {\n                \"type\": \"BlockStatement\",\n                \"body\": [{\n                    \"type\": \"ReturnStatement\",\n                    \"argument\": {\n                        \"type\": \"ExpressionStatement\",\n                        \"expression\": {\n                          \"type\": \"CallExpression\",\n                          \"callee\": {\n                            \"type\": \"MemberExpression\",\n                            \"object\": {\n                              \"type\": \"ThisExpression\",\n                            },\n                            \"property\": {\n                              \"type\": \"Identifier\",\n                              \"name\": \"inlineMention\"\n                            },\n                            \"computed\": false,\n                            \"optional\": false\n                          },\n                          \"arguments\": [{\n                              \"type\": \"ObjectExpression\",\n                              \"properties\": props(o)//[\n                                // prop(id('type'),literal('\"tag\"')),\n                                // prop(id('name'),literal(quoted(o.value))),\n                                // prop(id('value'),p.parser(`${o.value}`).body[0].expression) ////////////////////////////////////////\n                            //   ]//props(tag)\n                          }],\n                          \"optional\": false\n                        }\n                    }\n                }]\n            }},\n            \"arguments\": [],\n            \"optional\": false\n    }\n}\n\nfunction object(o) {\n\n    if (o.type && o.type=='tag') {\n        return inlineTag(o)\n    } else if (o.type && o.type=='include') {\n        return inlineInclude(o)\n    } else if (o.type && o.type=='mention') {\n        return inlineMention(o)\n    } else if (o.type && o.type=='text') {\n\n        return {\n            type: \"ObjectExpression\",\n            start: 0,\n            end: 0,\n            properties: [{\n                type: \"Property\",\n                start: 0,\n                end: 0,\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: id('type'),\n                value: literal('\"text\"'),\n                kind: \"init\"\n            },{\n                type: \"Property\",\n                start: 0,\n                end: 0,\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: id('value'),\n                value: templateOrString(o.value),\n                kind: \"init\"\n            }]\n        };\n\n    } else {\n        return {\n            type: \"ObjectExpression\",\n            properties: props(o)\n        };\n    }\n}\n\nfunction array(a) {\n    return {\n        type: \"ArrayExpression\",\n        elements: a.map((x) => value(x))\n    }\n}\n\nfunction value(o) {\n    if (o === null) {\n        return literal('null')\n    } else if (Array.isArray(o)) {\n        return array(o)\n    } else if (typeof o === 'object') {\n        return object(o)\n    } else if (typeof o === 'string') {\n        return literal(quoted(o))\n    } else {\n        return literal(o)\n    }\n}\n\nfunction prop(k,v) {\n    return {\n        type: \"Property\",\n        method: false,\n        shorthand: false,\n        computed: false,\n        key: k,\n        value: v,\n        kind: \"init\"\n    }\n\n}\nfunction props(o) {\n    return Object.keys(o).map((k) => {\n        if (k=='$js') {\n            // console.log(o[k])\n            return prop(id(k),o[k])\n        } else {\n            return prop(id(k),value(o[k]))\n        }\n        // return {\n        //     type: \"Property\",\n        //     start: 0,\n        //     end: 0,\n        //     method: false,\n        //     shorthand: false,\n        //     computed: false,\n        //     key: id(k),\n        //     value: value(o[k]),\n        //     kind: \"init\"\n        // }\n    })\n}\n\nfunction funcCall(name,param) {\n    return {\n        type: \"ExpressionStatement\",\n        expression: {\n            type: \"CallExpression\",\n            callee: id(name),\n            arguments: [object(param)]\n        }\n    }\n}\n\nfunction callAppendToDoc(line) {\n    return funcCall('this.appendToDoc',line)\n}\n\nfunction callMaybeYaml(line) {\n    // line.value is already ecma ast\n    const value = line.value\n    delete line.value\n    const call = funcCall('this.maybeYaml',line)\n    call.expression.arguments[0].properties.push(prop(id('value'),value))\n    return call\n}\n\nfunction template(str) {\n    return {\n        type: 'TemplateLiteral',\n        expressions: {},\n        quasis: [{\n            type: 'TemplateElement',\n            value: { raw: str, cooked: str },\n            tail: true,\n        }]\n    }\n}\n\nfunction anon_function(lines) {\n\n    const funcCall = {\n        \"type\": \"FunctionExpression\",\n        \"id\": null,\n        \"expression\": false,\n        \"generator\": false,\n        \"async\": false,\n        \"params\": [],\n        \"body\": {\n            \"type\": \"BlockStatement\",\n            \"body\": []\n        }\n    }\n\n    lines.forEach(line => {\n        funcCall.body.body.push(this_addLine(line))\n    });\n\n    return funcCall\n}\n\nfunction this_addLine(line) {\n\n    return {\n        \"type\": \"ExpressionStatement\",\n        \"expression\": {\n            \"type\": \"CallExpression\",\n            \"callee\": {\n                \"type\": \"MemberExpression\",\n                \"object\": {\n                    \"type\": \"ThisExpression\",\n                },\n                \"property\": {\n                    \"type\": \"Identifier\",\n                    \"name\": \"addLine\"\n                },\n                \"computed\": false,\n                \"optional\": false\n            },\n            \"arguments\": [{\n                \"type\": \"ObjectExpression\",\n                \"properties\": Object.keys(line)\n                    .map(k => k=='$js'?prop(id('value'),line[k]):prop(id(k),value(line[k])))\n            }],\n            \"optional\": false\n        }\n      }\n}\n\nexport default function resqrmToEsast(options = {}) {\n\n    return (root,file) => {\n        const prog = program()\n\n        for (let child of root.children) {\n            if (child.type == \"script-line\") {\n                prog.body.push(p.parser(child.code).body[0])\n            } else {\n                prog.body.push(this_addLine(child))\n            }\n        }\n\n        return prog\n    }\n\n};","import {Parser} from 'acorn'\nimport {fromEstree} from 'esast-util-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nexport default function parseEcma(options = {}) {\n    const self = this\n    self.parser = parser\n    self.options = { ...options }\n  \n    function parser(value,vfile) {\n\n        let acorn = Parser\n        const comments = []\n        let tree\n      \n        if (self.options.plugins) {\n          acorn = acorn.extend(...self.options.plugins)\n        }\n      \n        const text =\n          typeof value === 'string'\n            ? value.toString()\n            : new TextDecoder().decode(value)\n      \n        try {\n          tree = acorn.parse(text, {\n            ecmaVersion: self.options.version || 'latest',\n            sourceType: self.options.module ? 'module' : 'script',\n            allowReturnOutsideFunction:\n              self.options.allowReturnOutsideFunction || undefined,\n            allowImportExportEverywhere:\n              self.options.allowImportExportEverywhere || undefined,\n            allowAwaitOutsideFunction:\n              self.options.allowAwaitOutsideFunction || undefined,\n            allowHashBang: self.options.allowHashBang || undefined,\n            allowSuperOutsideMethod: self.options.allowSuperOutsideMethod || undefined,\n            locations: true,\n            onComment: comments\n          })\n        } catch (error) {\n          const cause = (error)\n      \n          const message = new VFileMessage('Could not parse JavaScript with Acorn', {\n            cause,\n            place: {\n              line: cause.loc.line,\n              column: cause.loc.column + 1,\n              offset: cause.pos\n            },\n            ruleId: 'acorn',\n            source: 'esast-util-from-js'\n          })\n      \n          message.url = 'https://github.com/syntax-tree/esast-util-from-js#throws'\n      \n          throw message\n        }\n      \n        tree.comments = comments\n      \n        return fromEstree(tree)\n    }\n}\n","// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers, attributes } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n\n    if (attributes && attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < attributes.length; i++) {\n        this.ImportAttribute(attributes[i], state)\n        if (i < attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n    state.write(';')\n  },\n  ImportAttribute(node, state) {\n    this.Identifier(node.key, state)\n    state.write(': ')\n    this.Literal(node.value, state)\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n\n      if (node.attributes && node.attributes.length > 0) {\n        state.write(' with { ')\n        for (let i = 0; i < node.attributes.length; i++) {\n          this.ImportAttribute(node.attributes[i], state)\n          if (i < node.attributes.length - 1) state.write(', ')\n        }\n\n        state.write(' }')\n      }\n\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n\n    if (node.attributes && node.attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < node.attributes.length; i++) {\n        this.ImportAttribute(node.attributes[i], state)\n        if (i < node.attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `␣␣`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n","\nimport {GENERATOR, generate} from 'astring'\n\nexport default function compileEcma(options) {\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n  self.compiler = compiler\n\n  function compiler(tree) {\n\n    const {SourceMapGenerator, filePath, handlers} = self.settings || {}\n    const sourceMap = SourceMapGenerator\n      ? new SourceMapGenerator({file: filePath || '<unknown>.js'})\n      : undefined\n  \n    const value = generate(\n      tree,\n      {\n        comments: true,\n        generator: {...GENERATOR, ...handlers},\n        sourceMap: sourceMap || undefined\n      }\n    )\n    const map = sourceMap ? sourceMap.toJSON() : undefined\n  \n    return {value, map}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options} from 'hast-util-to-html'\n * @import {Compiler, Processor} from 'unified'\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler<Root, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","\nlet handler = {\n    has(target, property) {\n        switch (target.type) {\n            case 'object': {\n                for (let i=0 ; i<target.children.length ; i++) {\n                    let child = target.children[i]\n                    if (child.name == property) {\n                        return true\n                    }\n                }\n            }\n            case 'array': {\n                return property in target.children\n            }\n            case 'unknown': {\n                return false\n            }\n            // case 'value': {\n            //     return true\n            // }\n            default: {\n                throw new Error(target.type)\n            }\n        }\n        return false\n\n        // return property in target\n    },\n    get(target, property, receiver) {\n        if (property=='toJSON') {\n            const obj = {}\n            if (target.children) target.children.forEach(child => {\n                obj[child.name] = child.value\n            });\n            return () => (obj)\n        }\n        switch (target.type) {\n            case 'object': {\n\n                if (property == 'constructor') return Object\n\n                for (let i=0 ; i<target.children.length ; i++) {\n                    let child = target.children[i]\n                    if (child.name == property) {\n                        if (child.type == 'value') {\n                            return child.value\n                        } else {\n                            return new Proxy(child,handler)\n                        }\n                    }\n                }\n                return null;\n            }\n            case 'array': {\n\n                if (property == 'constructor') return Array\n\n                const v = target.children[property]\n                if (v==null) return null\n                else if (v.type == 'value') return v.value\n                return new Proxy(v,handler)\n            }\n            case 'unknown': {\n                return null;\n            }\n            case 'value': {\n                return target.value[property]\n            }\n            default: {\n                throw new Error(target.type)\n            }\n        }\n    },\n    set(target, property, value, receiver) {\n        throw new Error('set not-implemented')\n    },\n    ownKeys(target) {\n        if (target.children) {\n            return target.children.map(child => child.name)\n        } else {\n            return []\n        }\n    }\n}\n\nexport default class JsonTree {\n\n    constructor() {\n        this.root = { minChildIndent: 0, type: 'unknown', name: 'root' }\n        this.json = new Proxy(this.root,handler)        \n    }\n\n    iterateLikeStack(cb) {\n        let el = this.root\n        while (el != null) {\n            if (cb.call(null,el) === false) return\n            el = (el.children ? el.children[el.children.length-1] : null)\n            if (el!=null && el.type == 'value') {\n                el = null\n            }\n        }\n    }   \n}\n","\nimport {h} from 'hastscript'\nimport {visit} from 'unist-util-visit'\nimport {t} from '../util/hastscript-tools.js'\nimport lineToSxast from '../util/parse-text.js'\nimport util from 'util'\n\n\nfunction tagForStyle(s) {\n    switch (s) {\n        case 'bold': return h('b');\n        case 'italic': return h('i');\n        case 'underline': return h('u');\n        case 'strike-through': return h('s')\n        case 'superscript': return h('sup')\n        case 'subscript': return h('sub')\n        case 'code': return h('code')\n        case 'kbd': return h('kbd')\n        default: return h('div',{'data-style':s})\n    }\n}\n\nexport default function sastTextToHast(children) {\n\n    let hast = []\n\n    let stack = [{ children: hast }]\n\n    function openStyle(s) {\n        let n = tagForStyle(s)\n        stack[stack.length-1].children.push(n)\n        stack.push({ style: s, children: n.children })\n    }\n\n    function closedOpenStyle(s) {\n\n//        console.log(util.inspect(stack,false,null,true))\n        let i = stack.length - 1\n        while (i>0 && stack[i].style != s) {\n            i--\n        }\n        if (i>0) {\n            // console.log('currently in style: ' + s + ' at stack i=' + i)\n\n            while (stack.length>i) {\n                stack.pop()\n            }\n\n            return true\n        } else {\n            return false\n        }\n    }\n\n    // console.log('init stack',util.inspect(stack,false,null,true))\n    // console.log('init hast',util.inspect(hast,false,null,true))\n\n    if (children) for (let i=0 ; i<children.length ; i++) {\n\n        // console.log('next child: ',util.inspect(children[i],false,null,true))\n\n        switch (children[i].type) {\n            case 'text':\n            case 'element':\n            case 'comment':\n                stack[stack.length-1].children.push(children[i])\n                // console.log('text, stack now',util.inspect(stack,false,null,true))\n                break;\n            case 'link':\n                let link = children[i]\n                stack[stack.length-1].children.push(h('a',{\n                    href: link.ref,\n                },[t(link.text)]))\n                break;\n            // case 'include':\n            //     let inc = children[i]\n            //     stack[stack.length-1].children.push(h('span',{\n            //         class: inc.name,\n            //         args: inc.args\n            //     },[]))               \n            //     break;\n            // case 'mention':\n            //     let m = children[i]\n            //     stack[stack.length-1].children.push(h('a',{\n            //         href: '/users/' + m.value,\n            //     },[t( '@' + m.value)]))\n            //     break;\n            case 'format':\n                if (!closedOpenStyle(children[i].style)) {\n                    openStyle(children[i].style)\n                }\n                break;\n            default:\n                throw new Error('not implemented: ' + JSON.stringify(children[i]))\n        }\n\n        // console.log('stack',util.inspect(stack,false,null,true))\n        // console.log('hast',util.inspect(hast,false,null,true))\n\n    }\n\n    return hast\n}\n","\nimport {h} from 'hastscript'\nimport {visit} from 'unist-util-visit'\nimport {t} from '../util/hastscript-tools.js'\nimport lineToSxast from '../util/parse-text.js'\nimport util from 'util'\n\nexport default function sastTableToHast(rows) {\n    let head = []\n    let body = []\n    let foot = []\n    let colAlignment = {}\n\n    // console.log(util.inspect(rows,false,null,true))\n\n    let r = 0\n\n    // put all lines in body until end or there is a divider\n    while ( r<rows.length && rows[r].type != 'table-divider-line') {\n        body.push(rows[r++])\n    }\n\n    // got a divider, put rows so far in header and start filling body\n    if (r<rows.length) {\n        r++\n        head = body\n        body = []\n\n        // put all lines in body until end or there is a divider\n        while ( r<rows.length && rows[r].type != 'table-divider-line') {\n            body.push(rows[r++])\n        }\n\n        // found a second divider, put all remaining rows in foot\n        if (r<rows.length) {\n            r++\n\n            while ( r<rows.length ) {\n                if (rows[r].type == 'table-row-line') {\n                    foot.push(rows[r])\n                }\n                r++\n            }\n        \n        }\n    }\n\n    if (head.length>0) {\n        for (let i=0 ; i<head.length ; i++) {\n            for (let j=0 ; j<head[i].children.length ; j++) {\n                if (head[i].children[j].formatting.align) {\n                    colAlignment[j] = head[i].children[j].formatting.align\n                }\n            }\n        }\n    }\n\n    function cell(row,cellNumber,forceHeader) {\n        let el = h((forceHeader || row.children[cellNumber].formatting.header ? 'th' : 'td'))\n\n        if (row.children[cellNumber].formatting.colspan !== undefined) {\n            el.properties.colspan = row.children[cellNumber].formatting.colspan\n        }\n\n        if (row.children[cellNumber].formatting.rowspan !== undefined) {\n            el.properties.rowspan = row.children[cellNumber].formatting.rowspan\n        }\n\n        if (row.children[cellNumber].formatting.align !== undefined) {\n            el.properties.style = `text-align: ${row.children[cellNumber].formatting.align};`\n        } else if (colAlignment[cellNumber] !== undefined) {\n            el.properties.style = `text-align: ${colAlignment[cellNumber]};`\n        }\n\n        return el\n    }\n\n    const table = h('table')\n\n    if (head.length>0) {\n        const thead = h('thead')\n        table.children.push(thead)\n        for (let i=0 ; i<head.length ; i++) {\n            const tr = h('tr')\n            thead.children.push(tr)\n            for (let j=0 ; j<head[i].children.length ; j++) {\n                const th = cell(head[i],j,true)\n                tr.children.push(th)\n                th.children = head[i].children[j].children\n            }\n        }\n    }\n\n    const tbody = h('tbody')\n    table.children.push(tbody)\n    for (let i=0 ; i<body.length ; i++) {\n        const tr = h('tr')\n        tbody.children.push(tr)\n        for (let j=0 ; j<body[i].children.length ; j++) {\n            const td = cell(body[i],j)\n            tr.children.push(td)\n            td.children = body[i].children[j].children\n        }\n    }\n\n    if (foot.length>0) {\n        const tfoot = h('tfoot')\n        table.children.push(tfoot)\n        for (let i=0 ; i<foot.length ; i++) {\n            const tr = h('tr')\n            tfoot.children.push(tr)\n            for (let j=0 ; j<foot[i].children.length ; j++) {\n                const td = cell(foot[i],j)\n                tr.children.push(td)\n                td.children = foot[i].children[j].children\n            }\n        }\n    }\n\n    return table;\n}\n","\nimport {h} from 'hastscript'\nimport {t} from './util/hastscript-tools.js'\n\nimport JsonTree from './json-tree.js'\nimport sastTextToHast from './util/sast-text-to-hast.js';\nimport sastTableToHast from './util/sast-table-to-hast.js';\nimport sastFootnotesToHast from './util/sast-footnotes-to-hast.js';\nimport util from 'node:util'\n\nexport default class SqrmContext {\n    constructor(db,jsonTree) {\n        this.db = db\n\n        this.hast = {\n            type: 'root',\n            children: [],\n        };\n\n        this.indentStack = [this.hast];\n        this.yamlNotAllowedIndent = -1\n        this.hastCallbacks = []\n        this.jsonTree = jsonTree || new JsonTree()\n        this.json = this.jsonTree.json\n        this.blank = null;\n        this.preIndent = -1;\n        this.footnotes = []\n    }\n\n    addLine(obj) {\n\n        function spaces(i) {\n            let ss = ''\n            for (let j=0 ; j<i ; j++) ss = ss + '  '\n            return ss\n        }\n\n        if (this.preIndent > 0 && (obj.type == 'blank-line' || obj.indent >= this.preIndent)) {\n\n            if (obj.type == 'element-line' \n                    && obj.tag == 'code'\n                    && this.indentStack[this.preIndent].tagName == 'pre') {\n\n                const code = h('code',obj.properties,[{type:'text',value:'\\n'}])\n                const pre = this.indentStack[this.preIndent]\n                pre.children.push(code)\n                this.indentStack.push(code)\n                this.preIndent++\n            } else {\n                this.indentStack[this.preIndent].children.push({\n                    type: 'text',\n                    value: obj.text ? spaces(obj.indent-this.preIndent)+obj.text+'\\n' : '\\n'\n                })\n            }\n        } else if (obj.type == 'blank-line') {\n            if (this.blank = null) {\n                this.blank = '\\n'\n            } else {\n                this.blank += '\\n'\n            }\n        } else {\n\n            this.preIndent = -1\n\n            if (obj.type == 'yaml-line') {\n\n                if (this.blank = null) {\n                    this.blank = '\\n'\n                } else {\n                    this.blank += '\\n'\n                }\n                this.jsonTag(obj)\n\n            } else {\n                const indent = obj.indent\n\n                while (this.indentStack.length - 1 < indent) {\n                    let node = h('div')\n                    this.indentStack[this.indentStack.length - 1].children.push(node)\n                    this.indentStack.push(node);\n                }\n\n                while (this.indentStack.length - 1 > indent) {\n                    this.indentStack.pop();\n                }\n\n                let prev = null;\n                const indentLevel = this.indentStack[indent]\n\n                if (indentLevel && indentLevel.children.length>0) {\n                    prev = indentLevel.children[indentLevel.children.length-1]\n                }\n\n                if (obj.type == 'text-line') {\n\n                    if (this.blank == null && prev && prev.tagName == 'p') {\n                        if (prev.sqrm.length>0) prev.sqrm.push({ type: 'text', value: '\\n' })\n                        prev.sqrm.push(... obj.children)\n                        prev.children = sastTextToHast(prev.sqrm)\n                    } else if (this.blank == null && indentLevel.tagName == 'li') {\n                        if (indentLevel.sqrm.length>0) indentLevel.sqrm.push({ type: 'text', value: '\\n' })\n                        indentLevel.sqrm.push(... obj.children)\n                        indentLevel.children = sastTextToHast(indentLevel.sqrm)\n                    } else {\n                        let hast = h('p')\n                        hast.sqrm = obj.children\n                        hast.children = sastTextToHast(obj.children)\n                        indentLevel.children.push(hast);\n                    }\n                } else if (obj.type == 'table-row-line' || obj.type == 'table-divider-line') {\n                    if (this.blank == null && prev && prev.tagName == 'table') {\n                        prev.sqrm.push(obj);\n                        prev.children = sastTableToHast(prev.sqrm).children\n                    } else {\n                        let hast = h('table')\n                        hast.sqrm = [obj]\n                        hast.children = sastTableToHast(hast.sqrm).children\n                        indentLevel.children.push(hast);\n                    }\n                } else if (obj.type == 'ordered-list-item-line') {\n                    if (prev && prev.tagName == 'ol') {\n                        let li = h('li')\n                        li.sqrm = obj.children\n                        li.children = sastTextToHast(obj.children)\n                        prev.children.push(li)\n                       this.indentStack.push(li)\n                    } else {\n                        let li = h('li')\n                        li.sqrm = obj.children\n                        li.children = sastTextToHast(obj.children)\n                        let ol = h('ol',{},[li]) //{ type: 'ordered-list', children: [toHast(obj)] }\n                        indentLevel.children.push(ol)\n                        this.indentStack.push(li)\n                    }\n                } else if (obj.type == 'unordered-list-item-line') {\n                    if (prev && prev.tagName == 'ul') {\n                        let li = h('li')\n                        li.sqrm = obj.children\n                        li.children = sastTextToHast(obj.children)\n                        prev.children.push(li)\n                       this.indentStack.push(li)\n                    } else {\n                        let li = h('li')\n                        li.sqrm = obj.children\n                        li.children = sastTextToHast(obj.children)\n                        let ul = h('ul',{},[li]) //{ type: 'ordered-list', children: [toHast(obj)] }\n                        indentLevel.children.push(ul)\n                        this.indentStack.push(li)\n                    }\n                } else if (obj.type == 'hr-line') {\n                    indentLevel.children.push(h('hr'))\n                } else if (obj.type == 'heading-line') {\n                    indentLevel.children.push(h('h'+obj.level,{},obj.children))\n\n                } else if (obj.type == 'code-block-line') {\n\n                    let cls = 'language-' + (obj.language ? obj.language : 'text' )\n                    this.preIndent = indent + 1\n                    let code = h('code',{ class: cls },[{type:'text',value:'\\n'}])\n                    let pre = h('pre',{},[code])\n                    pre.children.push = function(el) {\n                        code.children.push(el)\n                    }\n                    indentLevel.children.push(pre)\n                    this.indentStack.push(pre)\n\n                } else if (obj.type == 'element-line') {\n                    let hast\n                    if (obj.tag == '!doctype') {\n                        hast = { type: 'doctype' }\n                    } else {\n                        hast = h(obj.tag,obj.properties)\n                        hast.sqrm = []\n\n                        if (obj.tag=='pre' || obj.tag=='script' || obj.tag=='style') {\n                            //console.log('=============== ' + (indent+1));\n                            this.preIndent = indent + 1\n                            hast.children.push({type:'text',value:'\\n'})\n                            hast.sqrm.push(... hast.children)\n                        }\n                    }\n                    indentLevel.children.push(hast);\n                    this.indentStack.push(hast)\n                } else if (obj.type == 'footnote-line') {\n                    this.footnotes.push(obj)\n                } else {\n                    throw new Error('not implemented obj.type='+obj.type)\n                }\n\n                this.blank = null;\n            }\n        }\n    }\n\n    processFootnotes() {\n        sastFootnotesToHast(this.hast,this.footnotes)\n    }\n\n    appendToDoc(obj) {\n\n        if (this.yamlNotAllowedIndent != -1 && obj.type != 'blank-line') {\n            if (obj.indent < this.yamlNotAllowedIndent) {\n                this.yamlNotAllowedIndent = -1\n            }\n        }\n\n        if (this.yamlNotAllowedIndent == -1 && obj.type == 'div-line') {\n            switch (obj.tag) {\n                case 'pre':\n                case 'script':\n                case 'style':\n                case '!--':\n                    this.yamlNotAllowedIndent = obj.indent + 1\n            }\n        }\n\n        let wasAppended = false\n        if (this.appendTextToNode != null && obj.type == 'text-line') {\n            if (this.appendTextToNode.minIndent !== undefined) {\n                if (this.appendTextToNode.minIndent <= obj.indent) {\n                    delete this.appendTextToNode.minIndent\n                    this.appendTextToNode.indent = obj.indent\n                    const ls = obj.text.split('\\n')\n                    for (let i=0 ; i<ls.length ; i++) {\n                        if (this.appendTextToNode.jsonNode.value != '') {\n                            if (this.appendTextToNode.mode == '|') {\n                                this.appendTextToNode.jsonNode.value += '\\n'\n                            } else {\n                                this.appendTextToNode.jsonNode.value += ' '\n                            }\n                        }\n                        this.appendTextToNode.jsonNode.value += ls[i].trim() // obj.text.trim()\n                    }\n                    wasAppended = true\n                }\n            } else if (this.appendTextToNode.indent == obj.indent) {\n                const ls = obj.text.split('\\n')\n                for (let i=0 ; i<ls.length ; i++) {\n                    if (this.appendTextToNode.jsonNode.value != '') {\n                        if (this.appendTextToNode.mode == '|') {\n                            this.appendTextToNode.jsonNode.value += '\\n'\n                        } else {\n                            this.appendTextToNode.jsonNode.value += ' '\n                        }\n                    }\n                    this.appendTextToNode.jsonNode.value += ls[i].trim() // obj.text.trim()\n                }\n                wasAppended = true\n            }\n        }\n\n        if (!wasAppended) {\n            this.appendTextToNode = null\n            this.doc.children.push(obj)\n        }\n    }\n\n    maybeYaml(obj) {\n// console.log('maybeYaml',obj)\n        if (this.yamlNotAllowedIndent != -1 && obj.indent < this.yamlNotAllowedIndent) {\n            this.yamlNotAllowedIndent = -1\n        }\n\n        const yaml = ( obj.type == 'yaml-line' ? obj : obj.yaml )\n\n        const line = obj\n\n        if (this.yamlNotAllowedIndent != -1) {\n            this.appendTextToNode = null\n            if (obj.type == 'yaml-line') obj.type = 'paragraph-line'\n            this.doc.children.push( obj )// { type: 'text', line: obj.line, text: obj.text, indent: obj.indent, children: obj.children }\n        } else {\n\n            // console.log('yaml:',yaml)\n            let jsonNode = this.jsonTag(yaml)\n            // console.log('jsonNode:',jsonNode)\n\n            if (jsonNode != null) {\n                if (yaml.value && yaml.value.length==1 && typeof yaml.value[0] == \"string\") {\n\n                    if (yaml.value[0]=='|' || yaml.value[0]=='>') {\n                        // remove the | or > from the value of this node\n                        jsonNode.value = ''\n                        this.appendTextToNode = { minIndent: yaml.indent+1, mode: yaml.value[0], jsonNode: jsonNode }\n                    } else {\n                        this.appendTextToNode = null\n                    }\n                } else {\n                    this.appendTextToNode = null\n                }\n\n                this.doc.children.push( { type: 'blank-line', line: obj.line } )// h('a',{href:`/tags/${obj.name}`},obj.children)\n            } else {\n                this.appendTextToNode = null\n                // if (obj.type == 'yaml') obj.type = 'paragraph'\n                // this.doc.children.push( obj )// { type: 'text', line: obj.line, text: obj.text, indent: obj.indent, children: obj.children }\n            }\n        }\n    }\n\n    // addTask({line,done,text}) {\n    //     let tasksNode = null\n\n    //     if (this.jsonTree.root.type == 'unknown') {\n    //         this.jsonTree.root.type = 'object'\n    //         this.jsonTree.root.childrenIndent = 0\n    //         delete this.jsonTree.root.minChildIndent\n    //         tasksNode = { type: 'array', name: 'tasks', childrenIndent: 1, children: [] }\n    //         this.jsonTree.root.children = [tasksNode]\n    //     } else if (this.jsonTree.root.type == 'object') {\n    //         for (let i=0 ; i<this.jsonTree.root.children.length ; i++) {\n    //             const child = this.jsonTree.root.children[i]\n    //             if (child.name == 'tasks') {\n    //                 tasksNode = child\n    //                 break\n    //             }\n    //         }\n\n    //         if (tasksNode == null) {\n    //             tasksNode = { type: 'array', name: 'tasks', childrenIndent: 1, children: [] }\n    //             this.jsonTree.root.children.push(tasksNode)\n    //         }\n    //     } else {\n    //         // silently not supported if the root is an array\n    //         return\n    //     }\n\n    //     const taskNode = { type: 'object', childrenIndent: 2, children: [] }\n    //     taskNode.children.push({ type: 'value', name: 'line', value: line })\n    //     taskNode.children.push({ type: 'value', name: 'text', value: text })\n    //     taskNode.children.push({ type: 'value', name: 'done', value: done })\n    //     tasksNode.children.push(taskNode)\n\n    //     // this.updateJson()\n    // }\n\n    // template(fn) {\n    //     return fn()\n    // }\n\n    // inlineTag({name,args,children}) {\n    //     this.jsonTag({\n    //         indent: 0,\n    //         isArrayElement: false,\n    //         name: name,\n    //         colon: true,\n    //         value: (args === undefined ? true : args )\n    //     })\n\n    //     return h('a',{ href: `/tags/${name}` }, children )\n    // }\n\n    // j(name,value) {\n\n    //     if (typeof name == 'object') {\n    //         if (this.jsonTag(name)) {\n    //             // valid yaml, added to json\n    //             return h('a',{href:`/tags/${name.name}`},name.children)\n    //         } else {\n    //             return name.children\n    //         }\n    //     } else {\n    //         if (this.jsonTag({\n    //                 indent: 0,\n    //                 isArrayElement: false,\n    //                 name: name,\n    //                 colon: true,\n    //                 value: value})) {\n    //             // valid yaml, added to json\n    //             return h('a',{href:`/tags/${name.name}`},name.children)\n    //         } else {\n    //             return name.children\n    //         }\n    //     }\n    // }\n\n    inlineTag({type,name,args,$js,text}) {\n\n        let query = ''\n\n        if ($js && Array.isArray($js) && ($js.length != 1 || $js[0] !== true)) {\n            query = '?args=' + encodeURIComponent(JSON.stringify($js))\n        }\n\n        if ($js && Array.isArray($js)) {\n            if ($js.length == 1) {\n                this.json[name] = $js[0]\n            } else {\n                this.json[name] = $js\n            }\n        }\n//console.log(name,args,$js,text,query)\n        return h('a',{ href: '/tags/' + name  + query},[t(text)])\n    }\n\n    inlineMention({type,value}) {\n        // console.log({type,value})\n        return h('a',{ href: '/users/' + value },[t('@'+value)])\n\n    }\n\n    include(args) {\n        this.indentStack[this.indentStack.length-1].children.push(this.inlineInclude(args))\n    }\n\n    inlineInclude({type,collection ='default',name,args,text,$js}) {\n        return {\n            type: 'comment',\n            value: `failed to include single doc: ${collection}.${name}( ${args} )`\n        }\n    }\n\n    // todo: move to json-tree.js\n    jsonTag({indent=1,isArrayElement=false,name,colon=true,value}) {\n\n        if (value != undefined && value.length == 1) {\n            value = value[0]\n        }\n\n        let parent = null\n        if (isArrayElement) {\n            // if this is an array element: look for unknown or array\n\n            this.jsonTree.iterateLikeStack((el) => {\n                if (el.type=='unknown' && el.minChildIndent<=indent) {\n                    parent = el\n                    return false\n                } else if (el.type=='array' && el.childrenIndent==indent) {\n                    parent = el\n                    return false\n                }\n            })\n\n        } else {\n            // if this is not an array element: look fo unknown or object\n// console.log(util.inspect(this.jsonTree,false,null,true))\n            this.jsonTree.iterateLikeStack((el) => {\n                if (el.type=='unknown' && el.minChildIndent<=indent) {\n                    parent = el\n                    return false\n                } else if (el.type=='object' && el.childrenIndent==indent) {\n                    parent = el\n                    return false\n                }                \n            })\n        }\n// console.log('parent=',parent)\n        if (parent == null) {\n            return null\n        }\n\n        if (parent.type == 'unknown' && !isArrayElement) {\n            if (parent.minChildIndent > indent) throw new Error()\n\n            parent.type = 'object'\n            parent.childrenIndent = indent\n            delete parent.minChildIndent\n\n            if (colon && value === undefined) {\n                parent.children = [ { minChildIndent: indent, type: 'unknown', name: name } ]\n            } else {\n                parent.children = [ { type: 'value', name: name, value: value } ]\n            }\n\n            // this.updateJson()\n            return parent.children[0]\n        }\n\n        if (parent.type == 'unknown' && isArrayElement) {\n            if (parent.minChildIndent > indent) throw new Error()\n\n            parent.type = 'array'\n            parent.childrenIndent = indent\n            delete parent.minChildIndent\n\n            let jsonNode = null\n            if (colon && value === undefined) {\n                jsonNode = { minChildIndent: indent+1, type:'unknown',name:name }\n                const arrayElement = { childrenIndent: indent+1, type: 'object', children: [jsonNode]}\n                parent.children = [arrayElement]\n            } else if (colon) {\n                jsonNode = { childrenIndent: indent+1, type:'value', name:name, value:value}\n                const arrayElement = { childrenIndent: indent+1, type: 'object', children: [jsonNode]}\n                parent.children = [arrayElement]\n            } else if (!colon) {\n                jsonNode = { type: 'value', value: value }\n                parent.children = [ jsonNode ]\n            }\n\n            // this.updateJson()\n            return jsonNode\n        }\n\n        if (parent.type == 'object' && !isArrayElement) {\n \n            let child = null\n            if (colon && value === undefined) {\n                child = { minChildIndent: indent, type: 'unknown', name: name }\n            } else {\n                child = { type: 'value', name: name, value: value }\n            }\n\n            for (let i=0 ; i<parent.children.length ; i++) {\n                if (parent.children[i].name == name) {\n                    parent.children[i] = child\n                    return parent.children[i]\n                }\n            }\n\n            parent.children.push(child)\n            return parent.children[parent.children.length-1]\n        }\n\n        if (parent.type == 'array' && isArrayElement) {\n\n            let jsonNode = null\n            if (colon && value === undefined) {\n                jsonNode = { minChildIndent: indent+1, type:'unknown',name:name }\n                const arrayElement = { childrenIndent: indent+1, type: 'object', children: [jsonNode]}\n                parent.children.push(arrayElement)\n            } else if (colon) {\n                jsonNode = { childrenIndent: indent+1, type:'value',name:name,value:value}\n                const arrayElement = { childrenIndent: indent+1, type: 'object', children: [jsonNode]}\n                parent.children.push(arrayElement)\n            } else if (!colon) {\n                jsonNode = { type: 'value', value: value }\n                parent.children.push(jsonNode)\n            }\n\n            // this.updateJson()\n            return jsonNode\n        }\n\n        return null\n    }\n\n    // append(ln) {\n    //     this.lines.push(ln)\n    // }\n} \n","\nimport {h} from 'hastscript'\nimport {visit} from 'unist-util-visit'\nimport {t} from '../util/hastscript-tools.js'\n\nexport default function(hast,footnotes) {\n\n    // http://www.java2s.com/example/html-css/css-widget/adding-parentheses-in-html-ordered-list.html\n\n    if (footnotes.length>0) {\n        let footnotesLookup = {}\n        const ol = h('ol')\n        hast.children.push(h('section',{ class: 'footnotes'},[ol]))\n        for (let i=0 ; i<footnotes.length ; i++) {\n            footnotesLookup[footnotes[i].id] = i+1\n\n            ol.children.push(h('li',{},[ h('a',{name:`footnote-${footnotes[i].id}`}\n            )].concat([t(' ')]).concat(footnotes[i].children)))\n        }\n\n        visit(hast, (node) => {\n            return node.type=='element' && node.tagName=='a' && node.properties['footnote-u'] !== undefined\n        }, (node) => {\n            const id = node.properties['footnote-u']\n            let num = footnotesLookup[node.properties['footnote-u']]\n            if (num===undefined) {\n                // used but not defined\n                num = Object.keys(footnotesLookup).length + 1\n                footnotesLookup[id] = num\n                ol.children.push(h('li',{},[ h('a',{name:`footnote-${id}`}) ]))\n            }\n            node.children[0].value = `[${num}]`\n        })\n    }\n\n}","\nimport { unified } from 'unified';\n\nimport parseIndentedLines from '../src/unified/parse-indented-lines.js'\nimport indentedLinesToSxast from '../src/unified/plugin-ilines-to-sast.js';\n// import sqrmLinesToSxast from '../original/plugin-sxlines-to-sxast.js'\nimport resqrmToEsast from '../src/unified/plugin-sast-to-esast.js'\nimport compileEcma from '../src/unified/compile-ecma.js'\n// import sastToHast from '../src/unified/plugin-sast-to-hast.js'\nimport {visit} from 'unist-util-visit'\nimport { inspect } from \"unist-util-inspect\";\nimport util from 'node:util'\nimport rehypeStringify from 'rehype-stringify'\n// import rehypeParse from 'rehype-parse'\nimport SqrmContext from '../src/sqrm-context.js';\n\nexport default function(src) {\n\n    const file = unified()\n        .use(parseIndentedLines)\n        .use(indentedLinesToSxast)\n        .use(resqrmToEsast)\n        .use(compileEcma)\n        .processSync(src)\n\n    const f = new Function(file.result.value)\n\n    const self = new SqrmContext()\n    const req = {};\n\n    try {\n        f.call(self,req)\n    } catch (e) {\n        console.error(e)\n    }\n\n    self.processFootnotes()\n\n    visit(self.hast, (node) => {\n        delete node.sqrm\n    })\n\n    const html = unified()\n        .use(rehypeStringify)\n        .stringify(self.hast)\n\n    const json = self.json.toJSON()\n\n    return {html,json}\n\n}"],"names":["bail","error","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","TypeError","next","output","fn","index","undefined","middleware","called","wrapped","parameters","fnExpectsCallback","result","push","done","apply","this","then","Error","wrap","use","middelware","point","line","column","position","pos","start","end","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","super","reason","legacyCause","place","ancestors","cause","message","ruleId","source","indexOf","slice","parent","fatal","file","stringifyPosition","stack","actual","expected","note","url","minpath","basename","path","extname","assertPath","seenNonSlash","codePointAt","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","Boolean","href","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","isUint8Array","data","history","messages","map","stored","field","includes","assertNonEmpty","assertPart","stem","fail","info","encoding","TextDecoder","decode","part","CallableInstance","property","proto","setPrototypeOf","own","Processor","Compiler","Parser","attachers","compiler","freezeIndex","frozen","namespace","parser","transformers","destination","attacher","assertUnfrozen","freeze","self","transformer","Number","POSITIVE_INFINITY","parse","realFile","vfile","assertParser","String","process","assertCompiler","executor","Promise","resolve","reject","parseTree","realDone","tree","compileTree","compileResult","looksLikeAValue","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","add","plugin","plugins","settings","entryIndex","primary","rest","currentPrimary","isPlainObj","unified","node","type","asyncName","looksLikeAVFile","parseIndentedLines","indentation","doc","root","children","l","j","atLineStart","indent","addLine","split","ilineIndent","Math","floor","substring","s","emojiMap","XD","xD","XP","xp","D8","DX","O_O","O_o","o_O","o_o","mapStringToUnicode","objectPrototypesFunctions","Set","keysStartingWith","keys","filter","startsWith","fromUnicodeToEmoji","text","fromCodePoint","parseInt","words","trimStart","newText","forEach","word","w","emojiArray","namedReferences","bodyRegExps","xml","html4","html5","entities","characters","_","$","fj","numericUnicodeMap","surrogatePairs","astralCodePoint","fromCharCode","getCodePoint","input","charCodeAt","highSurrogateFrom","highSurrogateTo","__assign","assign","t","n","p","lib","named_references_1","require$$0","numeric_unicode_map_1","require$$1","surrogate_pairs_1","require$$2","allNamedReferences","all","replaceUsingRegExp","macroText","macroRegExp","macroReplacer","lastIndex","replaceResult","replaceMatch","exec","replaceLastIndex","replaceInput","encodeRegExps","specialChars","nonAscii","nonAsciiPrintable","nonAsciiPrintableOnly","extensive","defaultEncodeOptions","mode","level","numeric","encode","_a","_b","_c","_d","_e","encodeRegExp","references","isHex","defaultDecodeOptions","scope","strict","attribute","baseDecodeRegExps","body","decodeRegExps","outOfBoundsChar","defaultDecodeEntityOptions","getDecodedEntity","entity","isAttribute","isStrict","decodeResult","decodeEntityLastChar","decodeResultByReference","decodeSecondChar","decodeCode","substr","decodeEntity","decodeRegExp","checkText","smile2emoji","str","match","astralIdentifierCodes","astralIdentifierStartCodes","nonASCIIidentifierStartChars","reservedWords","strictBind","ecma5AndLessKeywords","keywords$1","keywordRelationalOperator","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","isInAstralSet","set","isIdentifierStart","astral","test","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","prec","keywords","kw","types$1","num","regexp","string","privateId","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","questionDot","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","nextLineBreak","from","nonASCIIwhitespace","skipWhiteSpace","ref","propName","regexpCache","create","wordsRegexp","replace","codePointToString","loneSurrogate","Position","col","offset","SourceLocation","sourceFile","getLineInfo","cur","nextBreak","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowSuperOutsideMethod","allowHashBang","checkPrivateFields","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","warnedAboutEcmaVersion","getOptions","opts","opt","console","warn","tokens","token","array","block","startLoc","endLoc","comment","loc","range","pushComment","SCOPE_CLASS_STATIC_BLOCK","functionFlags","async","generator","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","potentialArrowInForAwait","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","privateNameStack","prototypeAccessors","inFunction","inGenerator","inAsync","canAwait","allowSuper","allowDirectSuper","treatFunctionsAsVar","allowNewDotTarget","inClassStaticBlock","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","inClassFieldInit","currentThisScope","treatFunctionsAsVarInScope","currentScope","len","cls","parseExpressionAt","parseExpression","tokenizer","defineProperties","pp$9","literal","spaceAfter","charAt","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$8","exports","stmt","parseStatement","list","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","after","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","startsWithLet","isForOf","initPos","init","parseExprSubscripts","toAssignable","checkLValPattern","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty$1","parseCatchClauseParam","param","parseBindingAtom","simple","handler","clause","finalizer","allowMissingInitializer","object","i$1","label$1","statementStart","createNewLexicalScope","exitStrict","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isPrivateNameConflicted","privateNameMap","element","curr","static","checkKeyName","computed","statement","allowExpressionBody","forInit","initFunction","checkLValSimple","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","enterClassBody","classBody","hadConstructor","parseClassElement","superClass","exitClassBody","constructorAllowsSuper","keyName","isGenerator","isStatic","parseClassStaticBlock","isClassElementNameStart","lastValue","startNodeAt","parseClassElementName","isConstructor","allowsDirectSuper","parseClassMethod","parseClassField","parsePrivateIdent","parsePropertyName","method","parseMethod","oldLabels","declared","used","parseExportAllDeclaration","exported","parseModuleExportName","checkExport","parseExprAtom","attributes","parseWithClause","declaration","parseExportDefaultDeclaration","shouldParseExportStatement","parseExportDeclaration","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","fNode","cNode","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","parseExportSpecifier","nodes","first","parseImportSpecifiers","parseImportSpecifier","imported","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","attributeKeys","attr","parseImportAttribute","stringLiteral","parseLiteral","statements","isDirectiveCandidate","directive","raw","pp$7","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","allowModifiers","elts","parseBindingListItem","parseAssignableListItem","elem","parseMaybeDefault","bindingType","checkClashes","isBind","declareName","checkLValInnerPattern","TokContext","isExpr","preserveSpace","override","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$6","curContext","braceIsBlock","prevType","inGeneratorContext","overrideContext","tokenCtx","out","statementParens","allowed","pp$5","isLocalVariableAccess","isPrivateFieldAccess","checkPropClash","propHash","shorthand","other","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldDoubleProto","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","node$1","parseSubscripts","base","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","optional","chainNode","shouldParseAsyncArrow","parseSubscriptAsyncArrow","parseArrowExpression","optionalSupported","parseExprList","callee","node$2","tag","quasi","parseTemplate","isTagged","forNew","readRegexp","canBeArrow","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseExprAtomDefault","parseDynamicImport","meta","parseImportMeta","errorPos","bigint","val","shouldParseArrow","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","parseGetterSetter","paramCount","copyNode","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","allowDuplicates","nameHash","liberal","parseIdentNode","delegate","pp$4","err","SyntaxError","raisedAt","pp$3","Scope","var","lexical","functions","redeclared","scope$2","scope$3","SCOPE_TOP","Node","pp$2","newNode","ecma9BinaryProperties","ecma10BinaryProperties","ecma12BinaryProperties","unicodeBinaryProperties","unicodeBinaryPropertiesOfStrings","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","ecma12ScriptValues","ecma13ScriptValues","unicodeScriptValues","buildUnicodeData","d","binary","binaryOfStrings","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$1","BranchID","separatedFrom","alt","sibling","RegExpValidationState","validFlags","unicodeProperties","switchU","switchV","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","branchID","isRegularExpressionModifier","ch","isSyntaxCharacter","isControlLetter","reset","unicodeSets","unicode","at","forceU","c","nextIndex","current","lookahead","advance","eatChars","chs","validateRegExpFlags","state","u","v","flag","validateRegExpPattern","regexp_pattern","hasProp","regexp_disjunction","trackDisjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","addModifiers","regexp_eatModifiers","hasHyphen","modifier","removeModifiers","modifier$1","regexp_groupSpecifier","modifiers","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","known","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","isDecimalDigit","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isHexDigit","hexToInt","isOctalDigit","isCharacterClassEscape","negate","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classContents","regexp_classSetExpression","regexp_nonEmptyClassRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","subResult","regexp_eatClassSetRange","regexp_eatClassSetOperand","regexp_eatClassSetCharacter","regexp_eatClassStringDisjunction","regexp_eatNestedClass","result$1","regexp_classStringDisjunctionContents","regexp_classString","count","regexp_eatClassSetReservedPunctuator","isClassSetReservedDoublePunctuatorCharacter","isClassSetSyntaxCharacter","isClassSetReservedPunctuator","regexp_eatOctalDigit","n1","n2","Token","pp","stringToBigInt","BigInt","ignoreEscapeSequenceInKeyword","getToken","this$1$1","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","readToken_numberSign","readWord1","readRadixNumber","readString","escaped","inClass","flagsStart","e","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","total","lastCode","Infinity","startsWithDot","octal","val$1","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","inTemplate","octalStr","escStart","esc","qouted","replaceAll","templateOrString","acorn.parse","quoted","yamlToEsastArray","acorn","version","tokTypes","keywordTypes","tokContexts","Schema","normal","space","merge","definitions","toLowerCase","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","mask","mark","check","definition","transform","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","lang","language","loading","low","manifest","maxLength","media","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","style","tabIndex","title","translate","typeMustMatch","useMap","width","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","find","schema","Type","camelcase","toUpperCase","dashes","kebab","$0","htmlBase","svgBase","trim","padRight","padLeft","search","createH","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","child","unshift","props","previous","tagName","subvalue","parseSelector","record","isChild","addProperty","addChild","isNaN","spaces","commas","parsePrimitive","concat","finalResult","h","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","slashscheme","whitespace","registerGroup","groups","addToGroups","group","State","jr","jd","accepts","go","nextState","has","exactOnly","ta","inputs","tt","tr","ts","templateState","allFlags","flagsForToken","WORD","UWORD","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","NL$1","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","__proto__","WS","NL","EMOJI","ASCII_LETTER","LETTER","DIGIT","SPACE","tlds","utlds","fastts","defaultt","decodeTlds","encoded","popDigitCount","popCount","defaults","defaultProtocol","events","noop","formatHref","nl2br","validate","truncate","ignoreTags","render","Options","defaultRender","o","ignoredTags","uppercaseIgnoredTags","MultiToken","createTokenClass","ir","isCallable","option","getObj","isLink","toHref","toFormattedString","formatted","toFormattedHref","startIndex","endIndex","toObject","toFormattedObject","formattedHref","attrs","eventListeners","class","Email","Text","Nl","Url","hasProtocol","makeState","arg","initMultiToken","Multi","startIdx","endIdx","INIT","scanner","tokenQueue","pluginQueue","customSchemes","initialized","Start","Num","Word","UWord","Ws","whitespace$1","Emoji","EmojiJoiner","wordjr","uwordjr","tld","utld","sort","a","b","sch","init$2","_ref","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","tokenize","multis","textTokens","secondState","multiLength","latestAccepting","sinceAccepts","subtokens","iterable","second","stringToArray","charCount","charCursor","tokenLength","charsSinceAccepts","run$1","escapeText","attributesToString","linkifyStr","linkify","linkifyOptions","m","internalLink","encodeURIComponent","strToLink","parts","addr","il","txt","styleFor","parseText","prev","foundLink","linkText","ln","log","ch0","chx","tagAt","tagRegex","res","bang","part2","tagStr","tagValueStr","includeOpts","part1","args","$js","collection","el","punc","parseTableRow","pragmasToAttributes","pragmas","header","rowspan","colspan","tableCellFormatting","cells","splice","splitText","f","lineToSxast","formatting","RE_DocumentSeparator","RE_BlankLine","RE_Tag","RE_Script","RE_Footnote","RE_LinkDefinition","RE_CodeBlock","RE_Element","RE_Heading","RE_HR","RE_ListItem","RE_ListItemTask","RE_Table","RE_TableHeader","RE_ScriptEnd","lineToSqrm","task","marker","endScript","matchAll","isArrayElement","rawNode","yamlToEsast","indentedLinesToSxast","iline","sast","CONTINUE","EXIT","SKIP","toResult","nodelike","pointOrUndefined","estreePoint","estreeOffset","numberOrUndefined","emptyOptions","fromEstree","estree","esast","ignoreBigint","visitor","enter","leave","build","parents","visit","displayName","cKey","grandparents","cIndex","subresult","nodeLike","positionFromEstree","dirty","remove","comments","module","inlineInclude","inlineMention","this_addLine","resqrmToEsast","prog","repeat","endsWith","OPERATOR_PRECEDENCE","instanceof","NEEDS_PARENTHESES","EXPRESSIONS_PRECEDENCE","ArrayExpression","TaggedTemplateExpression","ThisExpression","Identifier","PrivateIdentifier","Literal","TemplateLiteral","Super","SequenceExpression","MemberExpression","ChainExpression","CallExpression","NewExpression","ArrowFunctionExpression","ClassExpression","FunctionExpression","ObjectExpression","UpdateExpression","UnaryExpression","AwaitExpression","BinaryExpression","LogicalExpression","ConditionalExpression","AssignmentExpression","YieldExpression","RestElement","formatSequence","write","expressionNeedsParenthesis","parentNode","isRightHand","nodePrecedence","expressionsPrecedence","parentNodePrecedence","formatExpression","reindent","lineEnd","lines","formatComments","formatVariableDeclaration","VariableDeclarator","ForInStatement","FunctionDeclaration","BlockStatement","GENERATOR","Program","indentLevel","writeComments","trailingComments","statementIndent","ClassBody","StaticBlock","EmptyStatement","ExpressionStatement","precedence","IfStatement","LabeledStatement","BreakStatement","ContinueStatement","WithStatement","SwitchStatement","caseIndent","occurences","occurencesCount","occurence","consequentCount","ReturnStatement","ThrowStatement","TryStatement","WhileStatement","DoWhileStatement","ForStatement","ForOfStatement","DebuggerStatement","VariableDeclaration","ClassDeclaration","ImportDeclaration","specifier","ImportAttribute","ImportExpression","ExportDefaultDeclaration","ExportNamedDeclaration","ExportAllDeclaration","MethodDefinition","SpreadElement","TemplateElement","ArrayPattern","propertyIndent","Property","PropertyDefinition","ObjectPattern","needsParentheses","AssignmentPattern","isIn","currentNode","hasCallExpression","MetaProperty","RegExpLiteral","EMPTY_OBJECT","setup","writeToStream","startingIndentLevel","sourceMap","writeAndMap","writeToStreamAndMap","lineEndSize","mapping","original","generated","_file","addMapping","compileEcma","SourceMapGenerator","filePath","handlers","generate","toJSON","convert","ok","castFactory","tests","any","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","visitParents","reverse","factory","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","htmlVoidElements","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","WeakMap","core","subset","cached","charactersToExpression","charactersToExpressionCached","basic","escapeOnly","pair","character","hexadecimalRegex","decimalRegex","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","notAlphanumericRegex","formatSmart","named","omit","toHexadecimal","omitOptionalSemicolons","useNamedReferences","useShortestReferences","toNamed","decimal","toDecimal","stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","ccount","re","thing","siblingAfter","siblings","siblingBefore","emptyChildren","includeWhitespace","omission","closing","caption","headOrColgroupOrCaption","colgroup","dd","dt","head","li","optgroup","rp","rubyElement","rt","tbody","td","tfoot","th","thead","opening","seen","constants","unquoted","single","double","serializeAttribute","allowParseErrors","allowDangerousCharacters","characterReferences","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","textEntitySubset","handle","one","invalid","unknown","zwitch","node_","_1","_2","bogusComments","doctype","_3","upperDoctype","tightDoctype","omitOptionalTags","selfClosing","closeEmptyElements","voids","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","allowDangerousHtml","emptyCharacterReferences","rehypeStringify","options_","toHtml","receiver","Proxy","ownKeys","JsonTree","minChildIndent","json","iterateLikeStack","cb","sastTextToHast","hast","openStyle","tagForStyle","closedOpenStyle","sastTableToHast","foot","colAlignment","cell","row","cellNumber","forceHeader","table","SqrmContext","db","jsonTree","indentStack","yamlNotAllowedIndent","hastCallbacks","blank","preIndent","footnotes","ss","jsonTag","sqrm","ol","ul","pre","processFootnotes","footnotesLookup","sastFootnotesToHast","appendToDoc","wasAppended","appendTextToNode","minIndent","ls","jsonNode","maybeYaml","yaml","inlineTag","query","include","childrenIndent","arrayElement","Function","req"],"mappings":"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I,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,KAAKC,WAAW,CAAC,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,YAAYF,MAAM,CAACC,SAAS,CAAC,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,KAAK,kBAAkB,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,cAAc,IAAI,SAAS,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,eAAe,IAAI,SAAS,IAAI,QAAQ,KAAK,SAAS,KAAK,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,QAAQ,IAAI,yBAAyB,IAAI,YAAY,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,IAAI,cAAc,IAAI,QAAQ,IAAI,QAAQ,IAAI,cAAc,IAAI,gBAAgB,IAAI,eAAe,IAAI,gBAAgB,IAAI,6BAA6B,IAAI,0BAA0B,IAAI,oBAAoB,IAAI,UAAU,IAAI,WAAW,IAAI,cAAc,IAAI,WAAW,IAAI,oBAAoB,IAAI,SAAS,IAAI,cAAc,IAAI,oCAAoC,IAAI,UAAU,IAAI,SAAS,KAAK,QAAQ,IAAI,WAAW,IAAI,OAAO,IAAI,aAAa,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,KAAK,qBAAqB,IAAI,mBAAmB,IAAI,2BAA2B,IAAI,qBAAqB,IAAI,qBAAqB,IAAI,YAAY,IAAI,kBAAkB,IAAI,SAAS,KAAK,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,0BAA0B,IAAI,cAAc,IAAI,oBAAoB,IAAI,oBAAoB,IAAI,yBAAyB,IAAI,kBAAkB,IAAI,wBAAwB,IAAI,6BAA6B,IAAI,yBAAyB,IAAI,qBAAqB,IAAI,mBAAmB,IAAI,kBAAkB,IAAI,sBAAsB,IAAI,sBAAsB,IAAI,cAAc,IAAI,iBAAiB,IAAI,qBAAqB,IAAI,cAAc,IAAI,wBAAwB,IAAI,sBAAsB,IAAI,mBAAmB,IAAI,sBAAsB,IAAI,uBAAuB,IAAI,oBAAoB,IAAI,uBAAuB,IAAI,YAAY,IAAI,iBAAiB,IAAI,cAAc,IAAI,SAAS,KAAK,WAAW,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,qBAAqB,IAAI,yBAAyB,IAAI,UAAU,IAAI,SAAS,KAAK,YAAY,IAAI,UAAU,IAAI,eAAe,IAAI,gBAAgB,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,iBAAiB,IAAI,QAAQ,IAAI,QAAQ,KAAK,sBAAsB,IAAI,0BAA0B,IAAI,SAAS,KAAK,WAAW,IAAI,eAAe,IAAI,SAAS,IAAI,SAAS,IAAI,MAAM,IAAI,OAAO,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,KAAK,OAAO,IAAI,SAAS,KAAK,iBAAiB,IAAI,qBAAqB,IAAI,qBAAqB,IAAI,mBAAmB,IAAI,gBAAgB,IAAI,sBAAsB,IAAI,iBAAiB,IAAI,SAAS,KAAK,OAAO,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,iBAAiB,IAAI,SAAS,IAAI,mBAAmB,IAAI,SAAS,IAAI,WAAW,IAAI,iBAAiB,IAAI,cAAc,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,UAAU,IAAI,eAAe,IAAI,YAAY,IAAI,QAAQ,IAAI,aAAa,IAAI,iBAAiB,IAAI,mBAAmB,IAAI,mBAAmB,IAAI,UAAU,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,MAAM,IAAI,OAAO,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,eAAe,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,qBAAqB,IAAI,cAAc,IAAI,iBAAiB,IAAI,wBAAwB,IAAI,gBAAgB,IAAI,sBAAsB,IAAI,sBAAsB,IAAI,mBAAmB,IAAI,sBAAsB,IAAI,cAAc,IAAI,mBAAmB,IAAI,oBAAoB,IAAI,YAAY,IAAI,iBAAiB,IAAI,kBAAkB,IAAI,iBAAiB,IAAI,oBAAoB,IAAI,sBAAsB,IAAI,qBAAqB,IAAI,oBAAoB,IAAI,iBAAiB,IAAI,oBAAoB,IAAI,eAAe,IAAI,kBAAkB,IAAI,cAAc,IAAI,mBAAmB,IAAI,qBAAqB,IAAI,kBAAkB,IAAI,gBAAgB,IAAI,aAAa,IAAI,mBAAmB,IAAI,cAAc,IAAI,QAAQ,KAAK,OAAO,IAAI,eAAe,IAAI,WAAW,IAAI,kBAAkB,IAAI,uBAAuB,IAAI,mBAAmB,IAAI,kBAAkB,IAAI,uBAAuB,IAAI,mBAAmB,IAAI,SAAS,KAAK,mBAAmB,IAAI,oBAAoB,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,gBAAgB,IAAI,cAAc,IAAI,QAAQ,KAAK,cAAc,IAAI,SAAS,KAAK,SAAS,IAAI,OAAO,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,wBAAwB,IAAI,uBAAuB,IAAI,sBAAsB,IAAI,0BAA0B,IAAI,yBAAyB,IAAI,mBAAmB,IAAI,YAAY,KAAK,QAAQ,KAAK,YAAY,IAAI,qBAAqB,IAAI,SAAS,IAAI,QAAQ,IAAI,iBAAiB,IAAI,cAAc,IAAI,yBAAyB,IAAI,eAAe,IAAI,aAAa,IAAI,kBAAkB,KAAK,cAAc,IAAI,eAAe,IAAI,oBAAoB,IAAI,wBAAwB,KAAK,sBAAsB,KAAK,mBAAmB,IAAI,yBAAyB,KAAK,oBAAoB,IAAI,oBAAoB,KAAK,iBAAiB,KAAK,oBAAoB,IAAI,uBAAuB,KAAK,yBAAyB,IAAI,YAAY,IAAI,iBAAiB,IAAI,mBAAmB,IAAI,gBAAgB,KAAK,sBAAsB,KAAK,iBAAiB,IAAI,4BAA4B,KAAK,sBAAsB,KAAK,gBAAgB,IAAI,qBAAqB,KAAK,0BAA0B,IAAI,sBAAsB,IAAI,qBAAqB,IAAI,wBAAwB,KAAK,0BAA0B,IAAI,oBAAoB,KAAK,yBAAyB,IAAI,sBAAsB,KAAK,2BAA2B,IAAI,cAAc,KAAK,mBAAmB,IAAI,gBAAgB,IAAI,qBAAqB,KAAK,0BAA0B,IAAI,qBAAqB,KAAK,gBAAgB,KAAK,qBAAqB,IAAI,aAAa,IAAI,kBAAkB,IAAI,sBAAsB,IAAI,kBAAkB,IAAI,mBAAmB,IAAI,SAAS,KAAK,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,KAAK,yBAAyB,IAAI,mBAAmB,IAAI,OAAO,IAAI,SAAS,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,YAAY,IAAI,cAAc,IAAI,gBAAgB,IAAI,oBAAoB,IAAI,aAAa,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,OAAO,IAAI,cAAc,IAAI,kBAAkB,IAAI,SAAS,IAAI,OAAO,IAAI,aAAa,IAAI,kBAAkB,IAAI,uBAAuB,IAAI,kBAAkB,IAAI,UAAU,IAAI,YAAY,IAAI,eAAe,IAAI,iBAAiB,IAAI,SAAS,KAAK,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,KAAK,SAAS,IAAI,SAAS,KAAK,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,OAAO,IAAI,mBAAmB,IAAI,uBAAuB,IAAI,yBAAyB,IAAI,QAAQ,IAAI,QAAQ,IAAI,sBAAsB,IAAI,eAAe,IAAI,kBAAkB,IAAI,wBAAwB,IAAI,iBAAiB,IAAI,uBAAuB,IAAI,uBAAuB,IAAI,oBAAoB,IAAI,uBAAuB,IAAI,eAAe,IAAI,aAAa,IAAI,kBAAkB,IAAI,mBAAmB,IAAI,kBAAkB,IAAI,qBAAqB,IAAI,uBAAuB,IAAI,sBAAsB,IAAI,qBAAqB,IAAI,kBAAkB,IAAI,qBAAqB,IAAI,gBAAgB,IAAI,mBAAmB,IAAI,eAAe,IAAI,SAAS,IAAI,iBAAiB,IAAI,gBAAgB,IAAI,SAAS,IAAI,QAAQ,IAAI,gBAAgB,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,OAAO,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,mBAAmB,IAAI,mBAAmB,IAAI,oBAAoB,IAAI,iBAAiB,IAAI,UAAU,IAAI,gBAAgB,IAAI,SAAS,KAAK,SAAS,IAAI,WAAW,IAAI,uBAAuB,IAAI,iBAAiB,IAAI,sBAAsB,IAAI,mBAAmB,IAAI,wBAAwB,IAAI,gBAAgB,IAAI,SAAS,KAAK,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,gBAAgB,IAAI,aAAa,IAAI,kBAAkB,IAAI,uBAAuB,IAAI,kBAAkB,IAAI,aAAa,IAAI,QAAQ,IAAI,QAAQ,IAAI,aAAa,IAAI,kBAAkB,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,KAAK,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,QAAQ,KAAK,cAAc,IAAI,UAAU,IAAI,eAAe,KAAK,cAAc,IAAI,UAAU,IAAI,eAAe,IAAI,mBAAmB,IAAI,eAAe,IAAI,SAAS,KAAK,cAAc,IAAI,SAAS,KAAK,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,aAAa,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,aAAa,IAAI,eAAe,IAAI,iBAAiB,IAAI,qBAAqB,IAAI,UAAU,IAAI,cAAc,IAAI,UAAU,IAAI,SAAS,KAAK,YAAY,IAAI,eAAe,IAAI,qBAAqB,IAAI,gBAAgB,IAAI,kBAAkB,IAAI,UAAU,IAAI,eAAe,IAAI,YAAY,IAAI,gBAAgB,IAAI,mBAAmB,IAAI,oBAAoB,IAAI,SAAS,IAAI,YAAY,IAAI,UAAU,IAAI,SAAS,KAAK,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,gBAAgB,IAAI,iBAAiB,IAAI,sBAAsB,IAAI,kBAAkB,IAAI,kBAAkB,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,IAAI,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,mBAAmB,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,KAAK,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,OAAO,IAAI,QAAQ,KAAK,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,aAAa,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,UAAU,IAAI,YAAY,IAAI,aAAa,IAAI,WAAW,IAAI,UAAU,IAAI,YAAY,IAAI,UAAU,IAAI,SAAS,KAAK,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,aAAa,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,QAAQ,IAAI,UAAU,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,aAAa,IAAI,UAAU,IAAI,SAAS,IAAI,aAAa,IAAI,gBAAgB,IAAI,cAAc,IAAI,YAAY,IAAI,cAAc,IAAI,WAAW,IAAI,WAAW,IAAI,aAAa,IAAI,SAAS,IAAI,aAAa,IAAI,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,YAAY,IAAI,QAAQ,KAAK,WAAW,IAAI,YAAY,IAAI,WAAW,IAAI,YAAY,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,IAAI,YAAY,IAAI,oBAAoB,IAAI,kBAAkB,IAAI,aAAa,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,IAAI,iBAAiB,IAAI,gBAAgB,IAAI,kBAAkB,IAAI,sBAAsB,IAAI,sBAAsB,IAAI,uBAAuB,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,YAAY,KAAK,SAAS,IAAI,SAAS,KAAK,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,aAAa,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,KAAK,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,UAAU,IAAI,aAAa,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,KAAK,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,QAAQ,IAAI,SAAS,IAAI,cAAc,IAAI,QAAQ,KAAK,SAAS,IAAI,UAAU,IAAI,cAAc,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,oBAAoB,IAAI,qBAAqB,IAAI,aAAa,IAAI,aAAa,IAAI,eAAe,IAAI,gBAAgB,IAAI,gBAAgB,IAAI,SAAS,IAAI,aAAa,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,eAAe,IAAI,cAAc,IAAI,SAAS,IAAI,YAAY,IAAI,WAAW,IAAI,SAAS,KAAK,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,KAAK,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,YAAY,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,QAAQ,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,KAAK,WAAW,IAAI,YAAY,IAAI,gBAAgB,IAAI,gBAAgB,IAAI,aAAa,IAAI,eAAe,IAAI,UAAU,IAAI,WAAW,IAAI,mBAAmB,IAAI,oBAAoB,IAAI,UAAU,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,OAAO,IAAI,YAAY,IAAI,UAAU,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,YAAY,IAAI,WAAW,IAAI,QAAQ,KAAK,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,YAAY,IAAI,gBAAgB,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,kBAAkB,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,KAAK,QAAQ,IAAI,UAAU,IAAI,aAAa,IAAI,aAAa,IAAI,YAAY,IAAI,cAAc,IAAI,mBAAmB,IAAI,cAAc,IAAI,mBAAmB,IAAI,oBAAoB,IAAI,qBAAqB,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,aAAa,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,OAAO,IAAI,aAAa,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,eAAe,IAAI,gBAAgB,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,gBAAgB,IAAI,iBAAiB,IAAI,kBAAkB,IAAI,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,KAAK,UAAU,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,KAAK,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,KAAK,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,aAAa,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,aAAa,IAAI,SAAS,KAAK,WAAW,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,aAAa,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,KAAK,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,MAAM,IAAI,OAAO,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,cAAc,IAAI,WAAW,IAAI,WAAW,IAAI,cAAc,IAAI,eAAe,IAAI,YAAY,IAAI,WAAW,IAAI,cAAc,KAAK,SAAS,KAAK,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,YAAY,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,cAAc,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,KAAK,aAAa,IAAI,aAAa,IAAI,UAAU,IAAI,WAAW,IAAI,kBAAkB,IAAI,mBAAmB,IAAI,SAAS,KAAK,WAAW,IAAI,SAAS,KAAK,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,aAAa,IAAI,aAAa,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,WAAW,IAAI,UAAU,IAAI,aAAa,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,aAAa,IAAI,aAAa,IAAI,YAAY,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,KAAK,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,OAAO,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,KAAK,UAAU,IAAI,SAAS,KAAK,SAAS,KAAK,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,QAAQ,KAAK,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,KAAK,SAAS,KAAK,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,YAAY,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,KAAK,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,YAAY,IAAI,YAAY,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,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I,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,KAAK,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,aAAa,IAAI,aAAa,IAAI,QAAQ,IAAI,WAAW,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,KAAK,QAAQ,KAAK,YAAY,IAAI,SAAS,KAAK,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,IAAI,aAAa,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,IAA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I,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,KAAM,EAAG,EAAG,GAAI,MAAO,GAAI,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,IAAK,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87]}